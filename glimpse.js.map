{"version":3,"file":"glimpse.js","sources":["../components/d3/d3.js","../src/core/array.js","../src/core/object.js","../src/core/string.js","../src/core/function.js","../src/core/format.js","../src/data/dimension/dimension.js","../src/data/functions.js","../src/data/accessors.js","../src/data/selection/selection.js","../src/core/config.js","../src/assets/assets.js","../src/core/asset-loader.js","../src/mixins/toggle.js","../src/d3-ext/select-attr.js","../src/d3-ext/util.js","../src/mixins/zIndex.js","../src/events/pubsub.js","../src/mixins/component.js","../src/mixins/highlight.js","../src/mixins/mixins.js","../src/components/line.js","../src/components/legend.js","../src/components/axis.js","../src/components/label.js","../src/components/overlay.js","../src/components/asset.js","../src/components/area.js","../src/components/scatter.js","../src/components/tooltip.js","../src/components/component.js","../src/core/component-manager.js","../src/layout/layouts.js","../src/layout/layoutmanager.js","../src/core/set.js","../src/data/selection/diff-quotient.js","../src/data/selection/stack.js","../src/data/collection.js","../src/data/domain.js","../src/graphs/graph.js","../src/graphs/graph-builder.js","../src/d3-ext/size.js","../src/d3-ext/position.js","../src/d3-ext/layout.js","../src/d3-ext/border.js","../src/d3-ext/background-color.js","../src/d3-ext/clip.js","../src/d3-ext/d3-ext.js","../src/core/core.js","../src/glimpse.js"],"names":[],"mappings":"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","sourcesContent":["\nd3 = function() {\n  var d3 = {\n    version: \"3.2.8\"\n  };\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n  try {\n    d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n  } catch (error) {\n    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n    d3_element_prototype.setAttribute = function(name, value) {\n      d3_element_setAttribute.call(this, name, value + \"\");\n    };\n    d3_element_prototype.setAttributeNS = function(space, local, value) {\n      d3_element_setAttributeNS.call(this, space, local, value + \"\");\n    };\n    d3_style_prototype.setProperty = function(name, value, priority) {\n      d3_style_setProperty.call(this, name, value + \"\", priority);\n    };\n  }\n  d3.ascending = function(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  };\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (!isNaN(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  function d3_number(x) {\n    return x != null && !isNaN(x);\n  }\n  d3.mean = function(array, f) {\n    var n = array.length, a, m = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n    } else {\n      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n    }\n    return j ? m : undefined;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    if (arguments.length > 1) array = array.map(f);\n    array = array.filter(d3_number);\n    return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n  };\n  d3.bisector = function(f) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  };\n  var d3_bisector = d3.bisector(function(d) {\n    return d;\n  });\n  d3.bisectLeft = d3_bisector.left;\n  d3.bisect = d3.bisectRight = d3_bisector.right;\n  d3.shuffle = function(array) {\n    var m = array.length, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m], array[m] = array[i], array[i] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    return Array.prototype.concat.apply([], arrays);\n  };\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(Math.abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    try {\n      for (var key in properties) {\n        Object.defineProperty(ctor.prototype, key, {\n          value: properties[key],\n          enumerable: false\n        });\n      }\n    } catch (e) {\n      ctor.prototype = properties;\n    }\n  }\n  d3.map = function(object) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) object.forEach(function(key, value) {\n      map.set(key, value);\n    }); else for (var key in object) map.set(key, object[key]);\n    return map;\n  };\n  function d3_Map() {}\n  d3_class(d3_Map, {\n    has: function(key) {\n      return d3_map_prefix + key in this;\n    },\n    get: function(key) {\n      return this[d3_map_prefix + key];\n    },\n    set: function(key, value) {\n      return this[d3_map_prefix + key] = value;\n    },\n    remove: function(key) {\n      key = d3_map_prefix + key;\n      return key in this && delete this[key];\n    },\n    keys: function() {\n      var keys = [];\n      this.forEach(function(key) {\n        keys.push(key);\n      });\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(key, value) {\n        values.push(value);\n      });\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      this.forEach(function(key, value) {\n        entries.push({\n          key: key,\n          value: value\n        });\n      });\n      return entries;\n    },\n    forEach: function(f) {\n      for (var key in this) {\n        if (key.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, key.substring(1), this[key]);\n        }\n      }\n    }\n  });\n  var d3_map_prefix = \"\\0\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {}\n  d3_class(d3_Set, {\n    has: function(value) {\n      return d3_map_prefix + value in this;\n    },\n    add: function(value) {\n      this[d3_map_prefix + value] = true;\n      return value;\n    },\n    remove: function(value) {\n      value = d3_map_prefix + value;\n      return value in this && delete this[value];\n    },\n    values: function() {\n      var values = [];\n      this.forEach(function(value) {\n        values.push(value);\n      });\n      return values;\n    },\n    forEach: function(f) {\n      for (var value in this) {\n        if (value.charCodeAt(0) === d3_map_prefixCode) {\n          f.call(this, value.substring(1));\n        }\n      }\n    }\n  });\n  d3.behavior = {};\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  var d3_array = d3_arraySlice;\n  function d3_arrayCopy(pseudoarray) {\n    var i = pseudoarray.length, array = new Array(i);\n    while (i--) array[i] = pseudoarray[i];\n    return array;\n  }\n  function d3_arraySlice(pseudoarray) {\n    return Array.prototype.slice.call(pseudoarray);\n  }\n  try {\n    d3_array(d3_documentElement.childNodes)[0].nodeType;\n  } catch (e) {\n    d3_array = d3_arrayCopy;\n  }\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.substring(i + 1);\n      type = type.substring(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function(n, s) {\n    return d3_selectMatcher.call(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = function(s, n) {\n      return Sizzle.uniqueSort(Sizzle(s, n));\n    };\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3_selectionRoot;\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.substring(0, i);\n        name = name.substring(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = name.trim().split(/^|\\s+/g)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classed(name, value) {\n    name = name.trim().split(/\\s+/).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function() {\n      return d3_document.createElementNS(name.space, name.local);\n    } : function() {\n      return d3_document.createElementNS(this.namespaceURI, name);\n    };\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments));\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(function() {\n      var parent = this.parentNode;\n      if (parent) parent.removeChild(this);\n    });\n  };\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n        for (i = -1; ++i < n; ) {\n          keyValue = key.call(node = group[i], node.__data__, i);\n          if (nodeByKeyValue.has(keyValue)) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues.push(keyValue);\n        }\n        for (i = -1; ++i < m; ) {\n          keyValue = key.call(groupData, nodeData = groupData[i], i);\n          if (node = nodeByKeyValue.get(keyValue)) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          } else if (!dataByKeyValue.has(keyValue)) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n          dataByKeyValue.set(keyValue, nodeData);\n          nodeByKeyValue.remove(keyValue);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValues[i])) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3.ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    this.each(function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3_selectionPrototype.transition = function() {\n    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3.select = function(node) {\n    var group = [ typeof node === \"string\" ? d3_select(node, d3_document) : node ];\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n    group.parentNode = d3_documentElement;\n    return d3_selection([ group ]);\n  };\n  var d3_selectionRoot = d3.select(d3_documentElement);\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.substring(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  d3_selection_onFilters.forEach(function(k) {\n    if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n  });\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect = d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n  function d3_event_dragSuppress() {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, touchmove = \"touchmove\" + name, selectstart = \"selectstart\" + name, dragstart = \"dragstart\" + name, click = \"click\" + name, w = d3.select(d3_window).on(touchmove, d3_eventPreventDefault).on(selectstart, d3_eventPreventDefault).on(dragstart, d3_eventPreventDefault), style = d3_documentElement.style, select = style[d3_event_dragSelect];\n    style[d3_event_dragSelect] = \"none\";\n    return function(suppressClick) {\n      w.on(name, null);\n      style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        function off() {\n          w.on(click, null);\n        }\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n        svg = d3.select(\"body\").append(\"svg\").style({\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: 0,\n          padding: 0,\n          border: \"none\"\n        }, \"important\");\n        var ctm = svg[0][0].getScreenCTM();\n        d3_mouse_bug44083 = !(ctm.f || ctm.e);\n        svg.remove();\n      }\n      if (d3_mouse_bug44083) {\n        point.x = e.pageX;\n        point.y = e.pageY;\n      } else {\n        point.x = e.clientX;\n        point.y = e.clientY;\n      }\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function touchid() {\n      return d3.event.changedTouches[0].identifier;\n    }\n    function touchposition(parent, id) {\n      return d3.touches(parent).filter(function(p) {\n        return p.identifier === id;\n      })[0];\n    }\n    function dragstart(id, position, move, end) {\n      return function() {\n        var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n        if (origin) {\n          offset = origin.apply(target, arguments);\n          offset = [ offset.x - origin_[0], offset.y - origin_[1] ];\n        } else {\n          offset = [ 0, 0 ];\n        }\n        event_({\n          type: \"dragstart\"\n        });\n        function moved() {\n          if (!parent) return ended();\n          var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n          dragged |= dx | dy;\n          origin_ = p;\n          event_({\n            type: \"drag\",\n            x: p[0] + offset[0],\n            y: p[1] + offset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n          dragRestore(dragged && d3.event.target === eventTarget);\n          event_({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  d3.behavior.zoom = function() {\n    var translate = [ 0, 0 ], translate0, scale = 1, scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", touchstart = \"touchstart.zoom\", touchmove = \"touchmove.zoom\", touchend = \"touchend.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoom\"), x0, x1, y0, y1;\n    function zoom() {\n      this.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.translate = function(x) {\n      if (!arguments.length) return translate;\n      translate = x.map(Number);\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = +x;\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(x) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = x == null ? d3_behavior_zoomInfinity : x.map(Number);\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      translate = [ 0, 0 ];\n      scale = 1;\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      translate = [ 0, 0 ];\n      scale = 1;\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - translate[0]) / scale, (p[1] - translate[1]) / scale ];\n    }\n    function point(l) {\n      return [ l[0] * scale + translate[0], l[1] * scale + translate[1] ];\n    }\n    function scaleTo(s) {\n      scale = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      translate[0] += p[0] - l[0];\n      translate[1] += p[1] - l[1];\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - translate[0]) / scale;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - translate[1]) / scale;\n      }).map(y0.invert));\n    }\n    function dispatch(event) {\n      rescale();\n      event({\n        type: \"zoom\",\n        scale: scale,\n        translate: translate\n      });\n    }\n    function mousedowned() {\n      var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(target), l);\n        dispatch(event_);\n      }\n      function ended() {\n        w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === eventTarget);\n      }\n    }\n    function touchstarted() {\n      var target = this, event_ = event.of(target, arguments), locations0, distance0 = 0, scale0, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n      started();\n      function relocate() {\n        var touches = d3.touches(target);\n        scale0 = scale;\n        locations0 = {};\n        touches.forEach(function(t) {\n          locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var now = Date.now(), touches = relocate();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0], l = locations0[p.identifier];\n            scaleTo(scale * 2);\n            translateTo(p, l);\n            d3_eventPreventDefault();\n            dispatch(event_);\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(target), p0 = touches[0], l0 = locations0[p0.identifier];\n        if (p1 = touches[1]) {\n          var p1, l1 = locations0[p1.identifier], scale1 = d3.event.scale;\n          if (scale1 == null) {\n            var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1;\n            scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          }\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        dispatch(event_);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          relocate();\n        } else {\n          w.on(touchmove, null).on(touchend, null);\n          t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n          dragRestore();\n        }\n      }\n    }\n    function mousewheeled() {\n      d3_eventPreventDefault();\n      if (!translate0) translate0 = location(d3.mouse(this));\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * scale);\n      translateTo(d3.mouse(this), translate0);\n      dispatch(event.of(this, arguments));\n    }\n    function mousewheelreset() {\n      translate0 = null;\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), l = location(p), k = Math.log(scale) / Math.LN2;\n      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n      translateTo(p, l);\n      dispatch(event.of(this, arguments));\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ];\n  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n  }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n    return d3.event.wheelDelta;\n  }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n    return -d3.event.detail;\n  }, \"MozMousePixelScroll\");\n  function d3_Color() {}\n  d3_Color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = function(h, s, l) {\n    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n  };\n  function d3_hsl(h, s, l) {\n    return new d3_Hsl(h, s, l);\n  }\n  function d3_Hsl(h, s, l) {\n    this.h = h;\n    this.s = s;\n    this.l = l;\n  }\n  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  var π = Math.PI, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? π / 2 : x < -1 ? -π / 2 : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return (Math.exp(x) - Math.exp(-x)) / 2;\n  }\n  function d3_cosh(x) {\n    return (Math.exp(x) + Math.exp(-x)) / 2;\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  d3.hcl = function(h, c, l) {\n    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n  };\n  function d3_hcl(h, c, l) {\n    return new d3_Hcl(h, c, l);\n  }\n  function d3_Hcl(h, c, l) {\n    this.h = h;\n    this.c = c;\n    this.l = l;\n  }\n  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n  d3_hclPrototype.brighter = function(k) {\n    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = function(l, a, b) {\n    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n  };\n  function d3_lab(l, a, b) {\n    return new d3_Lab(l, a, b);\n  }\n  function d3_Lab(l, a, b) {\n    this.l = l;\n    this.a = a;\n    this.b = b;\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n  d3_labPrototype.brighter = function(k) {\n    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = function(r, g, b) {\n    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n  };\n  function d3_rgbNumber(value) {\n    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  function d3_rgb(r, g, b) {\n    return new d3_Rgb(r, g, b);\n  }\n  function d3_Rgb(r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, name;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n    if (format != null && format.charAt(0) === \"#\") {\n      if (format.length === 4) {\n        r = format.charAt(1);\n        r += r;\n        g = format.charAt(2);\n        g += g;\n        b = format.charAt(3);\n        b += b;\n      } else if (format.length === 7) {\n        r = format.substring(1, 3);\n        g = format.substring(3, 5);\n        b = format.substring(5, 7);\n      }\n      r = parseInt(r, 16);\n      g = parseInt(g, 16);\n      b = parseInt(b, 16);\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  function d3_identity(d) {\n    return d;\n  }\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3.xhr(url, mimeType, callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr.row(row);\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.substring(j, I - k);\n        }\n        return text.substring(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && !(a = f(a, n++))) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      callback: callback,\n      time: time,\n      next: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.next = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_replace(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    d3_timer_active.callback = callback;\n    d3_timer_active.time = then + delay;\n  }\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.time) d3_timer_active.flush = d3_timer_active.callback(now - d3_timer_active.time);\n      d3_timer_active = d3_timer_active.next;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.flush) {\n        t1 = t0 ? t0.next = t1.next : d3_timer_queueHead = t1.next;\n      } else {\n        if (t1.time < time) time = t1.time;\n        t1 = (t0 = t1).next;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  var d3_format_decimalPoint = \".\", d3_format_thousandsSeparator = \",\", d3_format_grouping = [ 3, 3 ], d3_format_currencySymbol = \"$\";\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, Math.abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  d3.format = function(specifier) {\n    var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, suffix = \"\", integer = false;\n    if (precision) precision = +precision.substring(1);\n    if (zfill || fill === \"0\" && align === \"=\") {\n      zfill = fill = \"0\";\n      align = \"=\";\n      if (comma) width -= Math.floor((width - 1) / 4);\n    }\n    switch (type) {\n     case \"n\":\n      comma = true;\n      type = \"g\";\n      break;\n\n     case \"%\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"f\";\n      break;\n\n     case \"p\":\n      scale = 100;\n      suffix = \"%\";\n      type = \"r\";\n      break;\n\n     case \"b\":\n     case \"o\":\n     case \"x\":\n     case \"X\":\n      if (symbol === \"#\") symbol = \"0\" + type.toLowerCase();\n\n     case \"c\":\n     case \"d\":\n      integer = true;\n      precision = 0;\n      break;\n\n     case \"s\":\n      scale = -1;\n      type = \"r\";\n      break;\n    }\n    if (symbol === \"#\") symbol = \"\"; else if (symbol === \"$\") symbol = d3_format_currencySymbol;\n    if (type == \"r\" && !precision) type = \"g\";\n    if (precision != null) {\n      if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n    }\n    type = d3_format_types.get(type) || d3_format_typeDefault;\n    var zcomma = zfill && comma;\n    return function(value) {\n      if (integer && value % 1) return \"\";\n      var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n      if (scale < 0) {\n        var prefix = d3.formatPrefix(value, precision);\n        value = prefix.scale(value);\n        suffix = prefix.symbol;\n      } else {\n        value *= scale;\n      }\n      value = type(value, precision);\n      var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : d3_format_decimalPoint + value.substring(i + 1);\n      if (!zfill && comma) before = d3_format_group(before);\n      var length = symbol.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n      if (zcomma) before = d3_format_group(padding + before);\n      negative += symbol;\n      value = before + after;\n      return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n    };\n  };\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_format_group = d3_identity;\n  if (d3_format_grouping) {\n    var d3_format_groupingLength = d3_format_grouping.length;\n    d3_format_group = function(value) {\n      var i = value.length, t = [], j = 0, g = d3_format_grouping[0];\n      while (i > 0 && g > 0) {\n        t.push(value.substring(i -= g, i + g));\n        g = d3_format_grouping[j = (j + 1) % d3_format_groupingLength];\n      }\n      return t.reverse().join(d3_format_thousandsSeparator);\n    };\n  }\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      var coordinate = object.coordinates;\n      listener.point(coordinate[0], coordinate[1]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length, coordinate;\n      while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return Math.abs(a[0] - b[0]) < ε && Math.abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = Math.abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += Math.abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (Math.abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, inside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = {\n        point: p0,\n        points: segment,\n        other: null,\n        visited: false,\n        entry: true,\n        subject: true\n      }, b = {\n        point: p0,\n        points: [ p0 ],\n        other: a,\n        visited: false,\n        entry: false,\n        subject: false\n      };\n      a.other = b;\n      subject.push(a);\n      clip.push(b);\n      a = {\n        point: p1,\n        points: [ p1 ],\n        other: null,\n        visited: false,\n        entry: false,\n        subject: true\n      };\n      b = {\n        point: p1,\n        points: [ p1 ],\n        other: a,\n        visited: false,\n        entry: true,\n        subject: false\n      };\n      a.other = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    if (inside) for (var i = 1, e = !inside(clip[0].point), n = clip.length; i < n; ++i) {\n      clip[i].entry = e = !e;\n    }\n    var start = subject[0], current, points, point;\n    while (1) {\n      current = start;\n      while (current.visited) if ((current = current.next) === start) return;\n      points = current.points;\n      listener.lineStart();\n      do {\n        current.visited = current.other.visited = true;\n        if (current.entry) {\n          if (current.subject) {\n            for (var i = 0; i < points.length; i++) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.point, current.next.point, 1, listener);\n          }\n          current = current.next;\n        } else {\n          if (current.subject) {\n            points = current.prev.points;\n            for (var i = points.length; --i >= 0; ) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.point, current.prev.point, -1, listener);\n          }\n          current = current.prev;\n        }\n        current = current.other;\n        points = current.points;\n      } while (!current.visited);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.next = b = array[i];\n      b.prev = a;\n      a = b;\n    }\n    a.next = b = array[0];\n    b.prev = a;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, polygonContains) {\n    return function(listener) {\n      var line = clipLine(listener);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n          listener.polygonStart();\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          if (segments.length) {\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, null, interpolate, listener);\n          } else if (polygonContains(polygon)) {\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          listener.polygonEnd();\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        if (pointVisible(λ, φ)) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        line.point(λ, φ);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n      function pointRing(λ, φ) {\n        ringListener.point(λ, φ);\n        ring.push([ λ, φ ]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          listener.lineStart();\n          while (++i < n) listener.point((point = segment[i])[0], point[1]);\n          listener.lineEnd();\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.point)[0] < 0 ? a[1] - π / 2 - ε : π / 2 - a[1]) - ((b = b.point)[0] < 0 ? b[1] - π / 2 - ε : π / 2 - b[1]);\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, polar = false, southPole = false, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = Math.abs(dλ) > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n        if (Math.abs(φ) < ε) southPole = true;\n        polarAngle += antimeridian ? dλ + (dλ >= 0 ? 2 : -2) * π : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n      if (Math.abs(polarAngle) > ε) polar = true;\n    }\n    return (!southPole && !polar && d3_geo_areaRingSum < 0 || polarAngle < -ε) ^ winding & 1;\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, d3_geo_clipAntimeridianPolygonContains);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = Math.abs(λ1 - λ0);\n        if (Math.abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? π / 2 : -π / 2);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (Math.abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (Math.abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return Math.abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * π / 2;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (Math.abs(from[0] - to[0]) > ε) {\n      var s = (from[0] < to[0] ? 1 : -1) * π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  var d3_geo_clipAntimeridianPoint = [ -π, 0 ];\n  function d3_geo_clipAntimeridianPolygonContains(polygon) {\n    return d3_geo_pointInPolygon(d3_geo_clipAntimeridianPoint, polygon);\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, point = [ radius, 0 ], notHemisphere = Math.abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, polygonContains);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = Math.abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (Math.abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n    function polygonContains(polygon) {\n      return d3_geo_pointInPolygon(point, polygon);\n    }\n  }\n  var d3_geo_clipViewMAX = 1e9;\n  function d3_geo_clipView(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          if ((segments = d3.merge(segments)).length) {\n            listener.polygonStart();\n            d3_geo_clipPolygon(segments, compare, inside, interpolate, listener);\n            listener.polygonEnd();\n          } else if (insidePolygon([ x0, y0 ])) {\n            listener.polygonStart(), listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd(), listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function inside(point) {\n        var a = corner(point, -1), i = insidePolygon([ a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0 ]);\n        return i;\n      }\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && isLeft(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && isLeft(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function isLeft(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function visible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (visible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipViewMAX, Math.min(d3_geo_clipViewMAX, x));\n        y = Math.max(-d3_geo_clipViewMAX, Math.min(d3_geo_clipViewMAX, y));\n        var v = visible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var a = [ x_, y_ ], b = [ x, y ];\n            if (clipLine(a, b)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(a[0], a[1]);\n              }\n              listener.point(b[0], b[1]);\n              if (!v) listener.lineEnd();\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return Math.abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : Math.abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : Math.abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.point, b.point);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n    function clipLine(a, b) {\n      var dx = b[0] - a[0], dy = b[1] - a[1], t = [ 0, 1 ];\n      if (Math.abs(dx) < ε && Math.abs(dy) < ε) return x0 <= a[0] && a[0] <= x1 && y0 <= a[1] && a[1] <= y1;\n      if (d3_geo_clipViewT(x0 - a[0], dx, t) && d3_geo_clipViewT(a[0] - x1, -dx, t) && d3_geo_clipViewT(y0 - a[1], dy, t) && d3_geo_clipViewT(a[1] - y1, -dy, t)) {\n        if (t[1] < 1) {\n          b[0] = a[0] + t[1] * dx;\n          b[1] = a[1] + t[1] * dy;\n        }\n        if (t[0] > 0) {\n          a[0] += t[0] * dx;\n          a[1] += t[0] * dy;\n        }\n        return true;\n      }\n      return false;\n    }\n  }\n  function d3_geo_clipViewT(num, denominator, t) {\n    if (Math.abs(denominator) < ε) return num <= 0;\n    var u = num / denominator;\n    if (denominator > 0) {\n      if (u > t[1]) return false;\n      if (u > t[0]) t[0] = u;\n    } else {\n      if (u < t[0]) return false;\n      if (u < t[1]) t[1] = u;\n    }\n    return true;\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += Math.abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x, y);\n      context.arc(x, y, pointRadius, 0, 2 * π);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = Math.abs(Math.abs(c) - 1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || Math.abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(λ, φ) {\n      return project([ λ * d3_degrees, φ * d3_degrees ]);\n    });\n    return function(stream) {\n      stream = resample(stream);\n      return {\n        point: function(λ, φ) {\n          stream.point(λ * d3_radians, φ * d3_radians);\n        },\n        sphere: function() {\n          stream.sphere();\n        },\n        lineStart: function() {\n          stream.lineStart();\n        },\n        lineEnd: function() {\n          stream.lineEnd();\n        },\n        polygonStart: function() {\n          stream.polygonStart();\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n        }\n      };\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadiansRotate(rotate, preclip(projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ == null ? d3_identity : d3_geo_clipView(_[0][0], _[0][1], _[1][0], _[1][1]);\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) {\n        stream.valid = false;\n        stream = null;\n      }\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadiansRotate(rotate, stream) {\n    return {\n      point: function(x, y) {\n        y = rotate(x * d3_radians, y * d3_radians), x = y[0];\n        stream.point(x > π ? x - 2 * π : x < -π ? x + 2 * π : x, y[1]);\n      },\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_equirectangular;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - 2 * π : λ < -π ? λ + 2 * π : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * 2 * π;\n      } else {\n        from = radius + direction * 2 * π;\n        to = radius;\n      }\n      var point;\n      for (var step = direction * precision, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return Math.abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return Math.abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = Math.abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      var ρ = Math.abs(Math.abs(φ) - π / 2) < ε ? 0 : F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - π / 2 ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (Math.abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - π / 2 ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    var B = Math.cos(φ) * Math.sin(λ);\n    return [ Math.log((1 + B) / (1 - B)) / 2, Math.atan2(Math.tan(φ), Math.cos(λ)) ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ Math.atan2(d3_sinh(x), Math.cos(y)), d3_asin(Math.sin(y) / d3_cosh(x)) ];\n  };\n  (d3.geo.transverseMercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_transverseMercator);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  d3.svg = {};\n  function d3_svg_line(projection) {\n    var x = d3_svg_lineX, y = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  function d3_svg_lineX(d) {\n    return d[0];\n  }\n  function d3_svg_lineY(d) {\n    return d[1];\n  }\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (Math.abs(d) < 1e-6) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_svg_lineX, y = d3_svg_lineY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), n = data.length, vertices, plen = n - 1, points = [], stack = [], d, i, j, h = 0, x1, y1, x2, y2, u, v, a, sp;\n      if (fx === d3_svg_lineX && y === d3_svg_lineY) vertices = data; else for (i = 0, \n      vertices = []; i < n; ++i) {\n        vertices.push([ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]);\n      }\n      for (i = 1; i < n; ++i) {\n        if (vertices[i][1] < vertices[h][1] || vertices[i][1] == vertices[h][1] && vertices[i][0] < vertices[h][0]) h = i;\n      }\n      for (i = 0; i < n; ++i) {\n        if (i === h) continue;\n        y1 = vertices[i][1] - vertices[h][1];\n        x1 = vertices[i][0] - vertices[h][0];\n        points.push({\n          angle: Math.atan2(y1, x1),\n          index: i\n        });\n      }\n      points.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      a = points[0].angle;\n      v = points[0].index;\n      u = 0;\n      for (i = 1; i < plen; ++i) {\n        j = points[i].index;\n        if (a == points[i].angle) {\n          x1 = vertices[v][0] - vertices[h][0];\n          y1 = vertices[v][1] - vertices[h][1];\n          x2 = vertices[j][0] - vertices[h][0];\n          y2 = vertices[j][1] - vertices[h][1];\n          if (x1 * x1 + y1 * y1 >= x2 * x2 + y2 * y2) {\n            points[i].index = -1;\n            continue;\n          } else {\n            points[u].index = -1;\n          }\n        }\n        a = points[i].angle;\n        u = i;\n        v = j;\n      }\n      stack.push(h);\n      for (i = 0, j = 0; i < 2; ++j) {\n        if (points[j].index > -1) {\n          stack.push(points[j].index);\n          i++;\n        }\n      }\n      sp = stack.length;\n      for (;j < plen; ++j) {\n        if (points[j].index < 0) continue;\n        while (!d3_geom_hullCCW(stack[sp - 2], stack[sp - 1], points[j].index, vertices)) {\n          --sp;\n        }\n        stack[sp++] = points[j].index;\n      }\n      var poly = [];\n      for (i = sp - 1; i >= 0; --i) poly.push(data[stack[i]]);\n      return poly;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullCCW(i1, i2, i3, v) {\n    var t, a, b, c, d, e, f;\n    t = v[i1];\n    a = t[0];\n    b = t[1];\n    t = v[i2];\n    c = t[0];\n    d = t[1];\n    t = v[i3];\n    e = t[0];\n    f = t[1];\n    return (f - b) * (c - a) - (d - b) * (e - a) > 0;\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  d3.geom.delaunay = function(vertices) {\n    var edges = vertices.map(function() {\n      return [];\n    }), triangles = [];\n    d3_geom_voronoiTessellate(vertices, function(e) {\n      edges[e.region.l.index].push(vertices[e.region.r.index]);\n    });\n    edges.forEach(function(edge, i) {\n      var v = vertices[i], cx = v[0], cy = v[1];\n      edge.forEach(function(v) {\n        v.angle = Math.atan2(v[0] - cx, v[1] - cy);\n      });\n      edge.sort(function(a, b) {\n        return a.angle - b.angle;\n      });\n      for (var j = 0, m = edge.length - 1; j < m; j++) {\n        triangles.push([ v, edge[j], edge[j + 1] ]);\n      }\n    });\n    return triangles;\n  };\n  d3.geom.voronoi = function(points) {\n    var x = d3_svg_lineX, y = d3_svg_lineY, clipPolygon = null;\n    if (arguments.length) return voronoi(points);\n    function voronoi(data) {\n      var points, polygons = data.map(function() {\n        return [];\n      }), fx = d3_functor(x), fy = d3_functor(y), d, i, n = data.length, Z = 1e6;\n      if (fx === d3_svg_lineX && fy === d3_svg_lineY) points = data; else for (points = new Array(n), \n      i = 0; i < n; ++i) {\n        points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ];\n      }\n      d3_geom_voronoiTessellate(points, function(e) {\n        var s1, s2, x1, x2, y1, y2;\n        if (e.a === 1 && e.b >= 0) {\n          s1 = e.ep.r;\n          s2 = e.ep.l;\n        } else {\n          s1 = e.ep.l;\n          s2 = e.ep.r;\n        }\n        if (e.a === 1) {\n          y1 = s1 ? s1.y : -Z;\n          x1 = e.c - e.b * y1;\n          y2 = s2 ? s2.y : Z;\n          x2 = e.c - e.b * y2;\n        } else {\n          x1 = s1 ? s1.x : -Z;\n          y1 = e.c - e.a * x1;\n          x2 = s2 ? s2.x : Z;\n          y2 = e.c - e.a * x2;\n        }\n        var v1 = [ x1, y1 ], v2 = [ x2, y2 ];\n        polygons[e.region.l.index].push(v1, v2);\n        polygons[e.region.r.index].push(v1, v2);\n      });\n      polygons = polygons.map(function(polygon, i) {\n        var cx = points[i][0], cy = points[i][1], angle = polygon.map(function(v) {\n          return Math.atan2(v[0] - cx, v[1] - cy);\n        }), order = d3.range(polygon.length).sort(function(a, b) {\n          return angle[a] - angle[b];\n        });\n        return order.filter(function(d, i) {\n          return !i || angle[d] - angle[order[i - 1]] > ε;\n        }).map(function(d) {\n          return polygon[d];\n        });\n      });\n      polygons.forEach(function(polygon, i) {\n        var n = polygon.length;\n        if (!n) return polygon.push([ -Z, -Z ], [ -Z, Z ], [ Z, Z ], [ Z, -Z ]);\n        if (n > 2) return;\n        var p0 = points[i], p1 = polygon[0], p2 = polygon[1], x0 = p0[0], y0 = p0[1], x1 = p1[0], y1 = p1[1], x2 = p2[0], y2 = p2[1], dx = Math.abs(x2 - x1), dy = y2 - y1;\n        if (Math.abs(dy) < ε) {\n          var y = y0 < y1 ? -Z : Z;\n          polygon.push([ -Z, y ], [ Z, y ]);\n        } else if (dx < ε) {\n          var x = x0 < x1 ? -Z : Z;\n          polygon.push([ x, -Z ], [ x, Z ]);\n        } else {\n          var y = (x2 - x1) * (y1 - y0) < (x1 - x0) * (y2 - y1) ? Z : -Z, z = Math.abs(dy) - dx;\n          if (Math.abs(z) < ε) {\n            polygon.push([ dy < 0 ? y : -y, y ]);\n          } else {\n            if (z > 0) y *= -1;\n            polygon.push([ -Z, y ], [ Z, y ]);\n          }\n        }\n      });\n      if (clipPolygon) for (i = 0; i < n; ++i) clipPolygon.clip(polygons[i]);\n      for (i = 0; i < n; ++i) polygons[i].point = data[i];\n      return polygons;\n    }\n    voronoi.x = function(_) {\n      return arguments.length ? (x = _, voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (y = _, voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipPolygon && [ clipPolygon[0], clipPolygon[2] ];\n      if (_ == null) clipPolygon = null; else {\n        var x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n        clipPolygon = d3.geom.polygon([ [ x1, y1 ], [ x1, y2 ], [ x2, y2 ], [ x2, y1 ] ]);\n      }\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipPolygon && clipPolygon[2];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    voronoi.links = function(data) {\n      var points, graph = data.map(function() {\n        return [];\n      }), links = [], fx = d3_functor(x), fy = d3_functor(y), d, i, n = data.length;\n      if (fx === d3_svg_lineX && fy === d3_svg_lineY) points = data; else for (points = new Array(n), \n      i = 0; i < n; ++i) {\n        points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ];\n      }\n      d3_geom_voronoiTessellate(points, function(e) {\n        var l = e.region.l.index, r = e.region.r.index;\n        if (graph[l][r]) return;\n        graph[l][r] = graph[r][l] = true;\n        links.push({\n          source: data[l],\n          target: data[r]\n        });\n      });\n      return links;\n    };\n    voronoi.triangles = function(data) {\n      if (x === d3_svg_lineX && y === d3_svg_lineY) return d3.geom.delaunay(data);\n      var points = new Array(n), fx = d3_functor(x), fy = d3_functor(y), d, i = -1, n = data.length;\n      while (++i < n) {\n        (points[i] = [ +fx.call(this, d = data[i], i), +fy.call(this, d, i) ]).data = d;\n      }\n      return d3.geom.delaunay(points).map(function(triangle) {\n        return triangle.map(function(point) {\n          return point.data;\n        });\n      });\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiOpposite = {\n    l: \"r\",\n    r: \"l\"\n  };\n  function d3_geom_voronoiTessellate(points, callback) {\n    var Sites = {\n      list: points.map(function(v, i) {\n        return {\n          index: i,\n          x: v[0],\n          y: v[1]\n        };\n      }).sort(function(a, b) {\n        return a.y < b.y ? -1 : a.y > b.y ? 1 : a.x < b.x ? -1 : a.x > b.x ? 1 : 0;\n      }),\n      bottomSite: null\n    };\n    var EdgeList = {\n      list: [],\n      leftEnd: null,\n      rightEnd: null,\n      init: function() {\n        EdgeList.leftEnd = EdgeList.createHalfEdge(null, \"l\");\n        EdgeList.rightEnd = EdgeList.createHalfEdge(null, \"l\");\n        EdgeList.leftEnd.r = EdgeList.rightEnd;\n        EdgeList.rightEnd.l = EdgeList.leftEnd;\n        EdgeList.list.unshift(EdgeList.leftEnd, EdgeList.rightEnd);\n      },\n      createHalfEdge: function(edge, side) {\n        return {\n          edge: edge,\n          side: side,\n          vertex: null,\n          l: null,\n          r: null\n        };\n      },\n      insert: function(lb, he) {\n        he.l = lb;\n        he.r = lb.r;\n        lb.r.l = he;\n        lb.r = he;\n      },\n      leftBound: function(p) {\n        var he = EdgeList.leftEnd;\n        do {\n          he = he.r;\n        } while (he != EdgeList.rightEnd && Geom.rightOf(he, p));\n        he = he.l;\n        return he;\n      },\n      del: function(he) {\n        he.l.r = he.r;\n        he.r.l = he.l;\n        he.edge = null;\n      },\n      right: function(he) {\n        return he.r;\n      },\n      left: function(he) {\n        return he.l;\n      },\n      leftRegion: function(he) {\n        return he.edge == null ? Sites.bottomSite : he.edge.region[he.side];\n      },\n      rightRegion: function(he) {\n        return he.edge == null ? Sites.bottomSite : he.edge.region[d3_geom_voronoiOpposite[he.side]];\n      }\n    };\n    var Geom = {\n      bisect: function(s1, s2) {\n        var newEdge = {\n          region: {\n            l: s1,\n            r: s2\n          },\n          ep: {\n            l: null,\n            r: null\n          }\n        };\n        var dx = s2.x - s1.x, dy = s2.y - s1.y, adx = dx > 0 ? dx : -dx, ady = dy > 0 ? dy : -dy;\n        newEdge.c = s1.x * dx + s1.y * dy + (dx * dx + dy * dy) * .5;\n        if (adx > ady) {\n          newEdge.a = 1;\n          newEdge.b = dy / dx;\n          newEdge.c /= dx;\n        } else {\n          newEdge.b = 1;\n          newEdge.a = dx / dy;\n          newEdge.c /= dy;\n        }\n        return newEdge;\n      },\n      intersect: function(el1, el2) {\n        var e1 = el1.edge, e2 = el2.edge;\n        if (!e1 || !e2 || e1.region.r == e2.region.r) {\n          return null;\n        }\n        var d = e1.a * e2.b - e1.b * e2.a;\n        if (Math.abs(d) < 1e-10) {\n          return null;\n        }\n        var xint = (e1.c * e2.b - e2.c * e1.b) / d, yint = (e2.c * e1.a - e1.c * e2.a) / d, e1r = e1.region.r, e2r = e2.region.r, el, e;\n        if (e1r.y < e2r.y || e1r.y == e2r.y && e1r.x < e2r.x) {\n          el = el1;\n          e = e1;\n        } else {\n          el = el2;\n          e = e2;\n        }\n        var rightOfSite = xint >= e.region.r.x;\n        if (rightOfSite && el.side === \"l\" || !rightOfSite && el.side === \"r\") {\n          return null;\n        }\n        return {\n          x: xint,\n          y: yint\n        };\n      },\n      rightOf: function(he, p) {\n        var e = he.edge, topsite = e.region.r, rightOfSite = p.x > topsite.x;\n        if (rightOfSite && he.side === \"l\") {\n          return 1;\n        }\n        if (!rightOfSite && he.side === \"r\") {\n          return 0;\n        }\n        if (e.a === 1) {\n          var dyp = p.y - topsite.y, dxp = p.x - topsite.x, fast = 0, above = 0;\n          if (!rightOfSite && e.b < 0 || rightOfSite && e.b >= 0) {\n            above = fast = dyp >= e.b * dxp;\n          } else {\n            above = p.x + p.y * e.b > e.c;\n            if (e.b < 0) {\n              above = !above;\n            }\n            if (!above) {\n              fast = 1;\n            }\n          }\n          if (!fast) {\n            var dxs = topsite.x - e.region.l.x;\n            above = e.b * (dxp * dxp - dyp * dyp) < dxs * dyp * (1 + 2 * dxp / dxs + e.b * e.b);\n            if (e.b < 0) {\n              above = !above;\n            }\n          }\n        } else {\n          var yl = e.c - e.a * p.x, t1 = p.y - yl, t2 = p.x - topsite.x, t3 = yl - topsite.y;\n          above = t1 * t1 > t2 * t2 + t3 * t3;\n        }\n        return he.side === \"l\" ? above : !above;\n      },\n      endPoint: function(edge, side, site) {\n        edge.ep[side] = site;\n        if (!edge.ep[d3_geom_voronoiOpposite[side]]) return;\n        callback(edge);\n      },\n      distance: function(s, t) {\n        var dx = s.x - t.x, dy = s.y - t.y;\n        return Math.sqrt(dx * dx + dy * dy);\n      }\n    };\n    var EventQueue = {\n      list: [],\n      insert: function(he, site, offset) {\n        he.vertex = site;\n        he.ystar = site.y + offset;\n        for (var i = 0, list = EventQueue.list, l = list.length; i < l; i++) {\n          var next = list[i];\n          if (he.ystar > next.ystar || he.ystar == next.ystar && site.x > next.vertex.x) {\n            continue;\n          } else {\n            break;\n          }\n        }\n        list.splice(i, 0, he);\n      },\n      del: function(he) {\n        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l && ls[i] != he; ++i) {}\n        ls.splice(i, 1);\n      },\n      empty: function() {\n        return EventQueue.list.length === 0;\n      },\n      nextEvent: function(he) {\n        for (var i = 0, ls = EventQueue.list, l = ls.length; i < l; ++i) {\n          if (ls[i] == he) return ls[i + 1];\n        }\n        return null;\n      },\n      min: function() {\n        var elem = EventQueue.list[0];\n        return {\n          x: elem.vertex.x,\n          y: elem.ystar\n        };\n      },\n      extractMin: function() {\n        return EventQueue.list.shift();\n      }\n    };\n    EdgeList.init();\n    Sites.bottomSite = Sites.list.shift();\n    var newSite = Sites.list.shift(), newIntStar;\n    var lbnd, rbnd, llbnd, rrbnd, bisector;\n    var bot, top, temp, p, v;\n    var e, pm;\n    while (true) {\n      if (!EventQueue.empty()) {\n        newIntStar = EventQueue.min();\n      }\n      if (newSite && (EventQueue.empty() || newSite.y < newIntStar.y || newSite.y == newIntStar.y && newSite.x < newIntStar.x)) {\n        lbnd = EdgeList.leftBound(newSite);\n        rbnd = EdgeList.right(lbnd);\n        bot = EdgeList.rightRegion(lbnd);\n        e = Geom.bisect(bot, newSite);\n        bisector = EdgeList.createHalfEdge(e, \"l\");\n        EdgeList.insert(lbnd, bisector);\n        p = Geom.intersect(lbnd, bisector);\n        if (p) {\n          EventQueue.del(lbnd);\n          EventQueue.insert(lbnd, p, Geom.distance(p, newSite));\n        }\n        lbnd = bisector;\n        bisector = EdgeList.createHalfEdge(e, \"r\");\n        EdgeList.insert(lbnd, bisector);\n        p = Geom.intersect(bisector, rbnd);\n        if (p) {\n          EventQueue.insert(bisector, p, Geom.distance(p, newSite));\n        }\n        newSite = Sites.list.shift();\n      } else if (!EventQueue.empty()) {\n        lbnd = EventQueue.extractMin();\n        llbnd = EdgeList.left(lbnd);\n        rbnd = EdgeList.right(lbnd);\n        rrbnd = EdgeList.right(rbnd);\n        bot = EdgeList.leftRegion(lbnd);\n        top = EdgeList.rightRegion(rbnd);\n        v = lbnd.vertex;\n        Geom.endPoint(lbnd.edge, lbnd.side, v);\n        Geom.endPoint(rbnd.edge, rbnd.side, v);\n        EdgeList.del(lbnd);\n        EventQueue.del(rbnd);\n        EdgeList.del(rbnd);\n        pm = \"l\";\n        if (bot.y > top.y) {\n          temp = bot;\n          bot = top;\n          top = temp;\n          pm = \"r\";\n        }\n        e = Geom.bisect(bot, top);\n        bisector = EdgeList.createHalfEdge(e, pm);\n        EdgeList.insert(llbnd, bisector);\n        Geom.endPoint(e, d3_geom_voronoiOpposite[pm], v);\n        p = Geom.intersect(llbnd, bisector);\n        if (p) {\n          EventQueue.del(llbnd);\n          EventQueue.insert(llbnd, p, Geom.distance(p, bot));\n        }\n        p = Geom.intersect(bisector, rrbnd);\n        if (p) {\n          EventQueue.insert(bisector, p, Geom.distance(p, bot));\n        }\n      } else {\n        break;\n      }\n    }\n    for (lbnd = EdgeList.right(EdgeList.leftEnd); lbnd != EdgeList.rightEnd; lbnd = EdgeList.right(lbnd)) {\n      callback(lbnd.edge);\n    }\n  }\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_svg_lineX, y = d3_svg_lineY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (Math.abs(nx - x) + Math.abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = sx; else x2 = sx;\n        if (bottom) y1 = sy; else y2 = sy;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    b -= a = +a;\n    return function(t) {\n      return a + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n    a = a + \"\", b = b + \"\";\n    d3_interpolate_number.lastIndex = 0;\n    for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n      if (m.index) s.push(b.substring(s0, s1 = m.index));\n      q.push({\n        i: s.length,\n        x: m[0]\n      });\n      s.push(null);\n      s0 = d3_interpolate_number.lastIndex;\n    }\n    if (s0 < b.length) s.push(b.substring(s0));\n    for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n      o = q[i];\n      if (o.x == m[0]) {\n        if (o.i) {\n          if (s[o.i + 1] == null) {\n            s[o.i - 1] += o.x;\n            s.splice(o.i, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          } else {\n            s[o.i - 1] += o.x + s[o.i + 1];\n            s.splice(o.i, 2);\n            for (j = i + 1; j < n; ++j) q[j].i -= 2;\n          }\n        } else {\n          if (s[o.i + 1] == null) {\n            s[o.i] = o.x;\n          } else {\n            s[o.i] = o.x + s[o.i + 1];\n            s.splice(o.i + 1, 1);\n            for (j = i + 1; j < n; ++j) q[j].i--;\n          }\n        }\n        q.splice(i, 1);\n        n--;\n        i--;\n      } else {\n        o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n      }\n    }\n    while (i < n) {\n      o = q.pop();\n      if (s[o.i + 1] == null) {\n        s[o.i] = o.x;\n      } else {\n        s[o.i] = o.x + s[o.i + 1];\n        s.splice(o.i + 1, 1);\n      }\n      n--;\n    }\n    if (s.length === 1) {\n      return s[0] == null ? (o = q[0].x, function(t) {\n        return o(t) + \"\";\n      }) : function() {\n        return b;\n      };\n    }\n    return function(t) {\n      for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, Array.prototype.slice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * π / 2);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / (2 * π) * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, 10 * -t) * Math.sin((t - s) * 2 * π / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return (x - a) * b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = b - (a = +a) ? 1 / (b - a) : 0;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) * b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (2 * π - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, gravity = .1, theta = .8, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dn = 1 / Math.sqrt(dx * dx + dy * dy);\n          if ((x2 - x1) * dn < theta) {\n            var k = quad.charge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n            return true;\n          }\n          if (quad.point && isFinite(dn)) {\n            var k = quad.pointCharge * dn * dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return theta;\n      theta = +x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, j, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        var neighbors = neighbor(i), j = -1, m = neighbors.length, x;\n        while (++j < m) if (!isNaN(x = neighbors[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      function neighbor() {\n        if (!neighbors) {\n          neighbors = [];\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        return neighbors[i];\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function recurse(node, depth, nodes) {\n      var childs = children.call(hierarchy, node, depth);\n      node.depth = depth;\n      nodes.push(node);\n      if (childs && (n = childs.length)) {\n        var i = -1, n, c = node.children = [], v = 0, j = depth + 1, d;\n        while (++i < n) {\n          d = recurse(childs[i], j, nodes);\n          d.parent = node;\n          c.push(d);\n          v += d.value;\n        }\n        if (sort) c.sort(sort);\n        if (value) node.value = v;\n      } else if (value) {\n        node.value = +value.call(hierarchy, node, depth) || 0;\n      }\n      return node;\n    }\n    function revalue(node, depth) {\n      var children = node.children, v = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n, j = depth + 1;\n        while (++i < n) v += revalue(children[i], j);\n      } else if (value) {\n        v = +value.call(hierarchy, node, depth) || 0;\n      }\n      if (value) node.value = v;\n      return v;\n    }\n    function hierarchy(d) {\n      var nodes = [];\n      recurse(d, 0, nodes);\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      revalue(root, 0);\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = 2 * π;\n    function pie(data) {\n      var values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      });\n      var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n      var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n      var index = d3.range(data.length);\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      var arcs = [];\n      index.forEach(function(i) {\n        var d;\n        arcs[i] = {\n          data: data[i],\n          value: d = values[i],\n          startAngle: a,\n          endAngle: a += d * k\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return pie;\n    };\n    pie.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return pie;\n    };\n    pie.startAngle = function(x) {\n      if (!arguments.length) return startAngle;\n      startAngle = x;\n      return pie;\n    };\n    pie.endAngle = function(x) {\n      if (!arguments.length) return endAngle;\n      endAngle = x;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var n = series.length, m = series[0].length, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0];\n      function firstWalk(node, previousSibling) {\n        var children = node.children, layout = node._tree;\n        if (children && (n = children.length)) {\n          var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n          while (++i < n) {\n            child = children[i];\n            firstWalk(child, previousChild);\n            ancestor = apportion(child, previousChild, ancestor);\n            previousChild = child;\n          }\n          d3_layout_treeShift(node);\n          var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n            layout.mod = layout.prelim - midpoint;\n          } else {\n            layout.prelim = midpoint;\n          }\n        } else {\n          if (previousSibling) {\n            layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n          }\n        }\n      }\n      function secondWalk(node, x) {\n        node.x = node._tree.prelim + x;\n        var children = node.children;\n        if (children && (n = children.length)) {\n          var i = -1, n;\n          x += node._tree.mod;\n          while (++i < n) {\n            secondWalk(children[i], x);\n          }\n        }\n      }\n      function apportion(node, previousSibling, ancestor) {\n        if (previousSibling) {\n          var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n          while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n            vom = d3_layout_treeLeft(vom);\n            vop = d3_layout_treeRight(vop);\n            vop._tree.ancestor = node;\n            shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n            if (shift > 0) {\n              d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n              sip += shift;\n              sop += shift;\n            }\n            sim += vim._tree.mod;\n            sip += vip._tree.mod;\n            som += vom._tree.mod;\n            sop += vop._tree.mod;\n          }\n          if (vim && !d3_layout_treeRight(vop)) {\n            vop._tree.thread = vim;\n            vop._tree.mod += sim - sop;\n          }\n          if (vip && !d3_layout_treeLeft(vom)) {\n            vom._tree.thread = vip;\n            vom._tree.mod += sip - som;\n            ancestor = node;\n          }\n        }\n        return ancestor;\n      }\n      d3_layout_treeVisitAfter(root, function(node, previousSibling) {\n        node._tree = {\n          ancestor: node,\n          prelim: 0,\n          mod: 0,\n          change: 0,\n          shift: 0,\n          number: previousSibling ? previousSibling._tree.number + 1 : 0\n        };\n      });\n      firstWalk(root);\n      secondWalk(root, -root._tree.prelim);\n      var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x *= size[0];\n        node.y = node.depth * size[1];\n        delete node._tree;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = node.depth / y1 * size[1];\n        delete node._tree;\n      });\n      return nodes;\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(node) {\n    var children = node.children;\n    return children && children.length ? children[0] : node._tree.thread;\n  }\n  function d3_layout_treeRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n  }\n  function d3_layout_treeSearch(node, compare) {\n    var children = node.children;\n    if (children && (n = children.length)) {\n      var child, n, i = -1;\n      while (++i < n) {\n        if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n          node = child;\n        }\n      }\n    }\n    return node;\n  }\n  function d3_layout_treeRightmost(a, b) {\n    return a.x - b.x;\n  }\n  function d3_layout_treeLeftmost(a, b) {\n    return b.x - a.x;\n  }\n  function d3_layout_treeDeepest(a, b) {\n    return a.depth - b.depth;\n  }\n  function d3_layout_treeVisitAfter(node, callback) {\n    function visit(node, previousSibling) {\n      var children = node.children;\n      if (children && (n = children.length)) {\n        var child, previousChild = null, i = -1, n;\n        while (++i < n) {\n          child = children[i];\n          visit(child, previousChild);\n          previousChild = child;\n        }\n      }\n      callback(node, previousSibling);\n    }\n    visit(node, null);\n  }\n  function d3_layout_treeShift(node) {\n    var shift = 0, change = 0, children = node.children, i = children.length, child;\n    while (--i >= 0) {\n      child = children[i]._tree;\n      child.prelim += shift;\n      child.mod += shift;\n      shift += child.shift + (change += child.change);\n    }\n  }\n  function d3_layout_treeMove(ancestor, node, shift) {\n    ancestor = ancestor._tree;\n    node = node._tree;\n    var change = shift / (node.number - ancestor.number);\n    ancestor.change += change;\n    node.change -= change;\n    node.shift += shift;\n    node.prelim += shift;\n    node.mod += shift;\n  }\n  function d3_layout_treeAncestor(vim, node, ancestor) {\n    return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_treeVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_treeVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_treeVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_treeVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s / m;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(m ? d3_scale_linearTickRange(domain, m)[2] : d3_scale_linearNiceStep(domain)));\n  }\n  function d3_scale_linearNiceStep(domain) {\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0];\n    return Math.pow(10, Math.round(Math.log(span) / Math.LN10) - 1);\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var precision = -Math.floor(Math.log(d3_scale_linearTickRange(domain, m)[2]) / Math.LN10 + .01);\n    return d3.format(format ? format.replace(d3_format_re, function(a, b, c, d, e, f, g, h, i, j) {\n      return [ b, c, d, e, f, g, h, i || \".\" + (precision - (j === \"%\") * 2), j ].join(\"\");\n    }) : \",.\" + precision + \"f\");\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || index.set(x, domain.push(x))) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n      range = steps(start + Math.round(error / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.filter(function(d) {\n        return !isNaN(d);\n      }).sort(d3.ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function arc() {\n      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, \n      a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n      return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcOffset = -π / 2, d3_svg_arcMax = 2 * π - 1e-6;\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] + d3_svg_arcOffset;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_svg_lineX, x1 = d3_svg_lineX, y0 = 0, y1 = d3_svg_lineY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  function d3_transition(groups, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection) {\n    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, id, node.__transition__[id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node.__transition__[id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id;\n    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node.__transition__[id].tween.remove(name);\n    } : function(node) {\n      node.__transition__[id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node.__transition__[id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (!this.__transition__ && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id;\n    if (arguments.length < 1) return this.node().__transition__[id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node.__transition__[id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].delay = value.call(node, node.__data__, i, j) | 0;\n    } : (value |= 0, function(node) {\n      node.__transition__[id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j) | 0);\n    } : (value = Math.max(1, value | 0), function(node) {\n      node.__transition__[id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      d3_transitionInheritId = id;\n      d3_selection_each(this, function(node, i, j) {\n        d3_transitionInherit = node.__transition__[id];\n        type.call(node, node.__data__, i, j);\n      });\n      d3_transitionInherit = inherit;\n      d3_transitionInheritId = inheritId;\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node.__transition__[id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = Object.create(node.__transition__[id0]);\n          transition.delay += transition.duration;\n          d3_transitionNode(node, i, id1, transition);\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, id1);\n  };\n  function d3_transitionNode(node, i, id, inherit) {\n    var lock = node.__transition__ || (node.__transition__ = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        ease: inherit.ease,\n        delay: inherit.delay,\n        duration: inherit.duration\n      };\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, tweened = [];\n        if (delay <= elapsed) return start(elapsed);\n        d3_timer_replace(start, delay, time);\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          lock.active = id;\n          transition.event && transition.event.start.call(node, d, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, d, i)) {\n              tweened.push(value);\n            }\n          });\n          if (tick(elapsed)) return 1;\n          d3_timer_replace(tick, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return stop();\n          var t = (elapsed - delay) / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            stop();\n            transition.event && transition.event.end.call(node, d, i);\n            return 1;\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node.__transition__;\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, tickMajorSize = 6, tickMinorSize = 6, tickEndSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_, tickSubdivide = 0;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var ticks = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments_) : scale.domain() : tickValues, tickFormat = tickFormat_ == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments_) : String : tickFormat_;\n        var subticks = d3_svg_axisSubdivide(scale, ticks, tickSubdivide), subtick = g.selectAll(\".tick.minor\").data(subticks, String), subtickEnter = subtick.enter().insert(\"line\", \".tick\").attr(\"class\", \"tick minor\").style(\"opacity\", 1e-6), subtickExit = d3.transition(subtick.exit()).style(\"opacity\", 1e-6).remove(), subtickUpdate = d3.transition(subtick).style(\"opacity\", 1);\n        var tick = g.selectAll(\".tick.major\").data(ticks, String), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick major\").style(\"opacity\", 1e-6), tickExit = d3.transition(tick.exit()).style(\"opacity\", 1e-6).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n        var range = d3_scaleRange(scale), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        var scale1 = scale.copy(), scale0 = this.__chart__ || scale1;\n        this.__chart__ = scale1;\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n        switch (orient) {\n         case \"bottom\":\n          {\n            tickTransform = d3_svg_axisX;\n            subtickEnter.attr(\"y2\", tickMinorSize);\n            subtickUpdate.attr(\"x2\", 0).attr(\"y2\", tickMinorSize);\n            lineEnter.attr(\"y2\", tickMajorSize);\n            textEnter.attr(\"y\", Math.max(tickMajorSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", tickMajorSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(tickMajorSize, 0) + tickPadding);\n            text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + tickEndSize + \"V0H\" + range[1] + \"V\" + tickEndSize);\n            break;\n          }\n\n         case \"top\":\n          {\n            tickTransform = d3_svg_axisX;\n            subtickEnter.attr(\"y2\", -tickMinorSize);\n            subtickUpdate.attr(\"x2\", 0).attr(\"y2\", -tickMinorSize);\n            lineEnter.attr(\"y2\", -tickMajorSize);\n            textEnter.attr(\"y\", -(Math.max(tickMajorSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", 0).attr(\"y2\", -tickMajorSize);\n            textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(tickMajorSize, 0) + tickPadding));\n            text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n            pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -tickEndSize + \"V0H\" + range[1] + \"V\" + -tickEndSize);\n            break;\n          }\n\n         case \"left\":\n          {\n            tickTransform = d3_svg_axisY;\n            subtickEnter.attr(\"x2\", -tickMinorSize);\n            subtickUpdate.attr(\"x2\", -tickMinorSize).attr(\"y2\", 0);\n            lineEnter.attr(\"x2\", -tickMajorSize);\n            textEnter.attr(\"x\", -(Math.max(tickMajorSize, 0) + tickPadding));\n            lineUpdate.attr(\"x2\", -tickMajorSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", -(Math.max(tickMajorSize, 0) + tickPadding)).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n            pathUpdate.attr(\"d\", \"M\" + -tickEndSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -tickEndSize);\n            break;\n          }\n\n         case \"right\":\n          {\n            tickTransform = d3_svg_axisY;\n            subtickEnter.attr(\"x2\", tickMinorSize);\n            subtickUpdate.attr(\"x2\", tickMinorSize).attr(\"y2\", 0);\n            lineEnter.attr(\"x2\", tickMajorSize);\n            textEnter.attr(\"x\", Math.max(tickMajorSize, 0) + tickPadding);\n            lineUpdate.attr(\"x2\", tickMajorSize).attr(\"y2\", 0);\n            textUpdate.attr(\"x\", Math.max(tickMajorSize, 0) + tickPadding).attr(\"y\", 0);\n            text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n            pathUpdate.attr(\"d\", \"M\" + tickEndSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + tickEndSize);\n            break;\n          }\n        }\n        if (scale.rangeBand) {\n          var dx = scale1.rangeBand() / 2, x = function(d) {\n            return scale1(d) + dx;\n          };\n          tickEnter.call(tickTransform, x);\n          tickUpdate.call(tickTransform, x);\n        } else {\n          tickEnter.call(tickTransform, scale0);\n          tickUpdate.call(tickTransform, scale1);\n          tickExit.call(tickTransform, scale1);\n          subtickEnter.call(tickTransform, scale0);\n          subtickUpdate.call(tickTransform, scale1);\n          subtickExit.call(tickTransform, scale1);\n        }\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x, y) {\n      if (!arguments.length) return tickMajorSize;\n      var n = arguments.length - 1;\n      tickMajorSize = +x;\n      tickMinorSize = n > 1 ? +y : tickMajorSize;\n      tickEndSize = n > 0 ? +arguments[n] : tickMajorSize;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function(x) {\n      if (!arguments.length) return tickSubdivide;\n      tickSubdivide = +x;\n      return axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(\" + x(d) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y) {\n    selection.attr(\"transform\", function(d) {\n      return \"translate(0,\" + y(d) + \")\";\n    });\n  }\n  function d3_svg_axisSubdivide(scale, ticks, m) {\n    subticks = [];\n    if (m && ticks.length > 1) {\n      var extent = d3_scaleExtent(scale.domain()), subticks, i = -1, n = ticks.length, d = (ticks[1] - ticks[0]) / ++m, j, v;\n      while (++i < n) {\n        for (j = m; --j > 0; ) {\n          if ((v = +ticks[i] - j * d) >= extent[0]) {\n            subticks.push(v);\n          }\n        }\n      }\n      for (--i, j = 0; ++j < m && (v = +ticks[i] + j * d) < extent[1]; ) {\n        subticks.push(v);\n      }\n    }\n    return subticks;\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, resizes = d3_svg_brushResizes[0], extent = [ [ 0, 0 ], [ 0, 0 ] ], clamp = [ true, true ], extentDomain;\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this), bg = g.selectAll(\".background\").data([ 0 ]), fg = g.selectAll(\".extent\").data([ 0 ]), tz = g.selectAll(\".resize\").data(resizes, String), e;\n        g.style(\"pointer-events\", \"all\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        bg.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        fg.enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        tz.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        tz.style(\"display\", brush.empty() ? \"none\" : null);\n        tz.exit().remove();\n        if (x) {\n          e = d3_scaleRange(x);\n          bg.attr(\"x\", e[0]).attr(\"width\", e[1] - e[0]);\n          redrawX(g);\n        }\n        if (y) {\n          e = d3_scaleRange(y);\n          bg.attr(\"y\", e[0]).attr(\"height\", e[1] - e[0]);\n          redrawY(g);\n        }\n        redraw(g);\n      });\n    }\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + extent[+/e$/.test(d)][0] + \",\" + extent[+/^s/.test(d)][1] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", extent[0][0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", extent[1][0] - extent[0][0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", extent[0][1]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", extent[1][1] - extent[0][1]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = mouse(), offset;\n      var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      if (dragging) {\n        origin[0] = extent[0][0] - origin[0];\n        origin[1] = extent[0][1] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ extent[1 - ex][0] - origin[0], extent[1 - ey][1] - origin[1] ];\n        origin[0] = extent[ex][0];\n        origin[1] = extent[ey][1];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function mouse() {\n        var touches = d3.event.changedTouches;\n        return touches ? d3.touches(target, touches)[0] : d3.mouse(target);\n      }\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= extent[1][0];\n            origin[1] -= extent[1][1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += extent[1][0];\n          origin[1] += extent[1][1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = mouse(), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (extent[0][0] + extent[1][0]) / 2, (extent[0][1] + extent[1][1]) / 2 ];\n            origin[0] = extent[+(point[0] < center[0])][0];\n            origin[1] = extent[+(point[1] < center[1])][1];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], size = extent[1][i] - extent[0][i], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = clamp[i] ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0][i] !== min || extent[1][i] !== max) {\n          extentDomain = null;\n          extent[0][i] = min;\n          extent[1][i] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? clamp : x || y ? clamp[+!x] : null;\n      if (x && y) clamp = [ !!z[0], !!z[1] ]; else if (x || y) clamp[+!x] = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        z = extentDomain || extent;\n        if (x) {\n          x0 = z[0][0], x1 = z[1][0];\n          if (!extentDomain) {\n            x0 = extent[0][0], x1 = extent[1][0];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          y0 = z[0][1], y1 = z[1][1];\n          if (!extentDomain) {\n            y0 = extent[0][1], y1 = extent[1][1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      extentDomain = [ [ 0, 0 ], [ 0, 0 ] ];\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        extentDomain[0][0] = x0, extentDomain[1][0] = x1;\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        extent[0][0] = x0 | 0, extent[1][0] = x1 | 0;\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        extentDomain[0][1] = y0, extentDomain[1][1] = y1;\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        extent[0][1] = y0 | 0, extent[1][1] = y1 | 0;\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      extentDomain = null;\n      extent[0][0] = extent[0][1] = extent[1][0] = extent[1][1] = 0;\n      return brush;\n    };\n    brush.empty = function() {\n      return x && extent[0][0] === extent[1][0] || y && extent[0][1] === extent[1][1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  d3.time = {};\n  var d3_time = Date, d3_time_daySymbols = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n  function d3_time_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_time_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  var d3_time_formatDateTime = \"%a %b %e %X %Y\", d3_time_formatDate = \"%m/%d/%Y\", d3_time_formatTime = \"%H:%M:%S\";\n  var d3_time_days = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ], d3_time_dayAbbreviations = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ], d3_time_months = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ], d3_time_monthAbbreviations = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_time(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_time(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_time = d3_time_utc;\n        var utc = new d3_time_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_time = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_time = d3_time_utc;\n        var utc = new d3_time_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_time = Date;\n      }\n    };\n  }\n  d3.time.year = d3_time_interval(function(date) {\n    date = d3.time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3.time.years = d3.time.year.range;\n  d3.time.years.utc = d3.time.year.utc.range;\n  d3.time.day = d3_time_interval(function(date) {\n    var day = new d3_time(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3.time.days = d3.time.day.range;\n  d3.time.days.utc = d3.time.day.utc.range;\n  d3.time.dayOfYear = function(date) {\n    var year = d3.time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  d3_time_daySymbols.forEach(function(day, i) {\n    day = day.toLowerCase();\n    i = 7 - i;\n    var interval = d3.time[day] = d3_time_interval(function(date) {\n      (date = d3.time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3.time.year(date).getDay();\n      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3.time[day + \"s\"] = interval.range;\n    d3.time[day + \"s\"].utc = interval.utc.range;\n    d3.time[day + \"OfYear\"] = function(date) {\n      var day = d3.time.year(date).getDay();\n      return Math.floor((d3.time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3.time.week = d3.time.sunday;\n  d3.time.weeks = d3.time.sunday.range;\n  d3.time.weeks.utc = d3.time.sunday.utc.range;\n  d3.time.weekOfYear = d3.time.sundayOfYear;\n  d3.time.format = function(template) {\n    var n = template.length;\n    function format(date) {\n      var string = [], i = -1, j = 0, c, p, f;\n      while (++i < n) {\n        if (template.charCodeAt(i) === 37) {\n          string.push(template.substring(j, i));\n          if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n          if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n      string.push(template.substring(j, i));\n      return string.join(\"\");\n    }\n    format.parse = function(string) {\n      var d = {\n        y: 1900,\n        m: 0,\n        d: 1,\n        H: 0,\n        M: 0,\n        S: 0,\n        L: 0\n      }, i = d3_time_parse(d, template, string, 0);\n      if (i != string.length) return null;\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n      var date = new d3_time();\n      if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n        date.setFullYear(d.y, 0, 1);\n        date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n      } else date.setFullYear(d.y, d.m, d.d);\n      date.setHours(d.H, d.M, d.S, d.L);\n      return date;\n    };\n    format.toString = function() {\n      return template;\n    };\n    return format;\n  };\n  function d3_time_parse(date, template, string, j) {\n    var c, p, i = 0, n = template.length, m = string.length;\n    while (i < n) {\n      if (j >= m) return -1;\n      c = template.charCodeAt(i++);\n      if (c === 37) {\n        p = d3_time_parsers[template.charAt(i++)];\n        if (!p || (j = p(date, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n    return j;\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  var d3_time_dayRe = d3_time_formatRe(d3_time_days), d3_time_dayLookup = d3_time_formatLookup(d3_time_days), d3_time_dayAbbrevRe = d3_time_formatRe(d3_time_dayAbbreviations), d3_time_dayAbbrevLookup = d3_time_formatLookup(d3_time_dayAbbreviations), d3_time_monthRe = d3_time_formatRe(d3_time_months), d3_time_monthLookup = d3_time_formatLookup(d3_time_months), d3_time_monthAbbrevRe = d3_time_formatRe(d3_time_monthAbbreviations), d3_time_monthAbbrevLookup = d3_time_formatLookup(d3_time_monthAbbreviations), d3_time_percentRe = /^%/;\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  };\n  var d3_time_formats = {\n    a: function(d) {\n      return d3_time_dayAbbreviations[d.getDay()];\n    },\n    A: function(d) {\n      return d3_time_days[d.getDay()];\n    },\n    b: function(d) {\n      return d3_time_monthAbbreviations[d.getMonth()];\n    },\n    B: function(d) {\n      return d3_time_months[d.getMonth()];\n    },\n    c: d3.time.format(d3_time_formatDateTime),\n    d: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    e: function(d, p) {\n      return d3_time_formatPad(d.getDate(), p, 2);\n    },\n    H: function(d, p) {\n      return d3_time_formatPad(d.getHours(), p, 2);\n    },\n    I: function(d, p) {\n      return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n    },\n    j: function(d, p) {\n      return d3_time_formatPad(1 + d3.time.dayOfYear(d), p, 3);\n    },\n    L: function(d, p) {\n      return d3_time_formatPad(d.getMilliseconds(), p, 3);\n    },\n    m: function(d, p) {\n      return d3_time_formatPad(d.getMonth() + 1, p, 2);\n    },\n    M: function(d, p) {\n      return d3_time_formatPad(d.getMinutes(), p, 2);\n    },\n    p: function(d) {\n      return d.getHours() >= 12 ? \"PM\" : \"AM\";\n    },\n    S: function(d, p) {\n      return d3_time_formatPad(d.getSeconds(), p, 2);\n    },\n    U: function(d, p) {\n      return d3_time_formatPad(d3.time.sundayOfYear(d), p, 2);\n    },\n    w: function(d) {\n      return d.getDay();\n    },\n    W: function(d, p) {\n      return d3_time_formatPad(d3.time.mondayOfYear(d), p, 2);\n    },\n    x: d3.time.format(d3_time_formatDate),\n    X: d3.time.format(d3_time_formatTime),\n    y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n    },\n    Y: function(d, p) {\n      return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n    },\n    Z: d3_time_zone,\n    \"%\": function() {\n      return \"%\";\n    }\n  };\n  var d3_time_parsers = {\n    a: d3_time_parseWeekdayAbbrev,\n    A: d3_time_parseWeekday,\n    b: d3_time_parseMonthAbbrev,\n    B: d3_time_parseMonth,\n    c: d3_time_parseLocaleFull,\n    d: d3_time_parseDay,\n    e: d3_time_parseDay,\n    H: d3_time_parseHour24,\n    I: d3_time_parseHour24,\n    j: d3_time_parseDayOfYear,\n    L: d3_time_parseMilliseconds,\n    m: d3_time_parseMonthNumber,\n    M: d3_time_parseMinutes,\n    p: d3_time_parseAmPm,\n    S: d3_time_parseSeconds,\n    U: d3_time_parseWeekNumberSunday,\n    w: d3_time_parseWeekdayNumber,\n    W: d3_time_parseWeekNumberMonday,\n    x: d3_time_parseLocaleDate,\n    X: d3_time_parseLocaleTime,\n    y: d3_time_parseYear,\n    Y: d3_time_parseFullYear,\n    \"%\": d3_time_parseLiteralPercent\n  };\n  function d3_time_parseWeekdayAbbrev(date, string, i) {\n    d3_time_dayAbbrevRe.lastIndex = 0;\n    var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekday(date, string, i) {\n    d3_time_dayRe.lastIndex = 0;\n    var n = d3_time_dayRe.exec(string.substring(i));\n    return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMonthAbbrev(date, string, i) {\n    d3_time_monthAbbrevRe.lastIndex = 0;\n    var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseMonth(date, string, i) {\n    d3_time_monthRe.lastIndex = 0;\n    var n = d3_time_monthRe.exec(string.substring(i));\n    return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n  function d3_time_parseLocaleFull(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n  }\n  function d3_time_parseLocaleDate(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n  }\n  function d3_time_parseLocaleTime(date, string, i) {\n    return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  var d3_time_numberRe = /^\\s*\\d+/;\n  function d3_time_parseAmPm(date, string, i) {\n    var n = d3_time_amPmLookup.get(string.substring(i, i += 2).toLowerCase());\n    return n == null ? -1 : (date.p = n, i);\n  }\n  var d3_time_amPmLookup = d3.map({\n    am: 0,\n    pm: 1\n  });\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(Math.abs(z) / 60), zm = Math.abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  d3.time.format.utc = function(template) {\n    var local = d3.time.format(template);\n    function format(date) {\n      try {\n        d3_time = d3_time_utc;\n        var utc = new d3_time();\n        utc._ = date;\n        return local(utc);\n      } finally {\n        d3_time = Date;\n      }\n    }\n    format.parse = function(string) {\n      try {\n        d3_time = d3_time_utc;\n        var date = local.parse(string);\n        return date && date._;\n      } finally {\n        d3_time = Date;\n      }\n    };\n    format.toString = local.toString;\n    return format;\n  };\n  var d3_time_formatIso = d3.time.format.utc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3.time.format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3.time.second = d3_time_interval(function(date) {\n    return new d3_time(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3.time.seconds = d3.time.second.range;\n  d3.time.seconds.utc = d3.time.second.utc.range;\n  d3.time.minute = d3_time_interval(function(date) {\n    return new d3_time(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3.time.minutes = d3.time.minute.range;\n  d3.time.minutes.utc = d3.time.minute.utc.range;\n  d3.time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_time((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3.time.hours = d3.time.hour.range;\n  d3.time.hours.utc = d3.time.hour.utc.range;\n  d3.time.month = d3_time_interval(function(date) {\n    date = d3.time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3.time.months = d3.time.month.range;\n  d3.time.months.utc = d3.time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_nice(scale.domain(), m));\n    };\n    scale.ticks = function(m, k) {\n      var extent = d3_scaleExtent(scale.domain());\n      if (typeof m !== \"function\") {\n        var span = extent[1] - extent[0], target = span / m, i = d3.bisect(d3_time_scaleSteps, target);\n        if (i == d3_time_scaleSteps.length) return methods.year(extent, m);\n        if (!i) return linear.ticks(m).map(d3_time_scaleDate);\n        if (target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target) --i;\n        m = methods[i];\n        k = m[1];\n        m = m[0].range;\n      }\n      return m(extent[0], new Date(+extent[1] + 1), k);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  function d3_time_scaleFormat(formats) {\n    return function(date) {\n      var i = formats.length - 1, f = formats[i];\n      while (!f[1](date)) f = formats[--i];\n      return f[0](date);\n    };\n  }\n  function d3_time_scaleSetYear(y) {\n    var d = new Date(y, 0, 1);\n    d.setFullYear(y);\n    return d;\n  }\n  function d3_time_scaleGetYear(d) {\n    var y = d.getFullYear(), d0 = d3_time_scaleSetYear(y), d1 = d3_time_scaleSetYear(y + 1);\n    return y + (d - d0) / (d1 - d0);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3.time.second, 1 ], [ d3.time.second, 5 ], [ d3.time.second, 15 ], [ d3.time.second, 30 ], [ d3.time.minute, 1 ], [ d3.time.minute, 5 ], [ d3.time.minute, 15 ], [ d3.time.minute, 30 ], [ d3.time.hour, 1 ], [ d3.time.hour, 3 ], [ d3.time.hour, 6 ], [ d3.time.hour, 12 ], [ d3.time.day, 1 ], [ d3.time.day, 2 ], [ d3.time.week, 1 ], [ d3.time.month, 1 ], [ d3.time.month, 3 ], [ d3.time.year, 1 ] ];\n  var d3_time_scaleLocalFormats = [ [ d3.time.format(\"%Y\"), d3_true ], [ d3.time.format(\"%B\"), function(d) {\n    return d.getMonth();\n  } ], [ d3.time.format(\"%b %d\"), function(d) {\n    return d.getDate() != 1;\n  } ], [ d3.time.format(\"%a %d\"), function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ d3.time.format(\"%I %p\"), function(d) {\n    return d.getHours();\n  } ], [ d3.time.format(\"%I:%M\"), function(d) {\n    return d.getMinutes();\n  } ], [ d3.time.format(\":%S\"), function(d) {\n    return d.getSeconds();\n  } ], [ d3.time.format(\".%L\"), function(d) {\n    return d.getMilliseconds();\n  } ] ];\n  var d3_time_scaleLinear = d3.scale.linear(), d3_time_scaleLocalFormat = d3_time_scaleFormat(d3_time_scaleLocalFormats);\n  d3_time_scaleLocalMethods.year = function(extent, m) {\n    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleGetYear)).ticks(m).map(d3_time_scaleSetYear);\n  };\n  d3.time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUTCMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUTCFormats = [ [ d3.time.format.utc(\"%Y\"), d3_true ], [ d3.time.format.utc(\"%B\"), function(d) {\n    return d.getUTCMonth();\n  } ], [ d3.time.format.utc(\"%b %d\"), function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ d3.time.format.utc(\"%a %d\"), function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ d3.time.format.utc(\"%I %p\"), function(d) {\n    return d.getUTCHours();\n  } ], [ d3.time.format.utc(\"%I:%M\"), function(d) {\n    return d.getUTCMinutes();\n  } ], [ d3.time.format.utc(\":%S\"), function(d) {\n    return d.getUTCSeconds();\n  } ], [ d3.time.format.utc(\".%L\"), function(d) {\n    return d.getUTCMilliseconds();\n  } ] ];\n  var d3_time_scaleUTCFormat = d3_time_scaleFormat(d3_time_scaleUTCFormats);\n  function d3_time_scaleUTCSetYear(y) {\n    var d = new Date(Date.UTC(y, 0, 1));\n    d.setUTCFullYear(y);\n    return d;\n  }\n  function d3_time_scaleUTCGetYear(d) {\n    var y = d.getUTCFullYear(), d0 = d3_time_scaleUTCSetYear(y), d1 = d3_time_scaleUTCSetYear(y + 1);\n    return y + (d - d0) / (d1 - d0);\n  }\n  d3_time_scaleUTCMethods.year = function(extent, m) {\n    return d3_time_scaleLinear.domain(extent.map(d3_time_scaleUTCGetYear)).ticks(m).map(d3_time_scaleUTCSetYear);\n  };\n  d3.time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUTCMethods, d3_time_scaleUTCFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  return d3;\n}();\ndefine(\"d3\", (function (global) {\n    return function () {\n        var ret, fn;\n        return ret || global.d3;\n    };\n}(this)));\n","\n// Array utility functions\n\ndefine('core/array',[],\nfunction () {\n  'use strict';\n\n  var array;\n\n  array = {\n\n    /**\n     * Finds the first occurance of an item in an array.\n     */\n    find: function (ary, fn) {\n      var i, len = ary.length;\n      for (i = 0; i < len; i += 1) {\n        if (fn(ary[i])) {\n          return ary[i];\n        }\n      }\n    },\n\n    /**\n     * Search an array for the first element that satisfies\n     *   a given condition and return its index.\n     * @param {Array} arr The array to search.\n     * @param {Function} f The function to call for every element. This function\n     *     takes 3 arguments (the element, the index and the array) and should\n     *     return a boolean.\n     * @param {Object} optObj An optional \"this\" context for the function.\n     * @return {number} The index of the first array element\n     *    that passes the test, or -1 if no element is found.\n     */\n    findIndex: function (arr, fn, optObj) {\n      var len, arr2, i;\n\n      len = arr.length;  // must be fixed during loop... see docs\n      arr2 = typeof arr === 'string' ? arr.split('') : arr;\n      for (i = 0; i < len; i += 1) {\n        if (i in arr2 && fn.call(optObj, arr2[i], i, arr)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    /**\n     * Returns:\n     * true if input array is empty\n     * false otherwise\n     * @param {Array} arr\n     * @return {boolean}\n     */\n    isEmpty: function(arr) {\n      return arr.length === 0;\n    },\n\n    /**\n     * Convert 'arguments' object into a real array,\n     * starting at optional 'from' index.\n     */\n    convertArgs: function (args, from) {\n      return Array.prototype.slice.call(args, from || 0);\n    },\n\n    /**\n     * Appends array provided array\n     * @param  {Array} arr\n     * @param  {Array} arrToAppend\n     */\n    append: function (arr, arrToAppend) {\n      Array.prototype.splice.apply(arr, [arr.length, 0].concat(arrToAppend));\n      return arr;\n    },\n\n    /*\n     * Converts input to an array object, if it isn't.\n     * Returns empty array if input is null or undefined.\n     */\n    getArray: function (obj) {\n      return obj ? (Array.isArray(obj) ? obj: [obj]) : [];\n    },\n\n    /**\n     * Removes items from an array by mutating it.\n     * @param {Array} arr The array to remove from.\n     * @param {Object|Array} items The item or array of items to remove.\n     * @return {Array} The items actually removed.\n     */\n    remove: function(arr, items) {\n      var removedItems = [];\n      array.getArray(items).forEach(function(item) {\n        var index = arr.indexOf(item);\n        if (index !== -1) {\n          arr.splice(index, 1);\n          removedItems.push(item);\n        }\n      });\n      return removedItems;\n    },\n\n    /**\n     * Check if an array contains an item.\n     * @param {Array} arr The array to check.\n     * @param {Object} item The item to check for.\n     * @return {Boolean}\n     */\n    contains: function(arr, item) {\n      if (item && Array.isArray(arr) && arr.length) {\n        return arr.indexOf(item) !== -1;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if any element in arr2 is in arr1.\n     *\n     * @param {Array} arr1\n     * @Param {Array} arr2\n     * @return {Boolean}\n     */\n    containsAny: function(arr1, arr2) {\n      return arr2.some(function(item) {\n        return array.contains(arr1, item);\n      });\n    }\n\n  };\n\n  return array;\n\n});\n","\ndefine('core/object',[\n  'core/array'\n],\nfunction (array) {\n  'use strict';\n\n  var Obj;\n  Obj = {\n\n    /**\n     * Similar to underscore.js's extend() but es5 safe.\n     */\n    extend: function (target) {\n      var sources = array.convertArgs(arguments, 1);\n      sources.forEach(function (src) {\n        if (typeof src !== 'object') {\n          return;\n        }\n        Object.getOwnPropertyNames(src).forEach(function (propName) {\n          Object.defineProperty(target, propName,\n            Object.getOwnPropertyDescriptor(src, propName));\n        });\n      });\n      return target;\n    },\n\n    isDef: function(val) {\n      return val !== undefined;\n    },\n\n    isDefAndNotNull: function(val) {\n      return val != null;\n    },\n\n    /**\n     * Gets a property from an object by its path.\n     *\n     * @public\n     * @prarm {Object} obj The object to retrieve from.\n     * @param {String|Array} path The path to the property.\n     * @return {Object}\n     */\n    get: function(obj, path) {\n      var currentObj;\n      currentObj = obj;\n      if (!(this.isDefAndNotNull(path) && this.isDefAndNotNull(obj))) {\n        return null;\n      }\n      array.getArray(path).every(function(p) {\n        currentObj = currentObj[p];\n        return this.isDefAndNotNull(currentObj);\n      }, this);\n      if (this.isDefAndNotNull(currentObj)) {\n        return currentObj;\n      }\n      return null;\n    },\n\n    /**\n     * Removes the list of items from the object\n     *\n     * @public\n     * @prarm {Object} obj The object to remove from.\n     * @param {String|Array} list The keys to remove\n     * @return {Object}\n     */\n    remove: function(obj, list) {\n      if (list) {\n          if (typeof list === 'string') {\n            delete obj[list];\n          } else {\n            list.forEach(function (l) {\n              delete obj[l];\n            });\n          }\n      }\n      return obj;\n    },\n\n    /**\n     * Overrides a method on an object. Passes a reference to the original\n     *  \"super\" method as the first argument to the new method. The \"super\"\n     *  will be bound to the original o object.\n     *\n     * @param {Object} o The object.\n     * @param {String} methodName The name of the method to override.\n     * @param {function} newFn The new function to replace it with.\n     */\n    override: function(o, methodName, newFn) {\n      var supr;\n\n      // supr method is the original method.\n      supr = o[methodName].bind(o);\n      // Replace the original method with the new one.\n      o[methodName] = function() {\n        var args = array.convertArgs(arguments, 0);\n        // Pass reference to super method as 1st arg.\n        args.unshift(supr);\n        return newFn.apply(o, args);\n      };\n    }\n\n  };\n\n  return Obj;\n});\n","\n/**\n * @fileOverview\n * String utility functions.\n */\ndefine('core/string',[],\nfunction () {\n  'use strict';\n\n  return {\n\n    /**\n     * Generates a random string.\n     */\n    random: function () {\n      // 2^31\n      var x = 2147483648;\n      return Math.floor(Math.random() * x).toString(36) +\n        Math.abs(Math.floor(Math.random() * x) ^ (new Date()).getTime())\n        .toString(36);\n    },\n\n    /**\n     * Convenience function to create multiple class strings.\n     */\n    classes: function () {\n      var r = Array.prototype.join.call(arguments, ' gl-');\n      return r ? 'gl-' + r : '';\n    },\n\n    /**\n     * Convenience function to string.\n     */\n    isString: function (item) {\n      return typeof item === 'string';\n    },\n\n    /**\n     * Determins if a string starts with a prefix or not.\n     *\n     * @param {String} str The string to check.\n     * @param {String} prefix The prefix to search for.\n     * @return {Boolean}\n     */\n    startsWith: function(str, prefix) {\n      return typeof str === 'string' &&\n        typeof prefix === 'string' &&\n        str.slice(0, prefix.length) === prefix;\n    }\n\n  };\n\n});\n","\ndefine('core/function',[\n  'core/array'\n],\nfunction (array) {\n  'use strict';\n\n  return {\n\n    partial: function (fn) {\n      var args = array.convertArgs(arguments, 1);\n      return function() {\n        var newArgs = array.convertArgs(arguments);\n        newArgs.unshift.apply(newArgs, args);\n        return fn.apply(this, newArgs);\n      };\n    },\n\n    compose: function() {\n      var funcs = arguments,\n          context = this;\n      return function() {\n        var args = arguments,\n            i;\n        for (i = funcs.length - 1; i >= 0; i--) {\n          args = [funcs[i].apply(context, args)];\n        }\n        return args[0];\n      };\n    }\n\n  };\n\n});\n","\ndefine('core/format',[],\nfunction() {\n  'use strict';\n\n  function getSuffix(optSuffix) {\n    return optSuffix ? ' ' + optSuffix : '';\n  }\n\n  return {\n\n    /**\n     * Default formatter for a date/time domain using UTC time.\n     * Text is in the format:\n     *    ShortMonth Day, HH:MM AM/PM - ShortMonth Day, HH:MM AM/PM\n     * @public\n     * @param {Array} domain Contains min and max of the domain.\n     * @param {String} optSuffix\n     * @return {String}\n     * @see https://github.com/mbostock/d3/wiki/Time-Formatting#wiki-format\n     */\n    timeDomainUTC: function(domain, optSuffix) {\n      var formatter, dateStart, dateEnd;\n      formatter = d3.time.format.utc('%b %-e, %I:%M %p');\n      dateStart = domain[0] instanceof Date ? domain[0] : new Date(domain[0]);\n      dateEnd = domain[1] instanceof Date ? domain[1] : new Date(domain[1]);\n      return formatter(dateStart) + ' - ' +\n          formatter(dateEnd) + getSuffix(optSuffix);\n    },\n\n    /**\n     * Formatter for a date/time domain using local time.\n     * Text is in the format:\n     *    ShortMonth Day, HH:MM AM/PM - ShortMonth Day, HH:MM AM/PM -0700\n     * @public\n     * @param {Array} domain Contains min and max of the domain.\n     * @param {String} optSuffix\n     * @return {String}\n     * @see https://github.com/mbostock/d3/wiki/Time-Formatting#wiki-format\n     */\n    timeDomain: function(domain, optSuffix) {\n      var formatter, dateStart, dateEnd;\n      formatter = d3.time.format('%b %-e, %I:%M %p');\n      dateStart = domain[0] instanceof Date ? domain[0] : new Date(domain[0]);\n      dateEnd = domain[1] instanceof Date ? domain[1] : new Date(domain[1]);\n      return formatter(dateStart) + ' - ' +\n          formatter(dateEnd) + getSuffix(optSuffix);\n    },\n\n    /**\n     * Standard formatter for non-time domains.\n     * Text is in the format:\n     *   start - end unit\n     *\n     * @param {Array} domain\n     * @param {String} optSuffix\n     * @return {String}\n     */\n    standardDomain: function(domain, optSuffix) {\n      return domain[0] + ' - ' + domain[1] + getSuffix(optSuffix);\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Data Dimension.\n */\ndefine('data/dimension/dimension',[\n  'core/array'\n], function (array) {\n  'use strict';\n\n  var Dimension;\n\n  function sumReduce(arr) {\n    return arr.reduce(function(prevValue, curValue){\n      return curValue + prevValue;\n    });\n  }\n\n  /**\n   * @constructor\n   * Data Dimension.\n   * @param {(Object, Array.<Object>)?} optDataSource\n   */\n  Dimension = function(optDataSource) {\n    // TODO: rename this.\n    // these are not actually dataSource, this is multiple arrays of raw data\n    this.dataSources_ = array.getArray(optDataSource);\n  };\n\n  /**\n   * Adds a dimension to the dimension selection.\n   */\n  Dimension.prototype.add = function(data) {\n    if(Array.isArray(data)) {\n      array.append(this.dataSources_, data);\n    } else {\n      this.dataSources_.push(data);\n    }\n    return this;\n  };\n\n  /**\n   * Generic map function that accepts and applies a function\n   *   on its sources.\n   */\n  Dimension.prototype.map = function(fn, context) {\n    return new Dimension(this.dataSources_.map(fn, context));\n  };\n\n  /**\n   * Accepts and applies a filter fn on its dimension sources.\n   */\n  Dimension.prototype.filter = function(fn, context) {\n    return this.map(function(dataSource) {\n      return dataSource.filter(fn, context);\n    });\n  };\n\n  /**\n   * Sums all the values and returns the selection.\n   */\n  Dimension.prototype.sum = function() {\n    return this.map(function(dataSource) {\n      return sumReduce(dataSource);\n    });\n  };\n\n  /**\n   * Transposes the dimension matrix i.e.\n   * Converts an array of rows (dimensions) to corresponding array\n   * of columns.\n   * For example,\n   *   [ a p x ]         [ a b c ]\n   *   [ b q y ] becomes [ p q r ]\n   *   [ c r z ]         [ x y z ]\n   */\n  Dimension.prototype.transpose = function() {\n    var maxLength = d3.max(this.dataSources_.map(function(dataSource) {\n      return dataSource.length;\n    })) || 0, table = [], col, i, k;\n    for (i = 0; i < maxLength; i++) {\n      col = [];\n      for (k = 0; k < this.dataSources_.length; k++) {\n        col.push(this.dataSources_[k][i]);\n      }\n      table.push(col);\n    }\n    return new Dimension(table);\n  };\n\n  /**\n   * Averages the values in the dimension selection.\n   */\n  Dimension.prototype.avg = function() {\n    return this.map(function(dataSource) {\n      return sumReduce(dataSource)/dataSource.length;\n    });\n  };\n\n  /**\n   * Computes the max values in the dimension selection.\n   */\n  Dimension.prototype.max = function() {\n    return this.map(function(dataSource) {\n      return d3.max(dataSource);\n    });\n  };\n\n  /**\n   * Computes the min values in the dimension selection.\n   */\n  Dimension.prototype.min = function() {\n    return this.map(function(dataSource) {\n      return d3.min(dataSource);\n    });\n  };\n\n  /**\n   * Computes the max/min values in the dimension selection.\n   */\n  Dimension.prototype.extent = function() {\n    return this.map(function(dataSource) {\n      return d3.extent(dataSource);\n    });\n  };\n\n  /**\n   * Rounds the values in the dimension selection.\n   */\n  Dimension.prototype.round = function() {\n    return this.map(function(dataSource) {\n      if (Array.isArray(dataSource)) {\n        return dataSource.map(function(d) {\n          return Math.round(d);\n        });\n      } else {\n        return Math.round(dataSource);\n      }\n    });\n  };\n\n  /**\n   * Concatinates the values in multiple sources into one.\n   */\n  Dimension.prototype.concat = function() {\n    var arr = [];\n    this.dataSources_.forEach(function(dataSource) {\n      arr = arr.concat(dataSource);\n    });\n    return new Dimension([arr]);\n  };\n\n  /**\n   * Returns the raw value of the selection.\n   */\n  Dimension.prototype.all = function() {\n    return this.dataSources_;\n  };\n\n  /**\n   * Returns a source by index.\n   * Defaults to returning the first source.\n   * @param {number?} i index of the data source\n   */\n  Dimension.prototype.get = function(i) {\n    i = i || 0;\n    return this.dataSources_[i];\n  };\n\n  return {\n\n    /**\n     * Creates a new dimension selection.\n     * Optionally takes in a single or list of dimension arrays\n     * to initialize the selection.\n     */\n    create: function(optDimensions) {\n      return new Dimension(optDimensions);\n    },\n\n    /**\n     * Returns dim selection prototype for extension.\n     */\n    getDimensionPrototype: function() {\n      return Dimension.prototype;\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Data functions.\n */\ndefine('data/functions',[\n  'core/object',\n  'data/accessors'\n], function (obj, accessors) {\n  'use strict';\n\n  return {\n    /**\n     * Gets the data using the dimension accessor.\n     */\n    dimension: function(data, dim) {\n      var dimValue;\n      dimValue = obj.get(data, ['dimensions', dim]);\n      if (!dimValue) {\n        return accessors.get(dim);\n      }\n      return accessors.get(dimValue);\n    }\n  };\n\n});\n","\n/**\n * @fileOverview\n * Accessor generator.\n */\ndefine('data/accessors',[\n  'core/object'\n], function (obj) {\n  'use strict';\n\n  var cache = {};\n\n  function getAccessor(dimVal) {\n    var splitPath, accessorFn;\n    dimVal = dimVal.trim();\n    accessorFn = cache[dimVal];\n    if (accessorFn) {\n      return accessorFn;\n    }\n    splitPath = dimVal.split('.');\n    accessorFn = function(d) {\n      return obj.get(d, splitPath);\n    };\n    cache[dimVal] = accessorFn;\n    return accessorFn;\n  }\n\n  return {\n\n    /**\n     * Returns input if function.\n     * If input is string, it returns a cached accessor\n     * else generates a new accessor for the string.\n     */\n    get: function(accessor) {\n      if (typeof accessor === 'function') {\n        return accessor;\n      }\n      if (typeof accessor === 'string') {\n        return getAccessor(accessor);\n      }\n    },\n\n    /**\n     * Clears the accessors cache.\n     */\n    clear: function() {\n      cache = {};\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Data Selection.\n */\ndefine('data/selection/selection',[\n  'data/dimension/dimension',\n  'core/object',\n  'core/array',\n  'data/functions'\n], function (dimension, obj, array, dataFns) {\n  'use strict';\n\n  var Selection;\n\n  /**\n   * @constructor\n   * Data Selection.\n   */\n  Selection = function(optDataSource) {\n    this.dataSources_ = array.getArray(optDataSource);\n  };\n\n  /**\n   * Adds a new data sources to an existing selection.\n   * @param {Object|Array.<Object>} data\n   */\n  Selection.prototype.add = function(data) {\n    if(Array.isArray(data)) {\n      array.append(this.dataSources_, data);\n    } else {\n      this.dataSources_.push(data);\n    }\n    return this;\n  };\n\n  /**\n   * Applies filter using dimensions on data sources.\n   * This will eventually be a more versatile function.\n   * Assumes when two inputs are given, that the first is a dimension and\n   * second is a range if it is an array.\n   * TODO: If second arg is simple value, filter if equal to that value.\n   *       If second arg is a function, use that function.\n   *\n   * for example, used to filter selections to only include those in a specific\n   * time range.\n   */\n  Selection.prototype.filter = function(dim, range) {\n    return this.map(function(dataSource) {\n      var filteredDataSource = {}, accessor;\n      obj.extend(filteredDataSource, dataSource);\n      accessor = dataFns.dimension(dataSource, dim);\n      filteredDataSource.data =  filteredDataSource.data.filter(\n        function(d) {\n          var e = accessor(d);\n          return e >= range[0] && e<= range[1];\n        }\n      );\n      return filteredDataSource;\n    });\n  };\n\n  /**\n   * Filters the datasources by tags.\n   * returns datasources which do not contain tags.\n   * @param  {array|string} tags\n   */\n  Selection.prototype.filterByTags = function (tags) {\n    return new Selection(this.dataSources_.filter(\n      function(dataSource) {\n        return array.getArray(tags).every(function(tag) {\n          return !array.contains(dataSource.tags, tag);\n        });\n      })\n    );\n  };\n\n  /**\n   * Returns the number of data sources in the selection.\n   */\n  Selection.prototype.length = function() {\n    return this.dataSources_.length;\n  };\n\n  /**\n   * Helper method to run map on a selection.\n   */\n  Selection.prototype.map = function(fn) {\n    return new Selection(this.dataSources_.map(fn));\n  };\n\n  /**\n   * Helper function to return dimension selection over\n   * a map of the selection.\n   */\n  Selection.prototype.dimMap = function(fn) {\n    return dimension.create(this.dataSources_.map(fn));\n  };\n\n  /**\n   * Returns all the data sources.\n   */\n  Selection.prototype.all = function() {\n    return this.dataSources_;\n  };\n\n  /**\n   * Returns the raw data source specified by index.\n   * Returns the first data source if no index is specified.\n   * @param {number?} i index of the data source\n   */\n  Selection.prototype.get = function(i) {\n    i = i || 0;\n    return this.dataSources_[i];\n  };\n\n  /**\n   * Returns a dimension selection of the specified dimension.\n   * @param {string} dim The dimension\n   */\n  Selection.prototype.dim = function(dim) {\n    return this.dimMap(function(dataSource) {\n      return dataSource.data.map(dataFns.dimension(dataSource, dim));\n    });\n  };\n\n  /**\n   * Returns a new selection with the specified dimensions\n   * in a flat form.\n   * @param {string|Array.<string>} dims A list of dimensions.\n   */\n  Selection.prototype.flatten = function(dims) {\n    return this.map(function(dataSource) {\n      var newDataSource = {};\n      obj.extend(newDataSource, dataSource);\n      delete newDataSource.dimensions;\n      newDataSource.data = dataSource.data.map(function(d) {\n        var data = {};\n        array.getArray(dims).forEach(function(dim) {\n          data[dim] = dataFns.dimension(dataSource, dim)(d);\n        });\n        return data;\n      });\n      return newDataSource;\n    });\n  };\n\n  return {\n\n    /**\n     * Creates a new selection.\n     * Optionally takes in a single or list of data sources\n     * to initialize the selection.\n     * @param {(Object, Array.<Object>)?}\n     */\n    create: function(optDataSource) {\n      return new Selection(optDataSource);\n    },\n\n    /**\n     * Returns selection prototype for extension.\n     */\n    getSelectionPrototype: function() {\n      return Selection.prototype;\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Config mixin generator.\n * A function to generate a new object with a config() method.\n * Optionally adds various named getter/setter methods for individual\n * config options.\n */\ndefine('core/config',[\n  'core/object',\n  'core/array'\n],\nfunction (obj, array) {\n  'use strict';\n\n  var mixinGenerator;\n\n  /**\n   * Generates a config() mixin that gets/sets properties on the specified\n   * configObj. Use with core.object.extend();\n   * @param {Object} configObj Where to get/set properties.\n   * @param {String} propNames... Optional series of property names to add\n   *  convenience functions for.\n   * @return {Object}\n   */\n  mixinGenerator = function(configObj) {\n\n    var mixin = {},\n        propNames = array.convertArgs(arguments, 1);\n\n    function setValue(key, value) {\n      configObj[key] = value;\n    }\n\n    function getValue(key) {\n      return configObj[key];\n    }\n\n    // Generate all the individual property config functions.\n    propNames.forEach(function (propName) {\n      mixin[propName] = function (value) {\n        if (!arguments.length) {\n          return getValue(propName);\n        }\n        setValue(propName, value);\n        return this;\n      };\n    }, this);\n\n    /**\n     * Adds specified methods to current context and rebinds them to src.\n     * Similar to d3.rebind(), but also saves any set values in context obj\n     * via config() mixin too.\n     * @see https://github.com/mbostock/d3/wiki/Internals#wiki-rebind\n     * @param {Object} src\n     * @param {String} methods...\n     */\n    mixin.rebind = function(src) {\n      var methods = array.convertArgs(arguments, 1);\n\n      if (!this.__boundMethods__) {\n        this.__boundMethods__ = [];\n      }\n      methods.forEach(function(method) {\n        this.__boundMethods__.push(method);\n        this[method] = function() {\n          // Call setter on the bound object\n          if (arguments.length) {\n            src[method].apply(this, arguments);\n          }\n          if (arguments.length > 1) {\n            // Set array on config if more than 1 arg.\n            setValue.call(null, method, array.convertArgs(arguments));\n          } else if (arguments.length === 1) {\n            // Set the single value.\n            setValue(method, arguments[0]);\n          } else if (arguments.length === 0) {\n            // No values to set, just return corresponding value.\n            return getValue(method);\n            //return src[method].call(this);\n          }\n          return this;\n        };\n      }, this);\n    };\n\n    /**\n     * Calls all the bound methods for the target object using the target's\n     * config. Assumes the config.mixin() is applied.\n     * @param {String[]} filters Optionally apply on a subset of the\n     *  bound methods.\n     */\n    mixin.reapply = function(filters) {\n      var methods, value;\n      if (!this.__boundMethods__) {\n        return;\n      }\n      methods = this.__boundMethods__;\n      if (filters) {\n        methods = methods.filter(function(method) {\n          return filters.indexOf(method) !== -1;\n        });\n      }\n      methods.forEach(function(method) {\n        value = getValue(method);\n        if (value !== undefined) {\n          this[method](getValue(method));\n        }\n      }, this);\n    };\n\n    /**\n     * @desc A multi-property config function.\n     * All use-cases that don't specificially return a value will return the\n     *   context object.\n     *\n     * Uses:\n     *  - Call with single object to set multiple config options.\n     *  - Call with string to get a single config option.\n     *    NOTE: if value is a function it will be executed.\n     *  - Call with string and value to set a single config option.\n     *  - Call with 0 args to get the object containing all config options.\n     *    NOTE: this is the live object and should not be mutated.\n     */\n    mixin.config = function () {\n      var args = array.convertArgs(arguments),\n          argCount = args.length,\n          firstArg,\n          boundMethodFilter;\n\n      if (argCount === 0) {\n        // TODO: Might want to core.object.clone() this.\n        return configObj;\n      }\n      firstArg = args[0];\n      if (argCount === 1) {\n        if (typeof firstArg === 'string') {\n          return getValue(firstArg);\n        }\n        if (typeof firstArg === 'object') {\n          obj.extend(configObj, firstArg);\n          boundMethodFilter = Object.keys(firstArg);\n        }\n      } else {\n        // 2 args.\n        setValue(firstArg, args[1]);\n        boundMethodFilter = [firstArg];\n      }\n      this.reapply(boundMethodFilter);\n      return this;\n    };\n\n    return mixin;\n  };\n\n  return {\n    mixin: mixinGenerator\n  };\n\n});\n","\ndefine('assets/assets',[],function() {\n  'use strict';\n\n  var assets = '<svg id=\"gl-assets\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n'  <defs>' +\n'  <svg id=\"gl-asset-icon-error\" viewbox=\"0 0 12 12\" width=\"12\" height=\"12\">' +\n'    <path fill=\"#C40022\" d=\"M1.922,10.923c-1.713,0-2.413-1.245-1.557-2.729l4.076-7.078c0.856-1.483,2.258-1.491,3.114-0.008 l4.078,7.09c0.856,1.483,0.156,2.725-1.557,2.725H1.922z\">' +\n'    </path>' +\n'    <circle fill=\"#fff\" cx=\"6\" cy=\"8.75\" r=\"1\">' +\n'    </circle>' +\n'    <line x1=\"6\" y1=\"3\" x2=\"6\" y2=\"6\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\">' +\n'    </line>' +\n'  </svg>' +\n'  <svg id=\"gl-asset-spinner\">' +\n'    <defs>' +\n'      <line id=\"gl-asset-spinner-line\" opacity=\"1\" fill=\"none\" stroke-linecap=\"round\" stroke-width=\"1.4\" x1=\"2.9\" y1=\"2.9\" x2=\"5\" y2=\"5\" stroke=\"#333\">' +\n'      </line>' +\n'    </defs>' +\n'    <g transform=\"translate(8, 8)\">' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(30)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.1s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(60)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.2s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(90)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.3s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(120)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.4s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(150)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.5s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(180)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.6s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(210)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.7s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(240)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.8s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(270)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"0.9s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(300)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"1s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(330)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"1.1s\">' +\n'        </animate>' +\n'      </use>' +\n'      <use xlink:href=\"#gl-asset-spinner-line\" transform=\"rotate(360)\">' +\n'        <animate attributename=\"opacity\" repeatcount=\"indefinite\" attributetype=\"CSS\" from=\"1\" to=\"0.3\" dur=\"1.2s\" begin=\"1.2s\">' +\n'        </animate>' +\n'      </use>' +\n'    </g>' +\n'  </svg>' +\n'  </defs>'+\n'</svg>' +\n'';\n  return assets;\n});","\n/**\n * @fileOverview\n * Loads SVG assets and injects them into the page.\n */\ndefine('core/asset-loader',[\n  'assets/assets'\n],\nfunction(assets) {\n  'use strict';\n\n  return {\n\n    /**\n     * Loads all precompiled SVG assets into the DOM.\n     */\n    loadAll: function() {\n      // Only append if it doesn't already exist.\n      if (!d3.select('#gl-global-assets').empty()) {\n        return;\n      }\n      d3.select(document.body).append('div')\n        .attr({\n          id: 'gl-global-assets'\n        })\n        .style({\n          'height': '0px',\n          'width': '0px',\n          'display': 'none'\n        })\n      .html(assets);\n    },\n\n    /**\n     * Removes the element containing all precompiled SVG assets.\n     */\n    removeAll: function() {\n      var body = document.body;\n      body.removeChild(body.querySelector('#gl-global-assets'));\n    }\n\n  };\n\n});\n","\ndefine('mixins/toggle',[],function () {\n  'use strict';\n\n  return {\n\n    /**\n    * @description Makes the component visible\n    * @return {components.component}\n    */\n    show: function () {\n      var root = this.root();\n      if (root) {\n        root.attr('display', null);\n        if (this.dispatch && this.dispatch.show) {\n          this.dispatch.show.call(this);\n        }\n      }\n      return this;\n    },\n\n    /**\n    * @description Hides the component\n    * @return {components.component}\n    */\n    hide: function () {\n      var root = this.root();\n      if (root) {\n        root.attr('display', 'none');\n        if (this.dispatch && this.dispatch.hide) {\n          this.dispatch.hide.call(this);\n        }\n      }\n      return this;\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Utility selector to select a single node which has an attr with a\n *   certain value.\n */\ndefine('d3-ext/select-attr',[\n  'd3'\n],\nfunction(d3) {\n  'use strict';\n\n  /**\n   * Selects a sub-selection of the current selection which is the first\n   *   node that has a matching attr and value.\n   * @param attr The attribute to check.\n   * @param value The value that attr must have set.\n   * @return {d3.selection}\n   */\n  d3.selection.prototype.selectAttr = function(attr, value) {\n    return this.select('[' + attr + '=\"' + value + '\"]');\n  };\n\n  return d3;\n});\n","\n/**\n * @fileOverview\n * Utility functions related to d3 selections.\n */\ndefine('d3-ext/util',[\n  'd3-ext/select-attr'\n],\nfunction() {\n  'use strict';\n\n  return {\n\n    /**\n     * Same as d3.select but allows a d3.selection as input too.\n     * @param {d3.selection|string} selection\n     */\n    select: function(selection) {\n      return (Array.isArray(selection)) ?\n        selection :\n        d3.select(selection);\n    },\n\n    /**\n     * Applies a function to a component target conditionally if it exists.\n     *\n     * @param {components.component} component\n     * @param {d3.selection|string|null} selection\n     * @param {Function} fn The function to apply if the target exists.\n     *   This function will be passed the target as a single arg,\n     *   and executed in the context of the component.\n     * @return {null|*} Returns null if target is empty,\n     *   otherwise whatever fn returns.\n     */\n    applyTarget: function(component, selection, fn) {\n      var target, componentTarget;\n\n      target = this.select(selection);\n      componentTarget = component.config('target');\n      if (componentTarget) {\n        target = target.selectAttr('gl-container-name',\n          componentTarget);\n      }\n\n      if (!target || target.empty()) {\n        return null;\n      }\n      return fn.call(component, target);\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n *\n * Gets the target target container, inspects zindex of all children,\n * removes all children, sort them by zindex. Then reinsert all children in\n * zindex order.\n */\n\ndefine('mixins/zIndex',[],function () {\n  'use strict';\n\n  function getZIndex(ele) {\n    return d3.select(ele).attr('gl-zIndex') || 0;\n  }\n\n  /**\n   * Filters a nodeList by className and returns\n   * a d3 selection.\n   */\n  function filterByClass(nodeList, className) {\n    var matches = [], i;\n    for (i = 0; i < nodeList.length; i++) {\n      if(d3.select(nodeList[i]).classed(className)) {\n        matches.push(nodeList[i]);\n      }\n    }\n    return d3.selectAll(matches);\n  }\n\n  return {\n\n    /**\n     * Enforces z-index based positioning of a component within its\n     * parent container.\n     */\n    applyZIndex: function () {\n      var root = this.root(), parent;\n      if (root) {\n        root.attr('gl-zIndex', this.zIndex());\n        parent = d3.select(root.node().parentNode);\n        filterByClass(parent.node().childNodes, 'gl-component')\n          .remove()[0].sort(function(a, b) {\n            return getZIndex(a) - getZIndex(b);\n          }).forEach(function(ele) {\n            parent.node().appendChild(ele);\n          });\n      }\n      return this;\n    }\n\n  };\n\n});\n","\ndefine('events/pubsub',[\n  'core/array'\n],\nfunction(array) {\n  'use strict';\n\n  /**\n   * A global singleton instance.\n   * @private\n   */\n  var globalInstance;\n\n  function broker() {\n    var callbackCache;\n\n    /**\n     * Cache object to hold all the topics and callback references.\n     * @private\n     */\n    callbackCache = {};\n\n    return {\n\n      /**\n       * Publishes an event for a topic.\n       * Also takes additional arguments to pass along to subscribers.\n       *\n       * @public\n       * @param {String} topic The topic/event name.\n       * @return {events.pubsub}\n       */\n      pub: function(topic) {\n        var args;\n\n        if (!callbackCache[topic]) {\n          return this;\n        }\n        args = array.convertArgs(arguments, 1);\n        callbackCache[topic].forEach(function(callback) {\n          callback.apply(this, args);\n        }, this);\n        return this;\n      },\n\n      /**\n       * Subscribes to an event for a topic.\n       *\n       * @public\n       * @param {String} topic The topic/event name.\n       * @param {Function} callback\n       * @return {events.pubsub}\n       */\n      sub: function(topic, callback) {\n        if (!callbackCache[topic]) {\n          callbackCache[topic] = [];\n        }\n        callbackCache[topic].push(callback);\n        return this;\n      },\n\n      /**\n       * Unsubscribe all, or just particular, callbacks from a topic.\n       *\n       * @public\n       * @param {String} topic\n       * @param {Array|Function} optCallbacks\n       * @return {events.pubsub}\n       */\n      unsub: function(topic, optCallbacks) {\n        var subscribers;\n\n        // No callbacks specified, remove all for that topic.\n        if (!optCallbacks) {\n          delete callbackCache[topic];\n          return this;\n        }\n        subscribers = callbackCache[topic] || [];\n        // No subscribers to remove, return early.\n        if (!subscribers.length) {\n          return this;\n        }\n        // Only remove specified callbacks for topic.\n        array.remove(subscribers, optCallbacks);\n        return this;\n      },\n\n      /**\n       * Unsubscribe everything and reset the cache.\n       *\n       * @public\n       * @return {events.pubsub}\n       */\n      clearAll: function() {\n        callbackCache = {};\n        return this;\n      }\n    };\n  }\n\n  return {\n\n    /**\n     * Creates a new pubsub instance.\n     *\n     * @public\n     * @return {events.pubsub}\n     */\n    create: function() {\n      return broker();\n    },\n\n    /**\n     * Returns the global singleton instance if it exists, otherwise creates it.\n     *\n     * @public\n     * @return {events.pubsub}\n     */\n    getSingleton: function() {\n      if (globalInstance) {\n        return globalInstance;\n      }\n      globalInstance = this.create();\n      return globalInstance;\n    },\n\n    /**\n     * Gives context to pubsub events.\n     * @param {String?} context\n     * @return {String}\n     */\n    scope: function() {\n      var scope =  arguments[0] ? arguments[0] + ':' : '';\n      return function() {\n        return scope + arguments[0];\n      };\n    }\n\n  };\n\n});\n","\ndefine('mixins/component',[\n  'core/object',\n  'core/config',\n  'core/array',\n  'mixins/toggle',\n  'mixins/zIndex',\n  'events/pubsub'\n], function (obj, config, array, toggle, zIndex, pubsub) {\n\n  'use strict';\n\n  return {\n\n    /**\n    * @description Returns the root selection of the component.\n    * @return {d3.selection}\n    */\n    root: function () {\n      return this._.root;\n    },\n\n    /**\n     * Initalises all common component mixins, properties etc\n     */\n    init: function() {\n      var _ = this._;\n      _.globalPubsub = pubsub.getSingleton();\n      obj.extend(\n        this,\n        config.mixin(\n          _.config,\n          'cid',\n          'target',\n          'rootId',\n          'zIndex'\n        ),\n        toggle,\n        zIndex);\n    },\n\n    /**\n     * A standard implementaion of the data setter/getter of the component.\n     */\n    data: function(data) {\n      var _ = this._;\n      if (data) {\n        _.dataCollection = data;\n        return this;\n      }\n      if (!_.dataCollection) {\n        return null;\n      }\n      return _.dataCollection.get(_.config.dataId);\n    },\n\n    /**\n     * Returns a pubsub event scoped to the rootId of the graph.\n     * @param {String} The event name.\n     * @return {String} The scoped (prefixed) event name.\n     */\n    globalScope: function(eventName) {\n      return pubsub.scope(this._.config.rootId)(eventName);\n    },\n\n    /**\n     * Returns a scope local to the component i.e caller is a\n     * graph: Events are scoped to the graph rootId\n     * component: Events are scope to component cid\n     * @param {String} eventName event name.\n     * @return {String} The scoped (prefixed) event name.\n     */\n    scope: function(eventName) {\n      var scope = this._.config.rootId;\n      if (this._.config.type !== 'graph') {\n        scope = [scope, this._.config.cid].join(':');\n      }\n      return pubsub.scope(scope)(eventName);\n    },\n\n    /**\n     * A lifecyle method for cleaning up after the component.\n     */\n    destroy: function() {\n      var _ = this._;\n      array.getArray(_.config.components).forEach(function(component) {\n        component.destroy();\n      });\n      if(_.root) {\n        _.root.remove();\n      }\n      this.emit('destroy');\n      this._ = null;\n    },\n\n    /**\n     * A lifecycle method for rendering the component.\n     */\n    render: function() {\n      // noop\n      return this;\n    },\n\n    /**\n     * Returns a boolean indicating whether the component is rendered.\n     * @return {Boolean}\n     */\n    isRendered: function() {\n      return !!this.root();\n    },\n\n    /**\n     * A lifecycle method for updating a rendered component.\n     */\n    update: function() {\n      // noop\n      return this;\n    },\n\n    /**\n     * Event handler attacher.\n     * Note: The events are scoped local to the component.\n     * @param {String} eventName The event name\n     * @param {Function} callback\n     */\n    on: function(eventName, callback) {\n      var _ = this._;\n      _.globalPubsub.sub(this.scope(eventName), callback);\n    },\n\n    /**\n     * Event handler detacher.\n     * If the callback isn't specified, it deregisters all subscribed events.\n     * @param {String} eventName The event name\n     * @param {Function?} callback\n     */\n    off: function(eventName, callback) {\n      var _ = this._;\n      _.globalPubsub.unsub(this.scope(eventName), callback);\n    },\n\n    /**\n     * Event emitter.\n     * @param {String} eventName The event name\n     * @param {...} arguments The arguments that are passed to the callback.\n     */\n    emit: function(eventName) {\n      var _ = this._,\n          args = array.convertArgs(arguments);\n      args[0] = this.scope(eventName);\n      _.globalPubsub.pub.apply(this, args);\n    }\n\n  };\n\n});\n","\ndefine('mixins/highlight',['data/functions'], function (dataFns) {\n  'use strict';\n\n  /**\n   * Calculates the nearest data point based on the x co-ordinate\n   * of current event.\n   * Calculates the x dimension equivalent by inverting the scale and\n   * uses https://github.com/mbostock/d3/wiki/Arrays#wiki-d3_bisector\n   * to determine the approximate index of the closest point.\n   * @param  {Object} config\n   * @param  {Object} dataSource\n   * @param  {Number} xPos\n   * @return {Object} datapoint closest to the x co-ordinate\n   */\n  function calculateNearestDataPoint(config, dataSource, xPos) {\n    var data, startX, xDim, bisectData,\n      d0, d1, clampedDataIndex, clampedData;\n\n    xDim = dataFns.dimension(dataSource, 'x');\n    data = dataSource.data;\n\n    startX = config.xScale.invert(xPos);\n    bisectData = d3.bisector(function(d) { return xDim(d); }).left;\n    clampedDataIndex = bisectData(data, startX, 1);\n\n    d0 = data[clampedDataIndex - 1],\n    d1 = data[clampedDataIndex],\n    clampedData = startX -  xDim(d0) >  xDim(d1) - startX ? d1 : d0;\n\n    return clampedData;\n  }\n\n  /**\n   * Calculates the closest data-point component's data\n   * and highlights it.\n   * @param  {components.component} component\n   * @param  {data.collection} dataCollection\n   * @param  {Number} xPos\n   * @param {Object} datapoint closest to the x co-ordinate\n   */\n  function highlightNearestPoint(component, dataCollection, xPos,\n    dataPoint) {\n    var config, selection, root, radius, xDim, yDim, dataSource;\n\n    config = component.config();\n    root = component.root();\n    dataSource = component.data();\n    xDim = dataFns.dimension(dataSource, 'x');\n    yDim = dataFns.dimension(dataSource, 'y');\n    selection = root.select('.' + getClassName(config));\n\n    selection.attr({\n      'r': config.highlightRadius,\n      'visibility': getVisibility(component, dataCollection),\n      'transform': 'translate(' + config.xScale(xDim(dataPoint)) +\n        ',' + config.yScale(yDim(dataPoint)) + ')'\n    });\n\n    if (config.type === 'scatter') {\n      radius = dataFns.dimension(dataSource, 'r')(dataPoint);\n      selection.attr('r', radius ? radius : config.radius);\n    }\n  }\n\n  function showHighlightTransition(selection, config) {\n    selection.transition()\n      .duration(config.highlightTransDuration)\n      .delay(config.highlightTransDelay)\n      .attr('r', 0);\n  }\n\n  function getVisibility(component, dataCollection) {\n    if (dataCollection.hasTags(component.config().id, 'inactive')) {\n      return 'hidden';\n    }\n    return 'visible';\n  }\n\n  function getClassName(config) {\n    return 'gl-highlight-' + config.cid;\n  }\n\n  return {\n    /**\n    * Sets the highlight and pub/sub events\n    */\n    initHighlight: function() {\n      var _ = this._;\n      if (_.config.showHighlight && !_.isHighlighted) {\n        this.highlight();\n        this.pubsubHighlightEvents(_.globalPubsub, _.dataCollection);\n        _.isHighlighted = true;\n      }\n      return this;\n    },\n\n    /**\n     * Adds a circle for the component\n     * which will be highlighted on hover.\n     * @return {components.component}\n     */\n    highlight: function() {\n      var root, config;\n      root = this.root();\n      config = this.config();\n\n      if (root) {\n        //Ensures that highlight is added only once\n        if (!root.select('.' + getClassName(config)).node()) {\n          root.append('circle')\n          .attr({\n            'fill': config.highlightFill,\n            'stroke': config.color,\n            'stroke-width': config.highlightStrokeWidth,\n            'r': config.highlightRadius,\n            'class': getClassName(config),\n            'visibility': 'hidden',\n            'pointer-events': 'none'\n          });\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Pub/Sub highlight events\n     * @param  {events.pubsub} pubSub\n     * @param  {data.collection} dataCollection\n     * @return {components.component}\n     */\n    pubsubHighlightEvents: function(pubSub, dataCollection) {\n      var root, mouseout, mousemove, component;\n\n      root = this.root();\n      mousemove = this.scope('mousemove');\n      mouseout = this.scope('mouseout');\n      component = this;\n      if (root) {\n        root.on('mousemove', function() {\n          pubSub.pub(\n            mousemove,\n            d3.event.target,\n            component,\n            dataCollection,\n            pubSub\n          );\n          }, true);\n        root.on('mouseout', function() {\n            pubSub.pub(mouseout, component, pubSub);\n          }, true);\n        pubSub.sub(mouseout, component.handleMouseOut);\n        pubSub.sub(mousemove, component.handleMouseMove);\n      }\n      return this;\n    },\n\n    /**\n     * Handler for mousemove event on the root of the\n     * component\n     * @param  {Element} target\n     * @param  {components.component} component\n     * @param  {data.collection} dataCollection\n     * @return {components.component}\n     */\n    handleMouseMove: function(target, component, dataCollection, pubSub) {\n      var xPos, dataPoint, config, dataSource, data;\n      config = component.config();\n      dataSource = component.data();\n      xPos = d3.mouse(target)[0];\n      dataPoint = calculateNearestDataPoint(\n        component.config(),\n        component.data(),\n        xPos\n      );\n\n      if (xPos > 0) {\n        highlightNearestPoint(\n          component,\n          dataCollection,\n          d3.mouse(target)[0],\n          dataPoint\n        );\n      }\n\n      data = {\n        'x': config.xScale(dataFns.dimension(dataSource, 'x')(dataPoint)),\n        'y': config.yScale(dataFns.dimension(dataSource, 'y')(dataPoint))\n      };\n\n      //Event to show the tooltip\n      pubSub.pub(\n        component.globalScope('tooltip-show'),\n        data,\n        target,\n        dataFns.dimension(component.data(), 'tooltip')(dataPoint));\n      return this;\n    },\n\n    /**\n     * Handler for mouseout event on root of\n     * the component\n     * @param  {components.component} component\n     * @return {components.component}\n     */\n    handleMouseOut: function(component, pubSub) {\n      var selection, config;\n\n      config = component.config();\n      selection = component.root()\n        .select('.' + getClassName(config));\n\n      if (config.showHighlightTransition) {\n        showHighlightTransition(selection, config);\n      } else{\n        selection.attr('visibility', 'hidden');\n      }\n      pubSub.pub(component.globalScope('tooltip-hide'));\n      return this;\n    },\n\n    /**\n     * Highlights the closest data point on hover.\n     * @param  {components.component} component\n     * @param  {Object} dataCollection\n     * @param  {Number} xPos\n     */\n    highlightOnHover: function(component, dataCollection, xPos) {\n      var dataPoint;\n\n      dataPoint = calculateNearestDataPoint(\n        component.config(),\n        component.data(),\n        xPos\n      );\n      highlightNearestPoint(component, dataCollection, xPos, dataPoint);\n      return this;\n    }\n  };\n\n});\n","\ndefine('mixins/mixins',[\n  'mixins/toggle',\n  'mixins/component',\n  'mixins/zIndex',\n  'mixins/highlight'\n],\nfunction(toggle, component, zIndex, highlight) {\n  'use strict';\n\n  return {\n    toggle: toggle,\n    component: component,\n    zIndex: zIndex,\n    highlight: highlight\n  };\n\n});\n","\n/**\n * @fileOverview\n * Reusuable line component.\n */\ndefine('components/line',[\n  'core/array',\n  'core/config',\n  'core/object',\n  'core/function',\n  'core/string',\n  'd3-ext/util',\n  'mixins/mixins',\n  'data/functions'\n],\nfunction(array, config, obj, fn, string, d3util, mixins, dataFns) {\n  'use strict';\n\n\n  return function() {\n\n    //Private variables\n    var _ = {\n      config: {},\n      isHighlighted: false\n    };\n\n    _.defaults = {\n      type: 'line',\n      target: null,\n      cid: null,\n      color: null,\n      dashed: false,\n      strokeDashArray: '5, 5',\n      strokeWidth: 1.5,\n      inLegend: true,\n      lineGenerator: d3.svg.line(),\n      interpolate: 'linear',\n      xScale: null,\n      yScale: null,\n      opacity: 1,\n      hiddenStates: null,\n      rootId: null,\n      zIndex: 5,\n      showHighlightTransition: false,\n      highlightRadius: 4,\n      highlightFill: '#fff',\n      highlightStrokeWidth: 2,\n      highlightTransDuration: 500,\n      highlightTransDelay: 1000,\n      showHighlight: false\n    };\n\n    /**\n     * Updates the line component\n     * @param  {d3.selection} selection\n     */\n    function update(selection) {\n      selection\n        .datum(line.data().data)\n        .attr({\n          'stroke-width': _.config.strokeWidth,\n          'stroke-dasharray': _.config.dashed ? _.config.strokeDashArray : null,\n          'stroke': _.config.color,\n          'opacity': _.config.opacity,\n          'd': _.config.lineGenerator\n      });\n    }\n\n    /**\n     * Removes elements from the exit selection\n     * @param  {d3.selection|Node|string} selection\n     */\n    function remove(selection) {\n      if (selection && selection.exit) {\n        selection.exit().remove();\n      }\n    }\n\n    /**\n     * Gets value of X for a data object\n     * Converts into UTC data for time series.\n     * @param  {Object} data\n     * @param  {number} index\n     * @return {string|number}\n     */\n    function getX(data, index) {\n      var x, dataConfig;\n      dataConfig = line.data();\n      x = dataFns.dimension(\n        dataConfig,\n        'x'\n      )(data, index);\n      return x;\n    }\n\n    /**\n     * Handles the sub of data-toggle event.\n     * Checks presence of inactive tag\n     * to show/hide the line component\n     * @param  {string} dataId\n     */\n     function handleDataToggle(args) {\n      var id = _.config.dataId;\n      if (args === id) {\n        if (_.dataCollection.hasTags(id, 'inactive')) {\n          line.hide();\n        } else {\n          line.show();\n        }\n      }\n    }\n\n    /**\n     * Main function for line component\n     * @return {components.line}\n     */\n    function line() {\n      obj.extend(_.config, _.defaults);\n      return line;\n    }\n    line._ = _;\n\n    obj.extend(\n      line,\n      config.mixin(\n        _.config,\n        'xScale',\n        'yScale',\n        'lineGenerator',\n        'color'\n      ),\n      mixins.component,\n      mixins.highlight);\n\n    line.init();\n\n    /**\n     * Updates the line component with new/updated data/config\n     * @return {components.line}\n     */\n    line.update = function() {\n      var dataConfig, selection;\n\n      if (!_.root) {\n        return line;\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      line.initHighlight();\n      dataConfig = line.data();\n      // Return early if there's no data.\n      if (!dataConfig || !dataConfig.data) {\n        return line;\n      }\n      // Configure the lineGenerator function\n      _.config.lineGenerator\n        .x(function(d, i) {\n          return _.config.xScale(getX(d, i));\n        })\n        .y(function(d, i) {\n          return _.config.yScale(dataFns.dimension(dataConfig, 'y')(d, i));\n        })\n        .defined(function(d, i) {\n          var minX;\n          minX = _.config.xScale.range()[0];\n          return _.config.xScale(getX(d, i))  >= minX;\n        })\n        .interpolate(_.config.interpolate);\n      selection = _.root.select('.gl-path')\n        .data(dataConfig.data);\n      update(selection);\n      remove(selection);\n      line.applyZIndex();\n      line.emit('update');\n      return line;\n    };\n\n    /**\n     * Renders the line component\n     * @param  {d3.selection|Node|string} selection\n     * @return {components.line}\n     */\n    line.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(line, selection, function(target) {\n          var root = target.append('g')\n            .attr({\n              'class': string.classes('component', 'line')\n            });\n          root.append('path')\n            .attr({\n              'class': 'gl-path',\n              'fill': 'none'\n            });\n          return root;\n        });\n      }\n      _.globalPubsub.sub(line.globalScope('data-toggle'), handleDataToggle);\n      line.update();\n      line.emit('render');\n      return line;\n    };\n\n    /**\n     * Destroys the line and removes everything from the DOM.\n     * @public\n     */\n    line.destroy = fn.compose.call(line, line.destroy, function() {\n      _.globalPubsub.unsub(line.globalScope('data-toggle'), handleDataToggle);\n      _.globalPubsub.unsub(line.scope('mouseout'), line.handleMouseOut);\n      _.globalPubsub.unsub(line.scope('mousemove'), line.handleMouseMove);\n    });\n\n    return line();\n\n  };\n});\n","\n/**\n * @fileOverview\n * A Legend component that displays keys containing color indicators and the\n * label text of data.\n */\ndefine('components/legend',[\n  'core/object',\n  'core/config',\n  'core/string',\n  'core/array',\n  'd3-ext/util',\n  'mixins/mixins'\n],\nfunction(obj, config, string, array, d3util, mixins) {\n  'use strict';\n\n  return function() {\n\n    // PRIVATE\n\n    var _ = {\n      config: {}\n    },\n      onClickHandler;\n\n\n    _.defaults = {\n      type: 'legend',\n      position: 'center-left',\n      target: null,\n      cid: null,\n      indicatorWidth: 10,\n      indicatorHeight: 10,\n      indicatorSpacing: 4,\n      fontColor: '#333',\n      fontFamily: 'Arial, sans-serif',\n      fontWeight: 'normal',\n      fontSize: 13,\n      layout: 'horizontal',\n      inactiveColor: 'grey',\n      gap: 20,\n      keys: [],\n      hiddenStates: ['loading'],\n      rootId: null,\n      hideOnClick: true,\n      zIndex: 10\n    };\n\n    /**\n     * Handles the click event on legend.\n     */\n    onClickHandler = function(d) {\n      var sel = d3.select(this),\n      inactive = _.config.inactiveColor,\n      fontColor = _.config.fontColor;\n\n      if (_.dataCollection.hasTags(d.dataId, 'inactive')) {\n        sel.select('text').attr('fill', fontColor);\n        sel.select('rect').attr('fill', d.color);\n      } else {\n        sel.select('text').attr('fill', inactive);\n        sel.select('rect').attr('fill', inactive);\n      }\n      // toggles data's tag on the data collection\n      _.dataCollection.toggleTags(d.dataId, 'inactive', _.config.rootId);\n    };\n\n    /**\n     * Inserts new keys.\n     * @param {d3.selection} selection\n     */\n    _.enter = function(selection) {\n      var enterSelection;\n\n      enterSelection = selection\n        .enter()\n          .append('g')\n          .attr({\n            'class': 'gl-legend-key',\n            'gl-dataId': function(d) { return d.dataId; }\n          });\n\n      // Add new key indicator.\n      enterSelection\n        .append('rect')\n        .attr({\n          'class': 'gl-legend-key-indicator',\n          'stroke': 'none',\n          'x': 0,\n          'y': 0\n        });\n\n      // Add new key text.\n      enterSelection\n        .append('text')\n        .attr({\n          'class': 'gl-legend-key-label',\n          'text-anchor': 'start',\n          'stroke': 'none'\n        });\n\n    };\n\n    /**\n     * Apply updates to the update selection.\n     * @param {d3.selection} selection\n     */\n    _.update = function(selection) {\n      var inactive, color;\n\n      // Handle click event- toggle data inactive\n      if(_.config.hideOnClick) {\n        selection\n          .on('click', onClickHandler);\n      } else {\n        selection\n          .on('click', null);\n      }\n\n      // The outer <g> element for each key.\n      selection\n        .attr({\n          'font-family': _.config.fontFamily,\n          'font-size': _.config.fontSize,\n          'font-weight': _.config.fontWeight\n        });\n\n      // Update key indicators.\n      selection.selectAll('.gl-legend-key-indicator')\n        .attr({\n          'width': _.config.indicatorWidth,\n          'height': _.config.indicatorHeight,\n          'style': function() {\n            return _.config.hideOnClick ? 'cursor: pointer;' : null;\n          },\n          'fill': function(d) {\n            inactive = _.dataCollection.hasTags(d.dataId, 'inactive');\n            color = inactive ? _.config.inactiveColor : d3.functor(d.color)();\n            return color;\n          }\n        });\n\n      // Update key text.\n      selection.selectAll('.gl-legend-key-label')\n        .text(function(d) { return d.label; })\n        .attr({\n          'x': _.config.indicatorWidth + _.config.indicatorSpacing,\n          'y': _.config.indicatorHeight,\n          'style': function() {\n            return _.config.hideOnClick ? 'cursor: pointer;' : null;\n          },\n          'fill': function(d) {\n            inactive = _.dataCollection.hasTags(d.dataId, 'inactive');\n            color = inactive ? _.config.inactiveColor : _.config.fontColor;\n            return color;\n          }\n        });\n    };\n\n    /**\n     * Remove any keys that were removed.\n     * @param {d3.selection} selection\n     */\n    _.remove = function(selection) {\n      selection.exit().remove();\n    };\n\n    // PUBLIC\n\n    /**\n     * The main function.\n     */\n    function legend() {\n      obj.extend(_.config, _.defaults);\n      return legend;\n    }\n\n    legend._ = _;\n\n    // Apply Mixins.\n    obj.extend(\n      legend,\n      config.mixin(\n        _.config,\n        'keys',\n        'fontColor',\n        'fontFamily',\n        'fontSize',\n        'fontWeight',\n        'indicatorWidth',\n        'indicatorHeight'\n      ),\n      mixins.component);\n    legend.init();\n\n\n    /**\n     * Gets/Sets the data to be used with the legend.\n     * @param {Object} data Any data source.\n     * @return {Object|dataCollection}\n     */\n    legend.data = function(data) {\n      if (data) {\n        _.dataCollection = data;\n        return legend;\n      }\n      if (!_.dataCollection) {\n        return null;\n      }\n      return _.dataCollection;\n    };\n\n    /**\n     * Apply post-render updates.\n     * Insert/update/remove DOM for each key.\n     */\n    legend.update = function() {\n      var selection, dataConfig;\n\n      // Return early if no data or render() hasn't been called yet.\n      if (!_.config.keys || !_.root) {\n        return legend;\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n\n      dataConfig = legend.data();\n      // Return early if there's no data.\n      if (!dataConfig) {\n        return legend;\n      }\n\n      // The selection of legend keys.\n      selection = _.root\n        .selectAll('.gl-legend-key')\n        .data(_.config.keys, function(d) {\n          return d.dataId;\n        });\n      _.remove(selection);\n      _.enter(selection);\n      _.update(selection);\n      _.root.layout({type: _.config.layout, gap: _.config.gap});\n      _.root.position(_.config.position);\n      legend.emit('update');\n      return legend;\n    };\n\n    /**\n     * Render the legend to the selection.\n     * Sets up initial DOM structure. Should only be called once.\n     * @param {d3.selection|String} selection A d3 selection\n     *    or a selector string.\n     */\n    legend.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(legend, selection, function(target) {\n          return target.append('g')\n            .attr({\n              'class': string.classes('component', 'legend')\n            });\n        });\n      }\n      legend.update();\n      legend.emit('render');\n      return legend;\n    };\n\n    return legend();\n  };\n\n});\n","\n/**\n * @fileOverview\n * Axis component.\n */\ndefine('components/axis',[\n  'core/object',\n  'core/config',\n  'core/string',\n  'mixins/mixins',\n  'd3-ext/util'\n],\nfunction(obj, config, string, mixins, d3util) {\n  'use strict';\n\n  return function() {\n\n    var _ = {\n        config: {}\n      };\n\n    _.defaults = {\n      type: 'axis',\n      axisType: 'x',\n      gap: 0,\n      target: null,\n      color: '#333',\n      opacity: 0.8,\n      fontFamily: 'arial',\n      fontSize: 10,\n      textBgColor: '#fff',\n      textBgSize: 3,\n      tickSize: 0,\n      ticks: 3,\n      hiddenStates: null,\n      rootId: null,\n      zIndex: 10\n    };\n\n    /**\n     * Translates the zero tick on the Y-axis by 10\n     * @private\n     */\n    function setZeroTickTranslate(selection) {\n      var transform;\n      transform = d3.transform(selection.attr('transform'));\n      transform.translate[1] -= 10;\n      selection.attr('transform', transform.toString());\n    }\n\n    /**\n     * Changes the default formatting of the d3 axis.\n     * @private\n     */\n    function formatAxis() {\n      var zeroTick, zeroTickLabel;\n      // remove boldness from default axis path\n      _.root.selectAll('path')\n        .attr({\n          'fill': 'none'\n        });\n\n      // update fonts\n      _.root.selectAll('text')\n        .attr({\n          'stroke': 'none',\n          'fill': _.config.color\n        });\n\n      //Apply padding to the first tick on Y axis\n      if (_.config.axisType === 'y') {\n        zeroTick = _.root.select('g');\n\n        if (zeroTick.node()) {\n          zeroTickLabel = zeroTick.text() +\n            (_.config.unit ? ' ' + _.config.unit : '');\n          zeroTick.select('text').text(zeroTickLabel);\n          setZeroTickTranslate(zeroTick);\n        }\n      }\n\n      // apply text background for greater readability.\n      _.root.selectAll('.gl-axis text').each(function() {\n\n        var textBg = this.cloneNode(true);\n        d3.select(textBg).attr({\n          stroke: _.config.textBgColor,\n          'stroke-width': _.config.textBgSize\n        });\n        this.parentNode.insertBefore(textBg, this);\n      });\n\n      // remove axis line\n      _.root.selectAll('.domain')\n        .attr({\n          'stroke': 'none'\n        });\n    }\n\n    /**\n     * Main function for Axis component.\n     */\n    function axis() {\n      obj.extend(_.config, _.defaults);\n      _.d3axis = d3.svg.axis();\n      axis.rebind(\n        _.d3axis,\n        'scale',\n        'orient',\n        'ticks',\n        'tickValues',\n        'tickSubdivide',\n        'tickSize',\n        'tickPadding',\n        'tickFormat');\n      return axis;\n    }\n    axis._ = _;\n\n    // Apply mixins.\n    obj.extend(\n      axis,\n      mixins.component);\n\n    axis.init();\n\n    /**\n     * Apply updates to the axis.\n     */\n    axis.update = function() {\n      if (!_.root) {\n        return axis;\n      }\n      _.root.selectAll('g').remove();\n      axis.reapply();\n      _.root.call(_.d3axis);\n      _.root.attr({\n        'font-family': _.config.fontFamily,\n        'font-size': _.config.fontSize,\n        'class': string.classes('component',\n            'axis', _.config.axisType + '-axis '),\n        'stroke': _.config.color,\n        'opacity': _.config.opacity\n      });\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n\n      formatAxis();\n      axis.applyZIndex();\n      axis.emit('update');\n      return axis;\n    };\n\n    /**\n     * Render the axis to the selection\n     * @param {d3.selection|String} selection A d3 selection\n     * @return {component.axis}\n     */\n    axis.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(axis, selection, function(target) {\n          return target.append('g')\n            .attr({\n              'fill': 'none',\n              'shape-rendering': 'crispEdges',\n              'stroke-width': 1\n            });\n        });\n      }\n      axis.update();\n      axis.emit('render');\n      return axis;\n    };\n\n    /**\n     * Gets or sets the d3axis function\n     * @param  {d3.svg.axis} d3Axis\n     * @return {component.axis}\n     */\n    axis.d3axis = function(d3Axis) {\n      if (d3Axis) {\n        _.d3axis = d3Axis;\n        return axis;\n      }\n      return _.d3axis;\n    };\n\n    return axis();\n  };\n\n});\n","\n/**\n * @fileOverview\n * Component to render a single arbirtary text label.\n */\ndefine('components/label',[\n  'core/object',\n  'core/config',\n  'core/string',\n  'core/array',\n  'd3-ext/util',\n  'mixins/mixins'\n],\nfunction(obj, config, string, array, d3util, mixins) {\n  'use strict';\n\n  return function() {\n\n    // PRIVATE\n\n    var _ = {\n      config: {}\n    };\n\n    _.defaults = {\n      type: 'label',\n      cid: null,\n      target: null,\n      dataId: null,\n      cssClass: null,\n      text: null,\n      gap: null,\n      layout: 'horizontal',\n      position: 'center-right',\n      color: '#333',\n      fontFamily: 'Arial, sans-serif',\n      fontWeight: 'normal',\n      fontSize: 13,\n      hiddenStates: null,\n      rootId: null,\n      zIndex: 10\n    };\n\n    // PUBLIC\n\n    /**\n     * The main function.\n     * @return {components.label}\n     */\n    function label() {\n      obj.extend(_.config, _.defaults);\n      return label;\n    }\n\n    label._ = _;\n\n    // Apply Mixins\n    obj.extend(\n      label,\n      config.mixin(\n        _.config,\n        'cssClass',\n        'color',\n        'fontFamily',\n        'fontSize',\n        'fontWeight'\n      ),\n      mixins.component);\n\n    label.init();\n\n    /**\n     * @description Gets/sets the static text to display.\n     *    Alternative to using data().\n     * @param {string} text\n     * @return {components.label|string}\n     */\n    label.text = function(text) {\n      if (text) {\n        _.config.text = d3.functor(text);\n        return label;\n      }\n      return d3.functor(_.config.text).call(this);\n    };\n\n    /**\n     * @description Does the initial render to the document.\n     * @param {d3.selection|Node|string} A d3.selection, DOM node,\n     *    or a selector string.\n     * @return {components.label}\n     */\n    label.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(label, selection, function(target) {\n          var root = target.append('g')\n            .attr({\n              'class': string.classes('component', 'label')\n            });\n          // With  xml:space = preserve setting, SVG will simply convert all\n          // newline and tab characters to blanks, and then display the result,\n          // including leading and trailing blanks. the same text.\n          root.append('text')\n            .attr('xml:space', 'preserve');\n          return root;\n        });\n      }\n      label.update();\n      label.emit('render');\n      return label;\n    };\n\n    /**\n     * @description Triggers a document updated based on new data/config.\n     * @return {components.label}\n     */\n    label.update = function() {\n      var text;\n\n      text = label.text();\n      // Return early if no data or render() hasn't been called yet.\n      if (!_.root || !text) {\n        return label;\n      }\n      if (_.config.cssClass) {\n        _.root.classed(_.config.cssClass, true);\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      _.root.select('text').attr({\n        'fill': _.config.color,\n        'font-family': _.config.fontFamily,\n        'font-size': _.config.fontSize,\n        'font-weight': _.config.fontWeight,\n        // NOTE: Need to manually set y position since dominant-baseline\n        //   doesn't work in FF or IE.\n        'y': _.config.fontSize\n      })\n      .text(text);\n      _.root.position(_.config.position);\n      label.emit('update');\n      return label;\n    };\n\n    return label();\n  };\n\n});\n","\n/**\n * @fileOverview\n * An overlay component that fills an area, hides its contents, and displays\n * a series of other components which render to the specified layout.\n */\ndefine('components/overlay',[\n  'core/object',\n  'core/config',\n  'core/string',\n  'components/label',\n  'mixins/mixins',\n  'd3-ext/util'\n],\nfunction(obj, config, string, label, mixins, d3util) {\n  'use strict';\n\n  return function() {\n\n    var _ = {\n        config: {}\n      },\n      updateChildren_;\n\n    _.config = {};\n\n    _.defaults = {\n      cid: null,\n      target: null,\n      components: [],\n      layoutConfig: { type: 'horizontal', position: 'center', gap: 6 },\n      opacity: 1,\n      backgroundColor: '#fff',\n      type: 'overlay',\n      hiddenStates: null,\n      rootId: null,\n      zIndex: 20\n    };\n\n    /**\n     * Append background rect, all child components, and apply the layout.\n     * @private\n     */\n    updateChildren_ = function() {\n      var parentNode,\n          componentsContainer;\n\n      parentNode = d3.select(_.root.node().parentNode);\n\n      _.root.select('rect').attr({\n        width: parentNode.width(),\n        height: parentNode.height(),\n        opacity: _.config.opacity,\n        fill: _.config.backgroundColor\n      });\n      componentsContainer = _.root.select('g')\n        .attr('class', 'gl-components');\n      _.config.components.forEach(function(component) {\n        if (component.root()) {\n          // If already rendered, just update instead.\n          component.update();\n        } else {\n          component.render(componentsContainer);\n        }\n      });\n      componentsContainer.layout(_.config.layoutConfig);\n    };\n\n    function overlay() {\n      obj.extend(_.config, _.defaults);\n      return overlay;\n    }\n    overlay._ = _;\n\n    // Apply Mixins\n    obj.extend(\n      overlay,\n      config.mixin(\n        _.config,\n        'cssClass',\n        'opacity',\n        'backgroundColor',\n        'layoutConfig'\n      ),\n      mixins.component);\n\n    overlay.init();\n\n    /**\n     * Renders the component to the specified selection,\n     * or to the configured target.\n     * @public\n     * @param {d3.selection|Node|String}\n     * @return {components.overlay}\n     */\n    overlay.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(overlay, selection, function(target) {\n          var root = target.append('g')\n            .attr({\n              'class': string.classes('component', 'overlay')\n            });\n          root.append('rect');\n          root.append('g');\n          return root;\n        });\n      }\n      overlay.update();\n      overlay.emit('render');\n      return overlay;\n    };\n\n    /**\n     * Triggers an update of the component reapplying all specified config\n     * updates.\n     * @public\n     * @return {componnets.update}\n     */\n    overlay.update = function() {\n      if (!_.root) {\n        return overlay;\n      }\n      if (_.config.cssClass) {\n        _.root.classed(_.config.cssClass, true);\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      updateChildren_();\n      overlay.applyZIndex();\n      overlay.emit('update');\n      return overlay;\n    };\n\n    return overlay();\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * A simple component to render out an asset.\n */\ndefine('components/asset',[\n  'core/object',\n  'core/config',\n  'core/string',\n  'mixins/mixins',\n  'd3-ext/util'\n],\nfunction(obj, config, string, mixins, d3util) {\n  'use strict';\n\n  return function() {\n\n    var _ = {\n      config: {}\n    };\n\n    _.defaults = {\n      cid: null,\n      assetId: null,\n      target: null,\n      cssClass: null,\n      hiddenStates: null,\n      rootId: null,\n      zIndex: 10\n    };\n\n    function asset() {\n      obj.extend(_.config, _.defaults);\n      return asset;\n    }\n\n    asset._ = _;\n\n    // Apply Mixins\n    obj.extend(\n      asset,\n      config.mixin(\n        _.config,\n        'assetId',\n        'cssClass'\n      ),\n      mixins.component);\n\n    asset.init();\n\n    /**\n     * Renders the component to the specified selection,\n     * or to the configured target.\n     * @public\n     * @param {d3.selection|Node|String}\n     * @return {components.overlay}\n     */\n    asset.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(asset, selection, function(target) {\n          return target.append('g')\n            .attr({\n              'class': string.classes('component', 'asset')\n            });\n        });\n      }\n      asset.update();\n      asset.emit('render');\n      return asset;\n    };\n\n    /**\n     * Triggers an update of the component reapplying all specified config\n     * updates.\n     * @public\n     * @return {componnets.update}\n     */\n    asset.update = function() {\n      var useEl;\n\n      if (!_.root) {\n        return asset;\n      }\n      if (_.config.cssClass) {\n        _.root.classed(_.config.cssClass, true);\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      useEl = _.root.select('use');\n      if (useEl.empty()) {\n        useEl = _.root.append('use');\n      }\n      useEl.attr({\n        'class': _.config.assetId,\n        'xlink:href': '#' + _.config.assetId\n      });\n      _.root.position(_.config.position);\n      asset.applyZIndex();\n      asset.emit('update');\n      return asset;\n    };\n\n    return asset();\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Area component to draw filled areas in 2d space.\n */\ndefine('components/area',[\n  'core/array',\n  'core/config',\n  'core/object',\n  'core/function',\n  'core/string',\n  'd3-ext/util',\n  'mixins/mixins',\n  'data/functions'\n],\nfunction(array, config, obj, fn, string, d3util, mixins, dataFns) {\n  'use strict';\n\n  return function() {\n\n    //Private variables\n    var _ = {\n      config: {},\n      isHighlighted: false\n    };\n\n    _.defaults = {\n      type: 'area',\n      target: null,\n      cid: null,\n      xScale: null,\n      yScale: null,\n      cssClass: null,\n      color: null,\n      inLegend: true,\n      areaGenerator: d3.svg.area(),\n      opacity: 1,\n      hiddenStates: null,\n      rootId: null,\n      zIndex: 5,\n      showHighlightTransition: false,\n      highlightRadius: 4,\n      highlightFill: '#fff',\n      highlightStrokeWidth: 2,\n      showHighlight: false\n    };\n\n    /**\n     * Updates the area generator function\n     */\n    function updateAreaGenerator() {\n      var dataConfig,\n          y0,\n          y1;\n\n      dataConfig = area.data();\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      if (dataConfig.dimensions.y0) {\n        // Use y0 for baseline if supplied.\n        y0 = function(d, i) {\n          return _.config.yScale(dataFns.dimension(dataConfig, 'y0')(d, i));\n        };\n        y1 = function(d, i) {\n          return _.config.yScale(dataFns.dimension(dataConfig, 'y')(d, i) +\n            dataFns.dimension(dataConfig, 'y0')(d, i));\n        };\n      } else {\n        // Otherwise default to bottom of range.\n        y0 = function() {\n          return _.config.yScale.range()[0];\n        };\n        y1 = function(d, i) {\n          return _.config.yScale(dataFns.dimension(dataConfig, 'y')(d, i));\n        };\n      }\n\n      // Configure the areaGenerator function\n      _.config.areaGenerator\n        .x(function(d, i) {\n          var value;\n          value = dataFns.dimension(dataConfig, 'x')(d, i);\n          return _.config.xScale(value);\n        })\n        .y0(y0)\n        .y1(y1)\n        .defined(function(d, i) {\n          var minX, value;\n          minX = 0;\n          value = dataFns.dimension(dataConfig, 'x')(d, i);\n          if (_.config.xScale) {\n            minX = _.config.xScale.range()[0];\n            value = _.config.xScale(value);\n          }\n          return value >= minX;\n        });\n    }\n\n    /**\n     * Handles the sub of data-toggle event.\n     * Checks presence of inactive tag\n     * to show/hide the area component\n     * @param  {string} dataId\n     */\n     //TODO: same as line so extract it out\n     function handleDataToggle(args) {\n      var id = _.config.dataId;\n      if (args === id) {\n        if (_.dataCollection.hasTags(id, 'inactive')) {\n          area.hide();\n        } else {\n          area.show();\n        }\n      }\n      area.update();\n    }\n\n    /**\n     * Main function for area component\n     * @return {components.area}\n     */\n    function area() {\n      obj.extend(_.config, _.defaults);\n      return area;\n    }\n    area._ = _;\n\n    // Apply mixins.\n    obj.extend(\n      area,\n      config.mixin(\n        _.config,\n        'xScale',\n        'yScale',\n        'color',\n        'opacity',\n        'cssClass',\n        'areaGenerator'\n      ),\n      mixins.component,\n      mixins.highlight);\n\n    area.init();\n\n    /**\n     * Updates the area component with new/updated data/config\n     * @return {components.area}\n     */\n    area.update = function() {\n      var dataConfig;\n      if (!_.root) {\n        return area;\n      }\n\n      dataConfig = area.data();\n      // Return early if there's no data.\n      if (!dataConfig || !dataConfig.data || !dataConfig.data.length) {\n        return area;\n      }\n\n      updateAreaGenerator();\n      area.initHighlight();\n\n      if (_.config.cssClass) {\n        _.root.classed(_.config.cssClass, true);\n      }\n      _.root.select('.gl-path')\n        .datum(area.data().data)\n        .attr({\n          'fill': _.config.color,\n          'opacity': _.config.opacity,\n          'd': _.config.areaGenerator\n        });\n      area.applyZIndex();\n      area.emit('update');\n      return area;\n    };\n\n    /**\n     * Renders the area component\n     * @param  {d3.selection|Node|string} selection\n     * @return {components.area}\n     */\n    //TODO: area.render is being called twice\n    area.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(area, selection, function(target) {\n          var root = target.append('g')\n            .attr({\n              'class': string.classes('component', 'area')\n            });\n          root.append('path')\n            .attr({\n              'class': string.classes('path')\n            });\n          return root;\n        });\n      }\n      _.globalPubsub.sub(area.globalScope('data-toggle'), handleDataToggle);\n      area.update();\n      area.emit('render');\n      return area;\n    };\n\n    /**\n     * Destroys the area and removes everything from the DOM.\n     */\n    area.destroy = fn.compose.call(area, area.destroy, function() {\n      _.globalPubsub.unsub(area.globalScope('data-toggle'), handleDataToggle);\n      _.globalPubsub.unsub(area.scope('mouseout'), area.handleMouseOut);\n      _.globalPubsub.unsub(area.scope('mousemove'), area.handleMouseMove);\n    });\n\n    return area();\n\n  };\n});\n","\n/**\n * @fileOverview\n * Reusuable scatter-plot component.\n */\ndefine('components/scatter',[\n  'core/config',\n  'core/object',\n  'core/string',\n  'd3-ext/util',\n  'mixins/mixins',\n  'data/functions',\n  'events/pubsub',\n  'core/function'\n],\nfunction(configMixin, obj, string, d3util, mixins, dataFns, pubsub, fn) {\n  'use strict';\n\n  return function() {\n\n    //Private variables\n    var _ = {\n      config: {},\n      isHighlighted: false\n    };\n\n    _.defaults = {\n      type: 'scatter',\n      target: null,\n      cid: null,\n      color: '#333',\n      strokeWidth: 1.5,\n      radius: 6,\n      inLegend: true,\n      xScale: null,\n      yScale: null,\n      opacity: 0.4,\n      hiddenStates: null,\n      rootId: null,\n      showTransition: false,\n      preTransitionRadius: 5,\n      preTransitionColor: '#333',\n      delay: 100,\n      duration: 1000,\n      ease: 'linear',\n      showHighlightTransition: false,\n      highlightRadius: 4,\n      highlightFill: '#fff',\n      highlightStrokeWidth: 2,\n      showHighlight: false\n    };\n\n    /**\n     * Removes elements from the exit selection\n     * @param  {d3.selection|Node|string} selection\n     */\n    function remove(selection) {\n      if (selection && selection.exit) {\n        selection.exit().remove();\n      }\n    }\n\n    /**\n     * Handles the sub of data-toggle event.\n     * Checks presence of inactive tag\n     * to show/hide the scatter component\n     * @param  {string} dataId\n     */\n     function handleDataToggle(args) {\n      var id = _.config.dataId;\n      if (args === id) {\n        if (_.dataCollection.hasTags(id, 'inactive')) {\n          scatter.hide();\n        } else {\n          scatter.show();\n        }\n      }\n    }\n\n    function getRadius(d, i) {\n      var radiusDim;\n      radiusDim = dataFns.dimension(scatter.data(), 'r')(d, i);\n      if (radiusDim !== null) {\n        return radiusDim;\n      }\n      return _.config.radius;\n    }\n\n    function getColor(d, i) {\n      var colorDim;\n      colorDim = dataFns.dimension(scatter.data(), 'color')(d, i);\n      if (colorDim !== null) {\n        return colorDim;\n      }\n      return _.config.color;\n    }\n\n    /**\n     * Updates the scatter component\n     * @param  {d3.selection} selection\n     */\n    function update(selection) {\n      var dataConfig;\n      dataConfig = scatter.data();\n      selection\n        .attr({\n          cx: function(d, i) {\n            return _.config.xScale(dataFns.dimension(dataConfig, 'x')(d, i));\n          },\n          cy: function(d, i) {\n            return _.config.yScale(dataFns.dimension(dataConfig, 'y')(d, i));\n          },\n          r: _.config.showTransition ? _.config.preTransitionRadius : getRadius,\n          fill: _.config.showTransition ? _.config.preTransitionColor\n            : getColor,\n          opacity: _.config.opacity,\n          'class': string.classes('scatter-point')\n        });\n      if (_.config.showTransition) {\n        scatter.applyTransition(selection);\n      }\n    }\n\n    /**\n     * Main function for scatter component\n     * @return {components.scatter}\n     */\n    function scatter() {\n      obj.extend(_.config, _.defaults);\n      return scatter;\n    }\n\n    scatter._ = _;\n\n    obj.extend(\n      scatter,\n      configMixin.mixin(\n        _.config,\n        'xScale',\n        'yScale',\n        'color',\n        'opacity',\n        'radius'\n      ),\n      mixins.component,\n      mixins.highlight);\n\n    scatter.init();\n\n    /**\n     * Updates the scatter component with new/updated data/config\n     * @return {components.scatter}\n     */\n    scatter.update = function() {\n      var dataConfig, selection;\n\n      if (!_.root) {\n        return scatter;\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      dataConfig = scatter.data();\n      // Return early if there's no data.\n      if (!dataConfig || !dataConfig.data) {\n        return scatter;\n      }\n      scatter.initHighlight();\n\n      selection = _.root.selectAll('.gl-scatter-point')\n        .data(dataConfig.data);\n\n      selection\n        .enter()\n        .append('circle');\n\n      update(selection);\n      remove(selection);\n      scatter.emit('update');\n      return scatter;\n    };\n\n    /**\n     * Renders the scatter component\n     * @param  {d3.selection|Node|string} selection\n     * @return {components.scatter}\n     */\n    scatter.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(scatter, selection, function(target) {\n          var root = target.append('g')\n            .attr({\n              'class': string.classes('component', 'scatter')\n            });\n          return root;\n        });\n      }\n      _.globalPubsub.sub(scatter.globalScope('data-toggle'), handleDataToggle);\n      scatter.update();\n      scatter.emit('render');\n      return scatter;\n    };\n\n    /**\n     * Applies transitions to the scatter plot\n     * @param {d3.selection|Node|string} selection\n     */\n    scatter.applyTransition = function(selection) {\n      selection.transition()\n        .delay(_.config.delay)\n        .duration(_.config.duration)\n        .ease(_.config.ease)\n        .attr({\n          r: getRadius,\n          fill: getColor\n        });\n      return scatter;\n    };\n\n    /**\n     * Destroys the scatter and removes everything from the DOM.\n     * @public\n     */\n    scatter.destroy = fn.compose.call(scatter, scatter.destroy, function() {\n      _.globalPubsub.unsub(\n        scatter.globalScope('data-toggle'), handleDataToggle);\n      _.globalPubsub.sub(scatter.scope('mouseout'), scatter.handleMouseOut);\n      _.globalPubsub.sub(scatter.scope('mousemove'), scatter.handleMouseMove);\n    });\n\n    return scatter();\n\n  };\n});\n","\n/**\n * @fileOverview\n * Reusuable tooltip component.\n */\ndefine('components/tooltip',[\n  'core/array',\n  'core/config',\n  'core/object',\n  'core/function',\n  'core/string',\n  'd3-ext/util',\n  'mixins/mixins'\n],\nfunction(array, config, obj, fn, string, d3util, mixins) {\n  'use strict';\n\n\n  return function() {\n\n    var _ = {\n      config: {}\n    };\n\n    _.defaults = {\n      type: 'tooltip',\n      message: '',\n      visible: false,\n      target: null,\n      cid: null,\n      color: null,\n      opacity: 0.95,\n      x: 100,\n      y: 100,\n      rootId: null,\n      zIndex: 50,\n      strokeColor:  '#4c9acc',\n      fillColor: '#f0f4f7',\n      padding: 10,\n      positionPadding: 10,\n      hiddenStates: ['empty', 'loading', 'error']\n    };\n\n    /**\n     * Displays tooltip.\n     * The tooltip is placed to bottom-right of the mouse position by default\n     * Calculations are made to determine if the bottom-left corner\n     * of the tooltip is inside the main container,\n     * if not X and Y translates for tranform are calculated\n     * so that the tooltip rect is inverted.\n     * @param  {Object} dataPoint Closest point to the mouse. (output range)\n     * @param  {Element} target\n     * @param  {String} message Content to be displayed in\n     *   tooltip\n     */\n    function displayTooltip(dataPoint, target, message) {\n      var x = dataPoint.x,\n        y = dataPoint.y,\n        tooltipWidth,\n        tooltipHeight,\n        chart,\n        chartWidth,\n        chartHeight,\n        positionPadding = _.config.positionPadding,\n        translateX = x + positionPadding,\n        translateY = y + positionPadding,\n        transform = d3.transform();\n\n      //Get the container\n      //Makes an assumption that the main container is\n      //parent's parent node.\n      //TODO:Change the logic if/when we support nested components\n      if (target.parentNode.parentNode) {\n        chart = d3.select(target.parentNode.parentNode);\n      } else {\n        chart = d3.select(target.parentNode);\n      }\n\n      chartWidth = Math.round(chart.width()),\n      chartHeight = Math.round(chart.height()),\n\n      _.config.message = message;\n      tooltip.update();\n\n      tooltipWidth =  Math.round(_.root.width());\n      tooltipHeight =  Math.round(_.root.height());\n\n      //TODO: Make this a generic method that can be applied to any\n      //container\n\n      //Check if bottom-right corner is outside the chart\n      //vertically\n      if (chartHeight <= (y + positionPadding + tooltipHeight)) {\n        translateY = y - positionPadding - tooltipHeight;\n      }\n\n      //Check if bottom-right corner is outside the chart\n      //horizontally\n      if (chartWidth <= (x + positionPadding + tooltipWidth)) {\n        translateX = x - positionPadding - tooltipWidth;\n      }\n\n      transform.translate = [translateX, translateY];\n      _.root.attr('transform', transform.toString());\n      tooltip.show();\n    }\n\n    /**\n     * Hides the tooltip\n     */\n    function hideTooltip() {\n      tooltip.hide();\n    }\n\n    /**\n     * Main function for tooltip component\n     * @return {components.tooltip}\n     */\n    function tooltip() {\n      obj.extend(_.config, _.defaults);\n      return tooltip;\n    }\n    tooltip._ = _;\n\n    obj.extend(\n      tooltip,\n      config.mixin(\n        _.config,\n        'color',\n        'opacity'\n      ),\n      mixins.component);\n\n    tooltip.init();\n\n    /**\n     * Updates the tooltip component with new/updated data/config\n     * @return {components.tooltip}\n     */\n    tooltip.update = function() {\n      tooltip.show();\n      var i, childNodes,\n          root = _.root,\n          content,\n          size,\n          message = _.config.message || '';\n\n      if (!_.root) {\n        return tooltip;\n      }\n      if (_.config.cid) {\n        _.root.attr('gl-cid', _.config.cid);\n      }\n      root.select('.gl-tooltip-content').remove();\n      content = root.append('g').attr('class', 'gl-tooltip-content');\n      message.split('\\n').forEach(function(line) {\n        content.append('text')\n          .style({\n            'font-family': 'sans-serif',\n            'font-size': '10px'\n          })\n          .text(line);\n      });\n      content.layout({ type: 'vertical' });\n      // TODO: Modify layout command to take position and remove logic below.\n      childNodes = content.node().childNodes;\n      for (i = 0; i < childNodes.length; i++) {\n        d3.select(childNodes[i]).attr('x', 0);\n      }\n      size = content.size();\n      root.select('.gl-tooltip-bg').attr({\n        width: size[0] +  _.config.padding,\n        height: size[1] +  _.config.padding\n      });\n      content.center(0, 2);\n      tooltip.applyZIndex();\n      tooltip.emit('update');\n      return tooltip;\n    };\n\n    /**\n     * Renders the tooltip component\n     * @param  {d3.selection|Node|string} selection\n     * @return {components.tooltip}\n     */\n    tooltip.render = function(selection) {\n      if (!_.root) {\n        _.root = d3util.applyTarget(tooltip, selection, function(target) {\n          var root = target.append('g')\n            .attr({\n              'class': string.classes('component', 'tooltip')\n            });\n          root.append('rect')\n            .attr({\n              'class': 'gl-tooltip-bg',\n              rx:3,\n              ry:3,\n              fill: _.config.fillColor,\n              stroke: _.config.strokeColor,\n              'stroke-width': '2px',\n              opacity: _.config.opacity,\n              'pointer-events': 'none'\n            });\n          return root;\n        });\n      }\n      _.globalPubsub.sub(tooltip.globalScope('tooltip-show'), displayTooltip);\n      _.globalPubsub.sub(tooltip.globalScope('tooltip-hide'), hideTooltip);\n\n      tooltip.emit('render');\n      return tooltip;\n    };\n\n    /**\n     * Destroys the tooltip and removes everything from the DOM.\n     * @public\n     */\n    tooltip.destroy = fn.compose.call(tooltip, tooltip.destroy, function() {\n      _.globalPubsub.unsub(tooltip.globalScope('tooltip-show'), displayTooltip);\n      _.globalPubsub.unsub(tooltip.globalScope('tooltip-hide'), hideTooltip);\n    });\n\n    return tooltip();\n\n  };\n});\n","\ndefine('components/component',[\n  'components/line',\n  'components/legend',\n  'components/axis',\n  'components/label',\n  'components/overlay',\n  'components/asset',\n  'components/area',\n  'components/scatter',\n  'components/tooltip'\n],\nfunction(line, legend, axis, label, overlay, asset, area, scatter, tooltip) {\n  'use strict';\n\n  return {\n    line: line,\n    legend: legend,\n    axis: axis,\n    label: label,\n    overlay: overlay,\n    asset: asset,\n    area: area,\n    scatter: scatter,\n    tooltip: tooltip\n  };\n\n});\n","\n/**\n * @fileOverview\n * Manages a collection of components.\n */\ndefine('core/component-manager',[\n  'core/object',\n  'core/array',\n  'core/string',\n  'core/function',\n  'components/component'\n],\nfunction(obj, array, string, func, components) {\n  'use strict';\n\n  var staticMethods;\n\n  /**\n   * Determins if something is a config object or not.\n   *\n   * @private\n   * @param {*} obj\n   * @return {Boolean}\n   */\n  function isConfig(obj) {\n    // All components are functions.\n    var first = obj;\n    if (Array.isArray(obj)) {\n      first = obj[0];\n    }\n    return typeof first === 'object' ? true : false;\n  }\n\n  /**\n   * Compares a component to a cid.\n   *\n   * @private\n   * @param {String} x\n   * @param {components.*} c\n   * @return {Boolean}\n   */\n  function cidComparer(x, c) {\n    return c.cid() === x;\n  }\n\n  /**\n   * Maps a component to its cid.\n   *\n   * @private\n   * @param {components.*} c\n   * @return {String|null}\n   */\n  function cidMapper(c) {\n    return c.cid();\n  }\n\n  /**\n   * Adds a random string as a cid for any component which lacks a cid.\n   *\n   * @private\n   * @param {Array} components\n   */\n  function validateCids(components) {\n    components.forEach(function(c) {\n      if (!c.cid()) {\n        c.cid(string.random());\n      }\n    });\n  }\n\n  staticMethods = {\n\n    /**\n     * Creates a new instance of a component manager object.\n     *\n     * @param {Array} optComponents An array of components to add\n     *    to the colleciton.\n     * @return {core.component-manager}\n     */\n    create: function(optComponents) {\n      var mgr = componentManager();\n      if (optComponents) {\n        mgr.add(optComponents);\n      }\n      return mgr;\n    },\n\n    /**\n     * Parses a component or list of components from config(s).\n     * TODO: Recursively parse child components too.\n     *\n     * @return {Array} An array of components.\n     */\n    parse: function(configs) {\n      return array.getArray(configs).map(function(cnf) {\n        return components[cnf.type]().config(cnf);\n      });\n    },\n\n    /**\n     * Serializes out all of the components into a group of configs.\n     * TODO: Deep serialization by including child components.\n     *\n     * @return {Array} An array of component config JSON objects.\n     */\n    serialize: function(components) {\n      return array.getArray(components).map(function(c) {\n        return c.config();\n      });\n    }\n\n  };\n\n  function componentManager() {\n    var componentList,\n        sharedObjects,\n        cidList;\n\n    // Key value pair of all registered object refs shared across components.\n    // Are in the format:\n    //   { 'methodName': { value: sharedObjectValue, autoApply: false } }\n    sharedObjects = {};\n\n    // Internal array of all the components.\n    componentList= [];\n\n    //Internal obj of all ids\n    cidList = {};\n\n    return obj.extend({\n\n      /**\n       * Gets all components.\n       * Optionally filters by cids.\n       *\n       * @param {Array|string|undefined} cids An array of cids.\n       * @return {Array} All the matching components.\n       */\n      get: function(cids) {\n        var component;\n\n        if (!cids) {\n          // Return a copy of all.\n          return componentList.concat();\n        }\n        if (typeof cids === 'string') {\n          component = array.find(componentList,\n            func.partial(cidComparer, cids));\n          return component ? [component] : [];\n        }\n        return this.filter(function(c) {\n          return array.contains(cids, c.cid());\n        }, this);\n      },\n\n      /**\n       * Gets the first element in the resulting list of matching cids.\n       *\n       * @public\n       * @param {Array} cids\n       * @return {components.*|null}\n       */\n      first: function(cids) {\n        var values;\n        values = this.get(cids);\n        return values.length ? values[0] : null;\n      },\n\n      /**\n      * Event dispatcher.\n      * @public\n      */\n      dispatch: d3.dispatch('error'),\n\n      /**\n       * Adds a new component to the collection.\n       *\n       * Example:\n       *   add(component)\n       *   add(componentConfig)\n       *\n       * @param {Array|Object|components.*} A component or a component config.\n       * @return {Array} An array of created components.\n      */\n      add: function(config) {\n        var instances, newCids;\n\n        instances = config;\n        if (isConfig(instances)) {\n          instances = staticMethods.parse(instances);\n        } else {\n          instances = array.getArray(instances);\n        }\n        validateCids(instances);\n\n        instances.forEach(function(c) {\n          if(cidList[c.cid()]){\n            this.dispatch.error();\n            return;\n          }\n          cidList[c.cid()] = true;\n          componentList.push(c);\n        }, this);\n        \n        newCids = instances.map(cidMapper);\n        this.applyAutoSharedObjects(newCids);\n        return instances;\n      },\n\n      /**\n       * Get all the cids of all the components.\n       *\n       * @return {Array} An array of cid strings.\n       */\n      cids: function() {\n        return componentList.map(cidMapper);\n      },\n\n      /**\n       * Applies a custom filter to the collection.\n       *\n       * @param {Function} fn\n       * @param {Object} context\n       * @return {Array} An array of matching components.\n       */\n      filter: function(fn, context) {\n        return componentList.filter(fn, context);\n      },\n      /**\n       * Removes components from the collection (without destroying them).\n       * Also removes the cids from the the cidList.\n       *\n       * @param {Array|undefined} cids The cids of the comonents to remove.\n       *    If not provided will remove all components.\n       * @return {core.comopnent-manager}\n       */\n      remove: function(cids) {\n        array.remove(componentList, this.get(cids));\n        obj.remove(cidList, cids);\n        return this;\n      },\n\n      /**\n       * Destroys and removes specified component(s).\n       *\n       * @param {Array} cids\n       * @return {core.component-manger}\n       */\n      destroy: function(cids) {\n        this.get(cids).forEach(function(c) {\n          c.destroy();\n        });\n        this.remove(cids);\n        return this;\n      },\n\n      /**\n       * Calls the same method on all the components.\n       * Optionally filters by cids.\n       *\n       * @param {String} method The method name.\n       * @param {Array|undefined} cids The cids to filter by.\n       * @param {arguments} ... Any other args to pass to the method.\n       * @return {core.component-manager}\n       */\n      applyMethod: function(method, cids) {\n        var args = array.convertArgs(arguments, 2);\n        this.get(cids).forEach(function(c) {\n          if (typeof c[method] === 'function') {\n            c[method].apply(c, args);\n          }\n        });\n        return this;\n      },\n\n      /**\n       * Registers a new shared object which may be set on any/all of the\n       *   components.\n       *\n       * @public\n       * @param {String} name\n       * @param {*} value\n       * @param {Boolean|undefined} optAutoApply\n       * @return {core.component-manager}\n       */\n      registerSharedObject: function(name, value, optAutoApply) {\n        sharedObjects[name] = {\n          value: value,\n          autoApply: optAutoApply || false\n        };\n        return this;\n      },\n\n      /**\n       * Gets all the registered shared objects.\n       *\n       * @public\n       * @return {Object}\n       */\n      getSharedObjects: function() {\n        return sharedObjects;\n      },\n\n      /**\n       * Sets the matching shared object on all components.\n       *   Assumes that \"name\" is a setter method on the component.\n       *\n       * @public\n       * @param {String} name\n       * @param {Array} cids\n       * @param {Boolean} optSupressUpdate\n       * @return {core.component-manager}\n       */\n      applySharedObject: function(name, cids, optSupressUpdate) {\n        if (sharedObjects[name]) {\n          this.applyMethod(name, cids, sharedObjects[name].value);\n          if (!optSupressUpdate) {\n            this.update(cids);\n          }\n        }\n        return this;\n      },\n\n      /**\n       * Applies all the shared objects configured to be automatically applied.\n       *   Optionally limits to cids.\n       *\n       * @public\n       * @param {Array|undefined} cids\n       * @return {core.component-manager}\n       */\n      applyAutoSharedObjects: function(cids) {\n        Object.keys(sharedObjects).forEach(function(name) {\n          if (sharedObjects[name].autoApply) {\n            this.applySharedObject(name, cids, true);\n          }\n        }, this);\n        this.update(cids);\n        return this;\n      },\n\n      /**\n       * Sets data for components. Optionally filters by cid(s).\n       *\n       * @param {data.collection} data The data colleciton to set.\n       * @param {Array|undefined} cids Optionally filter by cids.\n       */\n      data: function(data, cids) {\n        return this.applyMethod('data', cids, data);\n      },\n\n      /**\n       * Renders component(s).\n       *\n       * @param {d3.selection|string} selection\n       * @param {Array} cids Optional array of component ids.\n       */\n      render: function(selection, cids) {\n        return this.applyMethod('render', cids, selection);\n      },\n\n      /**\n       * Updates all components by default, or limit to cids\n       */\n      update: function(cids) {\n        return this.applyMethod('update', cids);\n      },\n\n      /**\n       * Show component(s) optionally restricted to provided cids.\n       */\n      show: function(cids) {\n        return this.applyMethod('show', cids);\n      },\n\n      /**\n       * Hide component(s) optionally restricted to provided cids.\n       */\n      hide: function(cids) {\n        return this.applyMethod('hide', cids);\n      }\n\n    });\n  }\n\n  return staticMethods;\n\n});\n","\n/**\n * @fileOverview\n * Layouts\n * Set of predefined layouts directly available for use.\n */\ndefine('layout/layouts',[],function () {\n  'use strict';\n\n  var layouts = {\n\n    'default': {\n      name: 'gl-vgroup',\n      split: [10, 65, 10, 15],\n      children: [\n        {\n          name: 'gl-info'\n        },\n        {\n          name: 'gl-main',\n          clip: true,\n          border: 1,\n          paddingTop: 4,\n          borderColor: '#999',\n          backgroundColor: '#fff'\n        },\n        {\n          name: 'gl-xaxis',\n          padding: 1,\n          paddingTop: 20\n        },\n        {\n          name: 'gl-footer',\n          paddingTop: 1,\n          paddingBottom: 1,\n          padding: 1,\n          borderStyle: 'dotted',\n          borderTop: 1\n        }\n      ]\n    },\n\n     'sparkline': {\n      name: 'gl-vgroup',\n      split: [100],\n      children: [\n        {\n          name: 'gl-main',\n          clip: true,\n          border: 1,\n          paddingTop: 4,\n          borderColor: '#999',\n          backgroundColor: '#fff'\n        }\n        ]\n    },\n\n   'threepane': {\n      name: 'gl-vgroup',\n      split: [15, 70, 15],\n      children: [\n        {\n          name: 'gl-stat',\n          padding: 1\n        },\n        {\n          name: 'gl-main',\n          padding: 1,\n          paddingBottom: 10\n        },\n        {\n          name: 'gl-info',\n          padding: 1\n        }\n      ]\n    }\n\n  };\n\n  return {\n\n    /**\n     * Get a layout by specifying id.\n     */\n    getLayout: function(id) {\n      return layouts[id];\n    },\n\n    /**\n     * Get the entire layouts object.\n     */\n    getLayouts: function() {\n      return layouts;\n    },\n\n    /**\n     * Provide an id and associated layout, for reuse.\n     */\n    setLayout: function(id, layout) {\n      layouts[id] = layout;\n    },\n\n    /**\n     * Remove a layout by its id.\n     */\n    removeLayout: function(id) {\n      delete layouts[id];\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Layout manager.\n */\ndefine('layout/layoutmanager',[\n  'layout/layouts',\n  'core/array'\n],\nfunction (layouts, array) {\n  'use strict';\n\n  function calculateDim(splits, length) {\n    return splits.map(function(split) {\n      return (parseInt(split, 10)/100) * length;\n    });\n  }\n\n  function percent(number, percentage) {\n    percentage = percentage || 1;\n    return parseInt(number, 10) * (percentage/100);\n  }\n\n  function getPaddingContainer(node, nodeInfo) {\n    var child, paddingLeft, paddingRight, paddingTop,\n        paddingBottom, percentWidth, percentHeight;\n    if (nodeInfo.padding) {\n      paddingLeft = paddingRight = paddingTop =\n        paddingBottom = nodeInfo.padding;\n    } else {\n      paddingLeft = paddingRight = paddingTop =\n        paddingBottom = 0;\n    }\n    paddingLeft += nodeInfo.paddingLeft || 0;\n    paddingRight += nodeInfo.paddingRight || 0;\n    paddingTop += nodeInfo.paddingTop || 0;\n    paddingBottom += nodeInfo.paddingBottom || 0;\n\n    if (paddingLeft === 0 && paddingRight === 0 &&\n          paddingTop === 0 && paddingBottom === 0) {\n      return node;\n    }\n\n    child = node.append('g');\n    child.attr({\n      'gl-padding': nodeInfo.padding,\n      'gl-padding-left': nodeInfo.paddingLeft,\n      'gl-padding-right': nodeInfo.paddingRight,\n      'gl-padding-top': nodeInfo.paddingTop,\n      'gl-padding-bottom': nodeInfo.paddingBottom\n    });\n    percentWidth = percent(node.width());\n    percentHeight = percent(node.height());\n    child.size(\n      percent(node.width(), 100 - (paddingLeft + paddingRight)),\n      percent(node.height(), 100 - (paddingTop + paddingBottom)));\n    child.position('top-left',\n      percentWidth * paddingLeft, percentHeight * paddingTop);\n    return child;\n  }\n\n  /**\n   * Sizes the node based on the border parameters\n   * @param  {d3 selection} node\n   * @param  {Object} borderParams\n   * {\n   *    style: border style <'solid'|'dotted'|'dashed'>,\n   *    color: border color <paint>,\n   *    @see http://www.w3.org/TR/SVG/painting.html#SpecifyingPaint\n   *    width: {Array} 4 element array corresponding to\n   *      border width of each edge top, right, bottom and left\n   *      Value : <percentage> | <length> | inherit | 0\n   *      0 represents no border\n   *  }\n   * @return {d3 selection}\n   */\n  function resizeBorderedContainer(node, borderParams) {\n    var child;\n\n    if (!borderParams.hasBorder) {\n      return node;\n    }\n\n    child = node.append('g');\n    child.size(\n      node.width() - (borderParams.width[1] + borderParams.width[3]),\n      node.height() - (borderParams.width[0] + borderParams.width[2]));\n    child.position('top-left',\n      borderParams.width[3], borderParams.width[0]);\n    child.attr({\n      'gl-bordered': 'true'\n    });\n    return child;\n  }\n\n  /**\n   * Computes border parameters required to set borders\n   * @param  {Object} nodeInfo\n   * @return {Object} borderParams\n   * borderParams = {\n   *    style: border style <'solid'|'dotted'|'dashed'>,\n   *    color: border color <paint>,\n   *    @see http://www.w3.org/TR/SVG/painting.html#SpecifyingPaint\n   *    width: {Array} 4 element array corresponding to\n   *      border width of each edge top, right, bottom and left\n   *      Value : <percentage> | <length> | inherit | 0\n   *      0 represents no border\n   *  }\n   */\n  function getBorderParams(nodeInfo) {\n    var borderParams = {},\n      strokeWidth,\n      width,\n      hasBorder;\n\n    width = [0, 0, 0, 0];\n    hasBorder = false;\n\n    if (nodeInfo.border) {\n      strokeWidth = parseInt(nodeInfo.border, 10);\n      width = [strokeWidth, strokeWidth, strokeWidth, strokeWidth];\n      hasBorder = true;\n    }\n    if (nodeInfo.borderTop) {\n      width[0] = parseInt(nodeInfo.borderTop, 10);\n      hasBorder = true;\n    }\n    if (nodeInfo.borderRight) {\n      width[1] = parseInt(nodeInfo.borderRight, 10);\n      hasBorder = true;\n    }\n    if (nodeInfo.borderBottom) {\n      width[2] = parseInt(nodeInfo.borderBottom, 10);\n      hasBorder = true;\n    }\n    if (nodeInfo.borderLeft) {\n      width[3] = parseInt(nodeInfo.borderLeft, 10);\n      hasBorder = true;\n    }\n\n    borderParams = {\n      color: nodeInfo.borderColor || '#999',\n      style: nodeInfo.borderStyle || 'solid',\n      width: width,\n      hasBorder: hasBorder\n    };\n\n    return borderParams;\n\n  }\n\n  function applyLayout(node) {\n    if (node.attr('gl-container-name') === 'gl-vgroup') {\n      node.layout({type: 'vertical'});\n    } else if (node.attr('gl-container-name') === 'gl-hgroup') {\n      node.layout({type: 'horizontal'});\n    }\n  }\n\n  return {\n\n    /**\n     * Renders the layout, which is either specified by its string id,\n     * or the layout object.\n     * Takes the root svg element, width and height.\n     */\n    setLayout: function(layout, root, width, height) {\n      var layoutConfig, node, dim, borderParams;\n\n      layoutConfig = (typeof layout === 'string') ?\n        layouts.getLayout(layout) :\n        layout;\n\n      array.getArray(layoutConfig).forEach(function(nodeInfo) {\n        node = root.append('g');\n\n        node.size(width, height);\n        if (nodeInfo.backgroundColor) {\n          node.backgroundColor(nodeInfo.backgroundColor);\n        }\n        if (nodeInfo.clip === true) {\n          node.clip();\n        }\n        borderParams = getBorderParams(nodeInfo);\n        if (borderParams.hasBorder) {\n          node.border(\n            borderParams.style,\n            borderParams.color,\n            borderParams.width\n          );\n          node = resizeBorderedContainer(node, borderParams);\n\n        }\n        node = getPaddingContainer(node, nodeInfo);\n\n        node.attr({\n          'gl-container-name': nodeInfo.name,\n          'gl-split': nodeInfo.split\n        });\n        if (nodeInfo.class) {\n          node.classed(nodeInfo.class, true);\n        }\n        if (node.attr('gl-container-name') === 'gl-vgroup') {\n          dim = calculateDim(nodeInfo.split, height);\n          dim = dim.map(function(d) {\n            return [width, d];\n          });\n        } else if (node.attr('gl-container-name') === 'gl-hgroup') {\n          dim = calculateDim(nodeInfo.split, width);\n          dim = dim.map(function(d) {\n            return [d, height];\n          });\n        }\n        array.getArray(nodeInfo.children).forEach(function(child, i) {\n          if (dim) {\n            this.setLayout(child, node, dim[i][0], dim[i][1]);\n          } else {\n            this.setLayout(child, node, node.width(), node.height());\n          }\n        }, this);\n        applyLayout(node);\n      }, this);\n\n    }\n\n  };\n});\n","\n/**\n * @fileOverview\n * Very simple implementation for an unordered set.\n * Works with primitive types such as strings and numbers.\n */\ndefine('core/set',[\n  'core/object',\n  'core/array'\n],\nfunction (obj, array) {\n  'use strict';\n\n  function set() {\n    var store = {};\n\n    return {\n\n      /**\n       * Adds element(s) to the set.\n       */\n      add: function(elements) {\n        elements = array.getArray(elements);\n        elements.forEach(function(element) {\n          store[element] = true;\n        });\n      },\n\n      /**\n       * Removes element(s) to the set.\n       */\n      remove: function(elements) {\n        elements = array.getArray(elements);\n        elements.forEach(function(element) {\n          delete store[element];\n        });\n      },\n\n      /**\n       * Serializes the set to an array.\n       * Note: order is not preserved.\n       */\n      toArray: function() {\n        return Object.keys(store);\n      },\n\n      /**\n       * Returns true if set is empty.\n       */\n      isEmpty: function() {\n        return Object.keys(store).length === 0;\n      },\n\n      /**\n       * Returns true if set contains all the elements specified.\n       *         false otherwise.\n       */\n      contains: function(elements) {\n        elements = array.getArray(elements);\n        return elements.every(function(element) {\n          return obj.isDef(store[element]);\n        });\n      },\n\n      /**\n       * Toggles the presence of the element(s).\n       * If element is present, it is removed.\n       * If element is absent, it is added.\n       */\n      toggle: function(elements) {\n        elements = array.getArray(elements);\n        elements.forEach(function(element) {\n          if (this.contains(element)) {\n            this.remove(element);\n          } else {\n            this.add(element);\n          }\n        }, this);\n      }\n\n    };\n  }\n\n  return {\n\n    /**\n     * Creates a new set.\n     * Takes in optional elements to initialize the set.\n     */\n    create: function (elements) {\n      var newSet = set();\n      if (obj.isDef(array)) {\n        newSet.add(elements);\n      }\n      return newSet;\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Difference quotient.\n */\ndefine('data/selection/diff-quotient',[\n  'core/object',\n  'core/string',\n  'data/functions',\n  'data/selection/selection'\n], function (obj, string, dataFns, selection) {\n  'use strict';\n\n  var selectionPrototype = selection.getSelectionPrototype(),\n      TIME_INTERVAL;\n\n  /**\n   * @const\n   * @enum{string}\n   * TODO: Move after creation of a constants file.\n   */\n  TIME_INTERVAL = {\n    SECOND: 1000,\n    MINUTE: 1000 * 60,\n    HOUR: 1000 * 60 * 60,\n    DAY: 1000 * 60 * 60 * 24\n  };\n\n  /**\n   * Calculates the difference quotient on the data\n   * TODO: Should accept dimension on which to work on.\n   * @param {Object?} options\n   * @param {(string|number)?} options.interval Optional interval specified as\n   *   number or string such as second, minute, hour or day.\n   */\n  selectionPrototype.diffQuotient = function (options) {\n    var data, mutatedData, interval,\n        prevX, prevY, curX, curY, slope;\n    options = options || {};\n    interval = options.interval || 1;\n    if (string.isString(interval)) {\n      interval = TIME_INTERVAL[options.interval.toUpperCase()];\n    }\n    return this.map(function(source) {\n      var r = {};\n      data = source.data;\n      mutatedData = [];\n      data.forEach(function(d, i) {\n        curX = dataFns.dimension(source, 'x')(d);\n        curY = dataFns.dimension(source, 'y')(d);\n        if (i !== 0) {\n          slope = (curY - prevY) / (curX - prevX);\n          mutatedData.push({\n            x: curX,\n            y: slope * interval\n          });\n        }\n        prevX = curX;\n        prevY = curY;\n      });\n      obj.extend(r, source);\n      r.data = mutatedData;\n      r.dimensions = {  x: 'x', y: 'y' };\n      return r;\n    });\n  };\n\n});\n","\n/**\n * @fileOverview\n * Stack data sources.\n */\ndefine('data/selection/stack',[\n  'core/object',\n  'data/selection/selection'\n], function (obj, selection) {\n  'use strict';\n\n  var selectionPrototype = selection.getSelectionPrototype();\n\n  /**\n   * Applies a stacking function to the selected data sources.\n   * Assumes presence of 'y' dimension, and adds a new 'y0' dimension.\n   */\n  selectionPrototype.stack = function() {\n    var stack, flattenedSource;\n\n    stack = d3.layout.stack()\n      .values(function(d) {\n        return d.data;\n      });\n\n    flattenedSource = this.flatten(['x','y']);\n\n    stack(flattenedSource.all());\n    flattenedSource.map(function(source) {\n      source.id += '-stack';\n      // Dimensions are not needed for flat fields.\n      // Required because a component is checking for y0 dim.\n      source.dimensions = {\n        y0: 'y0'\n      };\n    });\n\n    return flattenedSource;\n  };\n\n});\n","\n/**\n * @fileOverview\n * Data source mutators.\n */\ndefine('data/collection',[\n  'core/object',\n  'core/array',\n  'core/set',\n  'data/selection/selection',\n  'events/pubsub',\n  'data/selection/diff-quotient',\n  'data/selection/stack'\n], function (obj, array, set, selection, pubsub) {\n  'use strict';\n\n  /**\n   * Computes the derivation by calling the\n   * derivation function with the sources it needs.\n   */\n  function applyDerivation(dc, data) {\n    var dataSelections, derivedData;\n    dataSelections = resolveSources(data.sources, dc).map(dc.select.bind(dc));\n    derivedData = data.derivation.apply(null, dataSelections);\n    if (typeof derivedData === 'object' &&\n         !Array.isArray(derivedData)) {\n      obj.extend(derivedData, data);\n    }\n    return derivedData;\n  }\n\n  function getScopeFn(scope) {\n    return pubsub.scope(scope);\n  }\n\n  /**\n   * A data config is determined to derived config if\n   * it contains a sources or derivation field.\n   */\n  function isDerivedDataConfig(data) {\n    if (data) {\n      return  obj.isDef(data.sources) ||\n              obj.isDef(data.derivation);\n    }\n    return false;\n  }\n\n  /**\n   * Adds a data source.\n   * Tags non-derived sources with * and +.\n   * Tags derived sources with +.\n   */\n  function addDataSource(dataCollection, data) {\n    var id = data.id;\n    if (isDerivedDataConfig(data)) {\n      if (!obj.isDef(data.tags)) {\n        data.tags = '+';\n      }\n      dataCollection[id] = { glDerive: data };\n    } else {\n      if (!obj.isDef(data.tags)) {\n        data.tags = ['*', '+'];\n      }\n      dataCollection[id] = data;\n    }\n  }\n\n  /**\n   * Takes a list of sources (comma delimited list of ids or tags) and\n   * resolves them to the corresposing array of array of ids.\n   */\n  function resolveSources(sources, dc) {\n    return array.getArray(d3.functor(sources)(dc.resolve.bind(dc)))\n      .map(function(source) {\n        return dc.resolve(source);\n      });\n  }\n\n  /**\n   * @private\n   * Derives data source by id.\n   * Accepts the cached deps object.\n   * Results in the derivation of any non-cached dependencies\n   * of the data source.\n   *\n   * This creates a dependency graph and checks for circular dependencies.\n   */\n  function deriveDataById(id, data, deps, dataCollection, visited) {\n    var d = data[id], sources;\n    if(!dataCollection.isDerived(id)) {\n      deps[id] = true;\n      return;\n    }\n    visited = visited || [];\n    if (deps[id]) {\n      return;\n    }\n    if (array.contains(visited, id)) {\n      deps[id] = true;\n      // TODO: Make enum for errors.\n      d.glDerivation = 'gl-error-circular-dependency';\n    }\n    visited.push(id);\n    sources = [];\n    resolveSources(d.glDerive.sources, dataCollection)\n      .forEach(function(source) {\n        sources = sources.concat(source);\n      });\n    sources.forEach(function(id) {\n      deriveDataById(id.trim(), data, deps, dataCollection, visited);\n    });\n    deps[id] = true;\n    d.glDerivation = applyDerivation(dataCollection, d.glDerive);\n  }\n\n  /**\n   * Constructor for the collection.\n   */\n  function collection() {\n    var dataCollection = {},\n        globalPubsub = pubsub.getSingleton();\n\n    return {\n\n      /**\n      * Event dispatcher.\n      * @public\n      */\n      dispatch: d3.dispatch('error'),\n\n      /**\n       * Add a data source.\n       * dispatch error event if id is not unique\n       */\n      add: function(data) {\n        if (Array.isArray(data)) {\n          data.forEach(this.add, this);\n          return;\n        }\n        if (dataCollection[data.id]) {\n          this.dispatch.error();\n          return;\n        }\n        addDataSource(dataCollection, data);\n      },\n\n      /**\n       * Adds a data source if it doesn't exist.\n       * Replace a data source if it does.\n       */\n      upsert: function(data) {\n        if (!dataCollection[data.id]) {\n          this.add(data);\n        }\n        addDataSource(dataCollection, data);\n      },\n\n      /**\n       * Determines whether a data is standard or derived.\n       * Returns true if data is derived if an is provided.\n       */\n      isDerived: function(id) {\n        var data = dataCollection[id];\n        return obj.isDef(data) && obj.isDef(data.glDerive);\n      },\n\n      /**\n       * Creates a dependency graph and uses it to recalculate\n       * derived sources based on the right order.\n       * If a circular dependency is encountered, that data source\n       * will be injected as 'gl-error-circular-dependency'\n       */\n      updateDerivations: function() {\n        var deps = {};\n        Object.keys(dataCollection).forEach(function(k) {\n          deriveDataById(k, dataCollection, deps, this);\n        }, this);\n        return deps;\n      },\n\n      /**\n       * Remove a data source by id.\n       */\n      remove: function(id) {\n        var ids = array.getArray(id);\n        ids.forEach(function(i) {\n          delete dataCollection[i];\n        });\n      },\n\n      /**\n       * Takes a selection query and resolves it into\n       * the corresponding array of ids.\n       */\n      resolve: function(selection) {\n        var sources = selection.split(','),\n            ids = [];\n        sources.forEach(function(src) {\n          var source = src.trim();\n          if (dataCollection[source]) {\n            ids.push(source);\n          } else {\n            Object.keys(dataCollection).forEach(function(k) {\n              if (this.hasTags(k, source)) {\n                ids.push(k);\n              }\n            }, this);\n          }\n        }, this);\n        return ids;\n      },\n\n      /**\n       * Extend a data-source in place.\n       * If data source doesn't exist, it's added.\n       */\n      extend: function(data) {\n        var id = data.id;\n        if (dataCollection[id]) {\n          obj.extend(dataCollection[id], data);\n        } else {\n          this.add(data);\n        }\n      },\n\n      /**\n       * Append data to a source by id.\n       */\n      append: function(id, dataToAppend) {\n        var dataSource = this.get(id);\n        if (dataSource) {\n          if (Array.isArray(dataToAppend)) {\n            array.append(dataSource.data, dataToAppend);\n          } else {\n            dataSource.data.push(dataToAppend);\n          }\n        }\n      },\n\n      /**\n       * Returns the tag(s) of the datasource speciifed by its id.\n       */\n      getTags: function(id) {\n        var tags;\n        if (this.isDerived(id)) {\n          tags = obj.get(dataCollection, [id, 'glDerive', 'tags']);\n        } else {\n          tags = obj.get(dataCollection, [id, 'tags']);\n        }\n        return array.getArray(tags);\n      },\n\n      /**\n       * Sets the tag(s) of the datasource speciifed by its id.\n       */\n      setTags: function(id, tags) {\n        tags = set.create(tags).toArray();\n        if (this.isDerived(id)) {\n          dataCollection[id].glDerive.tags = tags;\n        }\n        dataCollection[id].tags = tags;\n      },\n\n\n      /**\n       * Adds tag(s) to a datasource by id.\n       * If tag is already present, no operation is performed.\n       */\n      addTags: function(id, tags) {\n        var tagSet = set.create(this.getTags(id));\n        tagSet.add(tags);\n        this.setTags(id, tagSet.toArray());\n      },\n\n      /**\n       * Removes tag(s) from a datasource by id.\n       * If tag isn't present, no operation is performed.\n       */\n      removeTags: function(id, tags) {\n        var tagSet = set.create(this.getTags(id));\n        tagSet.remove(tags);\n        this.setTags(id, tagSet.toArray());\n      },\n\n     /**\n       * Checks if tag(s) belong to a datasource by id.\n       */\n      hasTags: function(id, tags) {\n        return array.getArray(tags).every(function(tag) {\n          return array.contains(this.getTags(id), tag);\n        }, this);\n      },\n\n      /**\n       * Togggles the presence the of the given tags with the\n       * datasource with the associated id.\n       * In other words,\n       * Adds a tag if it isn't present.\n       * Removes a tag if it is present.\n       * @param  {@Object} scope/rootid\n       */\n       //todo: functional approach for scoping\n       //XXX: optimize update derivations\n      toggleTags: function(id, tags, scope) {\n        var tagSet, scopeFn;\n        tagSet = set.create(this.getTags(id));\n        scopeFn = getScopeFn(scope);\n        tags = array.getArray(tags);\n        tagSet.toggle(tags);\n        this.setTags(id, tagSet.toArray());\n        this.updateDerivations();\n        globalPubsub.pub(scopeFn('data-toggle'), id);\n      },\n\n      /**\n       * Get data source by id.\n       */\n      get: function(id) {\n        if (obj.get(dataCollection, id)) {\n          if (this.isDerived(id)) {\n            return dataCollection[id].glDerivation ||\n                   'gl-error-not-computed';\n          }\n          return dataCollection[id];\n        }\n        if (arguments.length === 0) {\n          return Object.keys(dataCollection).map(function(k) {\n            var data = dataCollection[k];\n            return data.glDerivation || data;\n          });\n        }\n        return null;\n      },\n\n      /**\n       * Accepts the following string of comma-delimited:\n       * ids\n       * wildcards (* for all non-derived sources, + for all sources)\n       */\n      select: function(sources) {\n        var dataSelection = selection.create(),\n            dataList = [], ids = [];\n        resolveSources(sources, this).forEach(function(s) {\n          ids = ids.concat(s);\n        });\n        ids.forEach(function(id) {\n          id = id.trim();\n          if(dataCollection[id]) {\n            dataList.push(this.get(id));\n          } else {\n            Object.keys(dataCollection).forEach(function(k) {\n              if(this.hasTags(k, id)) {\n                dataList.push(this.get(k));\n              }\n            }, this);\n          }\n        }, this);\n        dataSelection.add(dataList);\n        return dataSelection;\n      },\n\n      /**\n       * Checks whether dataCollection is empty\n       * @return {Boolean}\n       */\n      isEmpty: function(optSel) {\n        if (optSel) {\n          return this.select(optSel).length() === 0;\n        }\n        return Object.keys(dataCollection).length === 0;\n      }\n    };\n  }\n\n  return {\n\n    /**\n     * Creates a new collection.\n     */\n    create: function() {\n      return collection();\n    },\n\n    /**\n     * Checks if a data source matches a sources selector.\n     *\n     * @param {Object} datasource A datasource config object.\n     * @param {Array} sources An array of data ids or tags to check.\n     * @return {Boolean}\n     */\n    isInSources: function(datasource, sources) {\n      var tags = array.getArray(datasource.tags);\n      tags.push(datasource.id);\n      return array.containsAny(sources, tags);\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n * Helper functions for computing the domain.\n */\ndefine('data/domain',[\n  'd3',\n  'core/object'\n], function (d3, obj) {\n  'use strict';\n\n  var computeFn = {\n\n    /**\n     * Computes the extent for the given dimension.\n     * Config arguments: none\n     */\n    'extent': function(sel, dim) {\n      return sel.dim(dim).concat().extent().get();\n    },\n\n    /**\n     * Computes the stack extent i.e. the extent of\n     * 0 and max of sum of all stack offsets per dimension.\n     */\n    'stack-extent': function(sel, dim) {\n      return sel.dim(dim).transpose()\n                .sum().concat().extent().get();\n    },\n\n    /**\n     * Computes the time interval.\n     * Config arguments:\n     * unit: may be 'day', 'month', 'year' etc\n     * period: an integer multiplier for the unit\n     */\n    'interval': function(sel, dim, config) {\n      var extent = computeFn.extent(sel, dim) || [0, 1],\n          unitStr = obj.get(config, 'unit'),\n          unit = obj.get(d3.time, unitStr),\n          period = obj.get(config, 'period'),\n          offset;\n\n      if (unit) {\n        offset = +unit.offset(\n          extent[1],\n          -(period || 1)\n        );\n        extent[0] = +extent[0] > +offset ? extent[0] : offset;\n      }\n      return extent;\n    }\n\n  };\n\n  /**\n   * Applies the appropriate compute function as specified\n   * in the config.\n   * If a compute function is not specified, the extents is\n   * computed.\n   */\n  function compute(dc, dim, domainConfig) {\n    var fnName = domainConfig.compute || 'extent',\n        fn = computeFn[fnName];\n    if (domainConfig.sources === '') {\n      return domainConfig['default'];\n    } else {\n      return fn(dc.select(domainConfig.sources), dim, domainConfig.args);\n    }\n  }\n\n  /**\n   * Applies the modifiers specified in the domain config.\n   * Modifiers may be force or maxMultiplier.\n   */\n  function modify(domain, domainConfig) {\n    var modifier = domainConfig.modifier;\n    if (modifier) {\n      if (modifier.force) {\n        if (Array.isArray(modifier.force)) {\n          domain = domain.concat(modifier.force);\n        } else {\n          domain.push(modifier.force);\n        }\n        domain = d3.extent(domain);\n      }\n      if (modifier.maxMultiplier) {\n        domain[1] = Math.round(domain[1] * modifier.maxMultiplier);\n      }\n    }\n    return domain;\n  }\n\n  /**\n   * Compute the overall data source dependencies for the domain.\n   * This is required to generate the correct dependency graph for\n   * domain evaluation.\n   */\n  function domainDeps(config) {\n    var deps = {};\n    Object.keys(config).forEach(function(dim) {\n      config[dim].sources.split(',').forEach(function(dep) {\n        deps[dep.trim()] = true;\n      });\n    });\n    return Object.keys(deps).join(',');\n  }\n\n  return {\n\n    /**\n     * Add compute function by name.\n     */\n    addComputeFn: function(name, computeFn) {\n      computeFn[name] = computeFn;\n    },\n\n    /*\n     * Remove compute function by name.\n     */\n    removeComputeFn: function(name) {\n      delete computeFn[name];\n    },\n\n    /**\n     * Compute domains based on configuration.\n     */\n    addDomainDerivation: function(config, dc) {\n      dc.upsert({\n        id: '$domain',\n        sources: domainDeps(config),\n        derivation: function() {\n          var domainObj = {};\n          Object.keys(config).forEach(function(dim) {\n            var domainConfig = config[dim],\n                domain;\n            domain = compute(dc, dim, domainConfig);\n            domain = modify(domain, domainConfig);\n            if (!domain) {\n              domain = domainConfig['default'];\n            }\n            domainObj[dim] = domain;\n          });\n          return domainObj;\n        }\n      });\n    }\n\n  };\n\n});\n","\n/**\n * @fileOverview\n *\n * A reusable X-Y graph.\n */\ndefine('graphs/graph',[\n  'core/object',\n  'core/config',\n  'core/array',\n  'core/function',\n  'core/asset-loader',\n  'core/component-manager',\n  'core/string',\n  'components/component',\n  'layout/layoutmanager',\n  'd3-ext/util',\n  'mixins/mixins',\n  'data/functions',\n  'data/collection',\n  'data/domain'\n],\nfunction(obj, config, array, fn, assetLoader, componentManager, string,\n  components, layoutManager, d3util, mixins, dataFns, collection, domain) {\n  'use strict';\n\n  return function() {\n\n    /**\n     * Private variables.\n     */\n    var _ = {\n      config: {}\n    },\n      STATES,\n      NO_COLORED_COMPONENTS,\n      coloredComponentsCount,\n      componentManager_,\n      isRendered;\n\n    /**\n     * @enum\n     * The possible states a graph can be in.\n     */\n    STATES = {\n      NORMAL: 'normal',\n      EMPTY: 'empty',\n      LOADING: 'loading',\n      ERROR: 'error',\n      DESTROYED: 'destroyed'\n    };\n\n    /**\n     * Components that do not require a default color\n     * @type {Array}\n     */\n    NO_COLORED_COMPONENTS = ['axis', 'legend', 'label'];\n\n    _.defaults = {\n      type: 'graph',\n      layout: 'default',\n      width: 700,\n      height: 230,\n      viewBoxHeight: 230,\n      viewBoxWidth: 700,\n      preserveAspectRatio: 'none',\n      xScale: d3.time.scale.utc().domain([0, 0]),\n      yScale: d3.scale.linear(),\n      showLegend: true,\n      xTicks: 7,\n      yTicks: 3,\n      emptyMessage: 'No data to display',\n      loadingMessage: 'Loading...',\n      errorMessage: 'Error loading graph data',\n      state: 'normal',\n      yDomainModifier: 1.2,\n      yCompute: 'extent',\n      colorPalette: d3.scale.category10().range(),\n      xAxisUnit: null,\n      yAxisUnit: null,\n      primaryContainer: 'gl-main',\n      domainIntervalUnit: null,\n      id: null,\n      domainSources: null,\n      domainConfig: null\n    };\n\n    /**\n     * Gets the main container selection.\n     * @private\n     * @return {d3.selection}\n     */\n    function getPrimaryContainer() {\n      return _.root.selectAttr('gl-container-name', _.config.primaryContainer);\n    }\n\n    /**\n     * Calculates the main container width/height\n     * @private\n     * @return {Array} Array of numbers [width, height]\n     */\n    function getPrimaryContainerSize() {\n      return getPrimaryContainer().size();\n    }\n\n    /**\n     * Sets default color for on component if color not set\n     * @private\n     * @param {Object} component [description]\n     */\n    function setDefaultColor(component) {\n      var colors, len;\n\n      if (!array.contains(NO_COLORED_COMPONENTS, component.config().type)){\n        colors = d3.functor(_.config.colorPalette)();\n        len = colors.length;\n        if (component.hasOwnProperty('color')) {\n          component.config().color = component.config().color ||\n            colors[(coloredComponentsCount++) % len];\n        }\n      }\n    }\n\n    /**\n     * Appends defs\n     * @private\n     * @param  {d3.selection} selection\n     */\n    function renderDefs(selection) {\n      return selection.append('defs');\n    }\n\n    /**\n     * Appends svg node to the selection\n     * @private\n     * @param  {d3.selection} selection\n     */\n    function renderSvg(selection) {\n      _.root = selection.append('svg')\n        .attr({\n          'width': _.config.width,\n          'height': _.config.height,\n          'viewBox': [\n            0,\n            0,\n            _.config.viewBoxWidth,\n            _.config.viewBoxHeight].toString(),\n          'preserveAspectRatio': _.config.preserveAspectRatio\n        });\n      return _.root;\n    }\n\n    /**\n     * Sets up the panel(svg)\n     * @private\n     * @param  {d3.selection} selection\n     */\n    function renderPanel(selection) {\n      _.root = renderSvg(selection);\n      renderDefs(_.root);\n      layoutManager.setLayout(\n        _.config.layout,\n        _.root,\n        _.config.viewBoxWidth,\n        _.config.viewBoxHeight);\n      _.root.select('g').attr('gl-id', _.config.id);\n    }\n\n    function getDomainConfig(sources) {\n      return {\n        x: {\n          sources: sources,\n          compute: 'interval',\n          args: {\n            unit: _.config.domainIntervalUnit,\n            period: _.config.domainIntervalPeriod\n          },\n          modifier: {\n            force: _.config.forceX\n          },\n          'default': [0, 0]\n        },\n        y: {\n          sources: sources,\n          compute: _.config.yCompute,\n          modifier: {\n            force: _.config.forceY,\n            maxMultiplier: _.config.yDomainModifier\n          },\n          'default': [0, 0]\n        }\n      };\n    }\n\n    /**\n     * Updates the domain on the scales\n     * @private\n     */\n    function updateScales() {\n      var graphDomain,\n          domainSources,\n          domainConfig;\n\n      domainSources = _.config.domainSources || '*';\n      domainConfig = getDomainConfig(domainSources);\n      if (_.config.domainConfig) {\n        domainConfig = obj.extend(domainConfig, _.config.domainConfig);\n      }\n      domain.addDomainDerivation(domainConfig, _.dataCollection);\n\n      _.dataCollection.updateDerivations();\n      graphDomain = _.dataCollection.get('$domain');\n      if (_.dataCollection.select(domainSources).length() > 0) {\n        _.config.xScale.rangeRound([0, getPrimaryContainerSize()[0]])\n          .domain(graphDomain.x);\n\n        _.config.yScale.rangeRound([getPrimaryContainerSize()[1], 0])\n          .domain(graphDomain.y);\n      }\n    }\n\n    /**\n     * Add legend component to the graph\n     */\n    function addLegend() {\n      if (!componentManager_.first('gl-legend') && _.config.showLegend) {\n        componentManager_.add({\n          cid: 'gl-legend',\n          type: 'legend',\n          target: 'gl-info'\n        });\n      }\n    }\n\n    /**\n     * Formats the keys for the legend and calls update on it\n     * @private\n     */\n    function updateLegend() {\n      var legendKeys = [], legend;\n\n      legend = componentManager_.first('gl-legend');\n\n      if (!legend) {\n        addLegend();\n        legend = componentManager_.first('gl-legend');\n      }\n\n      if (legend) {\n        componentManager_.get().forEach(function(c) {\n          var cData = c.data ? c.data() : null;\n          if (c.config('inLegend') && cData) {\n            legendKeys.push({\n              dataId: c.config('dataId'),\n              color: c.config('color'),\n              label: c.data().title || ''\n            });\n          }\n        });\n        componentManager_.first('gl-legend')\n          .config({ keys: legendKeys })\n          .update();\n      }\n    }\n\n    /**\n     * Updates all the special components.\n     */\n    function updateComponents() {\n      var yaxisComponent,\n        xaxisComponent;\n        xaxisComponent = componentManager_.first('gl-xaxis');\n        if (xaxisComponent) {\n          xaxisComponent.config({\n            scale: _.config.xScale,\n            ticks: _.config.xTicks,\n            unit: _.config.xAxisUnit\n          });\n        }\n        yaxisComponent = componentManager_.first('gl-yaxis');\n        if (yaxisComponent) {\n          yaxisComponent.config({\n            scale: _.config.yScale,\n            ticks: _.config.yTicks,\n            unit: _.config.yAxisUnit,\n            target: _.config.primaryContainer\n          });\n        }\n        componentManager_.update();\n        updateLegend();\n    }\n\n    /**\n     * Displays the empty message over the main container.\n     * @private\n     */\n    function showEmptyOverlay() {\n      var labelTexts,\n          labels,\n          layoutConfig;\n\n      layoutConfig = {\n        type: 'vertical', position: 'center', gap: 6\n      };\n      labelTexts = array.getArray(_.config.emptyMessage);\n      labels = labelTexts.map(function(text, idx) {\n        var label = components.label().text(text);\n        if (idx === 0) {\n          label.config({\n            color: '#666',\n            fontSize: 18,\n            fontWeight: 'bold'\n          });\n        } else {\n          label.config({\n            color: '#a9a9a9',\n            fontSize: 13\n          });\n        }\n        return label;\n      });\n      graph.component({\n          type: 'overlay',\n          cid: 'gl-empty-overlay',\n          layoutConfig: layoutConfig,\n          components: labels\n        });\n      componentManager_.render(_.root, 'gl-empty-overlay');\n    }\n\n    /**\n     * Displays the loading spinner and message over the main container.\n     * @private\n     */\n    function showLoadingOverlay() {\n      var label,\n          spinner;\n\n      spinner = components.asset().config({\n        assetId: 'gl-asset-spinner'\n      });\n      label = components.label()\n        .text(_.config.loadingMessage)\n        .config({\n          color: '#666',\n          fontSize: 13\n        });\n      graph.component({\n          type: 'overlay',\n          cid: 'gl-loading-overlay',\n          components: [spinner, label]\n        });\n      componentManager_.render(_.root, 'gl-loading-overlay');\n    }\n\n    /**\n     * Displays the error icon and message over the main container.\n     * @private\n     */\n    function showErrorOverlay() {\n      var label,\n          icon;\n\n      icon = components.asset().config({\n        assetId: 'gl-asset-icon-error'\n      });\n      label = components.label()\n        .text(_.config.errorMessage)\n        .config({\n          color: '#C40022',\n          fontSize: 13\n        });\n      graph.component({\n          type: 'overlay',\n          cid: 'gl-error-overlay',\n          components: [icon, label]\n        });\n      componentManager_.render(_.root, 'gl-error-overlay');\n    }\n\n    /**\n     * Determins if the domain is \"empty\" (both values are zero).\n     * TODO: Move to data collection when ready.\n     *\n     * @private\n     * @param {Array} domain A 2 element array.\n     * @return {Boolean}\n     */\n    function domainIsEmpty(domain) {\n      var d0, d1;\n\n      d0 = domain[0];\n      d1 = domain[1];\n      if (d0 instanceof Date && d1 instanceof Date) {\n        return d0.getTime() === 0 && d1.getTime() === 0;\n      }\n      return d0 === 0 && d1 === 0;\n    }\n\n    /**\n     * Adds/removes overlays & hides/shows components based on state.\n     * @private\n     */\n    function updateComponentVisibility() {\n      componentManager_.destroy([\n          'gl-empty-overlay',\n          'gl-loading-overlay',\n          'gl-error-overlay']);\n      componentManager_.get().forEach(function(c) {\n        var hiddenStates = c.config('hiddenStates'),\n            dataId = c.config('dataId');\n        if (array.contains(hiddenStates, _.config.state) ||\n              (dataId && _.dataCollection.hasTags(dataId, 'inactive')) ||\n              c.config('visible') === false) {\n          c.hide();\n        } else {\n          c.show();\n        }\n      });\n      switch (_.config.state) {\n        case STATES.EMPTY:\n          showEmptyOverlay();\n          break;\n        case STATES.LOADING:\n          showLoadingOverlay();\n          break;\n        case STATES.ERROR:\n          showErrorOverlay();\n          break;\n        case STATES.NORMAL:\n          // Hide x-axis if theres no data.\n          if (domainIsEmpty(_.config.xScale.domain())) {\n            componentManager_.first('gl-xaxis').hide();\n            componentManager_.first('gl-yaxis').hide();\n          }\n          break;\n      }\n    }\n\n    /**\n     * Main function, sets defaults, scales and axes\n     * @return {graphs.graph}\n     */\n    function graph() {\n      obj.extend(_.config, _.defaults);\n      if (!obj.isDefAndNotNull(_.config.id)) {\n        _.config.id = string.random();\n      }\n      _.dataCollection = collection.create();\n      // TODO: move these specific components to graphBuilder.\n      componentManager_ = componentManager.create([\n        {\n          cid: 'gl-xaxis',\n          type: 'axis',\n          axisType: 'x',\n          orient: 'bottom',\n          target: 'gl-xaxis',\n          hiddenStates: ['empty', 'loading', 'error']\n        },\n        {\n          cid: 'gl-yaxis',\n          axisType: 'y',\n          type: 'axis',\n          orient: 'right',\n          tickPadding: 5,\n          hiddenStates: ['empty', 'loading', 'error']\n        }\n      ]);\n      componentManager_\n        .registerSharedObject('xScale', _.config.xScale, true)\n        .registerSharedObject('yScale', _.config.yScale, true)\n        .registerSharedObject('data', _.dataCollection, true);\n      coloredComponentsCount = 0;\n      return graph;\n    }\n\n    graph._ = _;\n\n    obj.extend(\n      graph,\n      config.mixin(_.config, 'id', 'width', 'height'),\n      mixins.component);\n\n    graph.init();\n\n    graph.STATES = STATES;\n\n    /**\n     * Configures the graph state and triggers overlays updates.\n     * @public\n     * @return {graph.STATES}\n     */\n    graph.state = function(newState) {\n      var oldState = _.config.state;\n\n      if (!newState) {\n        return oldState;\n      }\n      _.config.state = newState;\n      if (graph.isRendered()) {\n        updateComponentVisibility();\n      }\n      graph.emit('state');\n      return graph;\n    };\n\n    /**\n     * Gets/Sets the data\n     * @param  {Object|Array} data\n     * @return {graphs.graph|Object}\n     */\n    graph.data = function(data) {\n      if (data) {\n        // Single string indicates id of data to return.\n        if (typeof data === 'string') {\n          return _.dataCollection.get(data);\n        }\n        array.getArray(data).forEach(function(d) {\n          _.dataCollection.extend(d);\n        });\n        return graph;\n      }\n\n      return _.dataCollection;\n    };\n\n    /**\n     * Creates and adds a component to the graph based on the type\n     * or returns the component based on the cid.\n     * @param  {string|Object} componentConfig\n     * @return {component|graphs.graph}\n     */\n    graph.component = function(componentConfig) {\n      var components;\n      // No args. Return component manager.\n      if (!componentConfig) {\n        return componentManager_;\n      }\n      // Single string indicates cid of component to return.\n      if (typeof componentConfig === 'string') {\n        components = componentManager_.get(componentConfig);\n        if (components.length) {\n          return components[0];\n        }\n      }\n\n      // Add component(s).\n      components = componentManager_.add(componentConfig);\n      components.forEach(function(c) {\n        if (!c.config('target')) {\n          c.config('target', _.config.primaryContainer);\n        }\n        setDefaultColor(c);\n      });\n\n      return graph;\n    };\n\n    /**\n     * Updates the graph with new/updated data/config\n     * @return {graphs.graph}\n     */\n    graph.update = function() {\n      componentManager_.applySharedObject('data');\n      updateScales();\n      updateComponents();\n      if (graph.isRendered()) {\n        updateComponentVisibility();\n      }\n      graph.emit('update');\n      return graph;\n    };\n\n    /**\n     * Initial panel setup and rendering of the components\n     * Note: should be called only once.\n     * @param  {d3.selection|Node|string} selector\n     * @return {graphs.graph}\n     */\n    graph.render = function(selector) {\n      var selection = d3util.select(selector);\n      assetLoader.loadAll();\n      renderPanel(selection);\n      //Add legend before applying shared objects.\n      addLegend();\n      componentManager_.registerSharedObject('rootId', _.config.id, true);\n      componentManager_.applySharedObject('rootId', componentManager_.cids());\n      graph.update();\n      componentManager_.render(graph.root());\n      // Update y-axis once more to ensure ticks are above everything else.\n      componentManager_.update(['gl-yaxis']);\n      // Force state update.\n      updateComponentVisibility();\n      isRendered = true;\n      graph.emit('render');\n      return graph;\n    };\n\n    /**\n     * Has the graph been rendered or not.\n     * @return {Boolean}\n     */\n    graph.isRendered = function() {\n      return isRendered;\n    };\n\n    /**\n     * Removes everything from the DOM, cleans up all references.\n     * @public\n     */\n    graph.destroy = fn.compose.call(graph, graph.destroy, function() {\n      componentManager_.destroy();\n      componentManager_ = null;\n    });\n\n    return graph();\n  };\n\n});\n","\n/**\n * @fileOverview\n * An object that constructs/configures graphs by encapsulating complexity\n * in order to simplify the end-user api when generating typical graphs.\n *\n * \"internal\" refers to data/components added by this build and not by the user.\n */\ndefine('graphs/graph-builder',[\n  'core/object',\n  'core/array',\n  'core/string',\n  'core/format',\n  'd3-ext/util',\n  'graphs/graph',\n  'events/pubsub',\n  'data/collection'\n],\nfunction(obj, array, string, format, d3util, graph, pubsub, DataCollection) {\n  'use strict';\n\n    var defaults,\n      config,\n      globalPubsub,\n      internalDataConfig,\n      INTERNAL_COMPONENTS_CONFIG,\n      GRAPH_TYPES;\n\n    defaults = {\n      layout: 'default'\n    };\n\n    config = {};\n\n    globalPubsub = pubsub.getSingleton();\n\n    /**\n     * The supported types of pre-configured graphs.\n     */\n    GRAPH_TYPES = ['line', 'area', 'stacked-area', 'scatter'];\n\n    /**\n     * Dataset configurations automatically applied to graphs.\n     */\n    function getInternalDataConfig(domainSources) {\n      return [{\n        id: 'gl-stats',\n        sources: [domainSources, '$domain'],\n        derivation: function(sources, domain) {\n          var xDomain, points, pointValues, result;\n\n          result = {\n            min: 0,\n            max: 0,\n            avg: 0\n          };\n          sources = sources.filterByTags('inactive');\n          if (sources.all().length) {\n            xDomain = domain.get().x;\n            points = sources.filter('x', xDomain).dim('y').concat();\n            pointValues = points.get();\n            if (pointValues && pointValues.length) {\n              result.min = points.min().round().get();\n              result.max = points.max().round().get();\n              result.avg = points.avg().round().get();\n            }\n          }\n          return result;\n        }\n      }];\n    }\n\n    /**\n     * Component configurations automatically applied to graphs.\n     *\n     * TODO: Externalize this once a component manager is available.\n     */\n    INTERNAL_COMPONENTS_CONFIG = [\n      {\n        cid: 'gl-stats',\n        type: 'label',\n        dataId: 'gl-stats',\n        position: 'center-left',\n        target: 'gl-footer',\n        hiddenStates: ['empty', 'loading', 'error']\n      },\n      {\n        cid: 'gl-domain-label',\n        type: 'label',\n        dataId: '$domain',\n        position: 'center-right',\n        target: 'gl-footer',\n        hiddenStates: ['empty',  'loading', 'error']\n      },\n      {\n        cid: 'gl-tooltip',\n        type: 'tooltip',\n        target: 'gl-main',\n        hiddenStates: ['empty', 'loading', 'error']\n      }\n    ];\n\n    /**\n     * Determines if a data set corresponding to the data id is an internal\n     * data set or not.\n     *\n     * @private\n     * @param {String} dataId\n     * @return {Boolean}\n     */\n    function isInternalData(dataId) {\n      var foundData;\n      foundData = array.find(internalDataConfig, function(d) {\n        return d.id === dataId;\n      });\n      return foundData || string.startsWith(dataId, '$') ? true : false;\n    }\n\n    /**\n     * Checks if a component alread exists in the componets collection with the\n     * same data id.\n     *\n     * @param {String} dataId\n     * @param {graphs.graph} g\n     * @return {Boolean}\n     */\n    function componentExists(dataId, g) {\n      var components, foundComponent;\n      components = g.component().get();\n      foundComponent = array.find(components, function(c) {\n        return c.config('dataId') === dataId;\n      });\n      return foundComponent ? true : false;\n    }\n\n    /**\n     * Adds a new component of the specified type for every supplied data id\n     * that is not an internal data source.\n     *\n     * @private\n     * @param {Array|Object} dataSources\n     * @param {String} componentType\n     * @param {graphs.graph} g\n     */\n    function addComponentsForDataSources(dataSources, componentType,\n          g, sources, isStacked) {\n      var id;\n      array.getArray(dataSources).forEach(function(dataSource) {\n        id = dataSource.id;\n        if (isStacked) {\n          id += '-stack';\n        }\n        if (!isInternalData(dataSource.id) &&\n            !componentExists(dataSource.id, g)) {\n          // If no sources are specified, add all data ids\n          // else add the specified ones.\n          if (DataCollection.isInSources(dataSource, sources)) {\n            g.component({\n              rootId: g.config('id'),\n              type: componentType,\n              dataId: id,\n              cid: id,\n              color: dataSource.color || null\n            });\n          }\n        }\n      });\n    }\n\n    /**\n     * Overrides the removeData() function on the graph.\n     * Additionally removes any corresponding components when called.\n     *\n     * TODO: remove this in favor of data collection events\n     *\n     * @private\n     * @param {graphs.graph} g\n     */\n    function overrideRemoveDataFn(g) {\n      var dataCollection = g.data();\n      obj.override(dataCollection, 'remove', function(supr, dataId) {\n        var args = array.convertArgs(arguments, 1);\n        g.component().remove(dataId);\n        return supr.apply(g, args);\n      });\n    }\n\n    /**\n     * Overrides the add() function on the graph's data collection. Anytime\n     * add() is called a new component of the specified type will be added too.\n     *\n     * TODO: remove this in favor of data collection events\n     *\n     * TODO: BURN THIS CODE TO THE GROUND!\n     *\n     * @private\n     * @param {String} componentType\n     * @param {graphs.graph} g\n     */\n    function overrideAddDataFn(componentType, g, sources, isStacked) {\n      var dataCollection = g.data();\n      isStacked = isStacked || false;\n      obj.override(dataCollection, 'add', function(supr, data) {\n        var args, retVal;\n        args = array.convertArgs(arguments, 1);\n        retVal = supr.apply(dataCollection, args);\n        if (isStacked) {\n          array.getArray(data).forEach(function(ds) {\n            // Don't add stack derivation for $domain.\n            if (ds.id[0] !== '$' && DataCollection.isInSources(ds, sources)) {\n              supr.apply(dataCollection, [{\n                id: ds.id + '-stack',\n                sources: 'stacks',\n                tags: [ '+', 'glstack' ],\n                derivation: function(sources) {\n                  return sources.get().filter(function(source) {\n                    return source.id === ds.id + '-stack';\n                  })[0] || {\n                    id: ds.id + '-stack',\n                    dimensions: {},\n                    data: []\n                  };\n                }\n              }]);\n            }\n          });\n        }\n        addComponentsForDataSources(data, componentType, g, sources, isStacked);\n        return retVal;\n      });\n    }\n\n    /**\n     * Adds all pre-configured internal data sources to the graph.\n     *\n     * @private\n     * @param {graphs.graph} g\n     */\n    function addInternalData(g) {\n      internalDataConfig.forEach(function(dataConfig) {\n        g.data().add(dataConfig);\n      });\n    }\n\n    /**\n     * TODO: Add capability to derivation to create sources.\n     *\n     * Recompute positions of stacked items and remove any whitespace that\n     * may occur due to dataset removal.\n     */\n    function addStackedData(g, sources) {\n      var dataSources = [{\n        id: 'stacks',\n        // Compute list of ids denoting * - inactive\n        // in terms of the original and not the derived sources.\n        // TODO: Remove this in favor of set operation to subtract\n        sources: function(resolve) {\n          var star = resolve(sources.join(',')),\n              inactive = resolve('inactive').map(function(id) {\n                return id.substring(0, id.length - 6);\n              });\n          inactive.forEach(function(id) {\n            var position = star.indexOf(id);\n            if (position >= 0) {\n              star.splice(position, 1);\n            }\n          });\n          return star.join(',');\n        },\n        derivation: function(sources) {\n          if (sources) {\n            return sources.stack().all();\n          } else {\n            return [];\n          }\n        }\n      }];\n      g.data().add(dataSources);\n    }\n\n    /**\n     * Adds all pre-configured internal components to the graph.\n     *\n     * @private\n     * @param {graphs.graph} g\n     */\n    function addInternalComponents(g) {\n      INTERNAL_COMPONENTS_CONFIG.forEach(function(componentConfig) {\n        g.component(componentConfig);\n      });\n      g.component('gl-stats').text(function() {\n        var unit, values, d;\n        values = {\n          avg: 0,\n          min: 0,\n          max: 0\n        };\n        d = this.data();\n        unit = this.config().unit || '';\n        if (d) {\n          values.avg = d.avg || 0;\n          values.min = d.min || 0;\n          values.max = d.max || 0;\n        }\n        return 'Avg: ' + values.avg + ' ' + unit +\n               '    Min: ' +  values.min + ' ' + unit +\n               '    Max: ' + values.max + ' ' + unit;\n      });\n      g.component('gl-domain-label').text(function() {\n        var domain = this.data();\n        if (domain) {\n          return format.timeDomainUTC(domain.x, 'UTC');\n        }\n        return '';\n      });\n    }\n\n    /**\n    * Render newly added components.\n    */\n    function renderAddedComponents(g) {\n      var componentManager = g.component();\n      if (componentManager) {\n        componentManager.filter(function(c) {\n          return !c.isRendered();\n        }).forEach(function(c) {\n          c.render(g.root());\n        });\n      }\n    }\n\n    /**\n     * Updates config for stats label\n     */\n    function updateStatsLabel() {\n      var graph, componentManager, statsLabel;\n      /*jshint validthis:true */\n      graph = this;\n      componentManager = graph.component();\n      statsLabel =  componentManager.first('gl-stats');\n      if (statsLabel) {\n        statsLabel.config({\n          unit: graph.config().yAxisUnit\n        });\n        componentManager.update('gl-stats');\n      }\n    }\n\n\n    /**\n     *  Builds a sparkline by destroying the appropriate line graph elements.\n     * Also configures the layout\n     */\n    function sparklineBuilder(g) {\n      g.config({\n        'layout':'sparkline',\n        'width': 400,\n        'height': 120,\n        'viewBoxWidth': 400,\n        'viewBoxHeight': 120\n      });\n      g.component().destroy(['gl-legend', 'gl-stats', 'gl-xaxis']);\n    }\n\n    /**\n     * An object that constructs/configures graphs by encapsulating complexity\n     *   in order to simplify the end-user api.\n     *\n     * @public\n     * @return {graphs.graphBuilder}\n     */\n    function graphBuilder() {\n      obj.extend(config, defaults);\n      return graphBuilder;\n    }\n\n    /**\n     * Gets the available valid types to build pre-configured graphs.\n     *\n     * @public\n     * @return {Array}\n     */\n    graphBuilder.types = function() {\n      return GRAPH_TYPES;\n    };\n\n    /**\n     * Build and return a new graph of the specified type.\n     *\n     * @param {String} type A valid pre-configured graph type.\n     * @param {Object?} options Options for the pre-configured graph type.\n     * @param {(Array.<string>|string)?} options.sources Definite list of\n     *   sources that have corresponding graph components.\n     * @return {graphs.graph}\n     */\n    graphBuilder.create = function(type, options) {\n      var g, layout, sources, domainSources, yCompute, scopeFn;\n\n      options = options || {};\n      layout = options.layout || 'default';\n      sources = array.getArray(options.sources);\n      if (array.isEmpty(sources)) {\n        sources = ['*'];\n      }\n      if (type === 'stacked-area') {\n        domainSources = 'glstack';\n        yCompute = 'stack-extent';\n      } else {\n        domainSources = sources.join(',') || '*';\n      }\n      internalDataConfig = getInternalDataConfig(domainSources);\n\n      g = graph()\n        .config({\n          forceY: [0],\n          layout: layout,\n          yAxisUnit: 'ms',\n          yCompute: yCompute,\n          domainSources: domainSources\n        });\n\n      g.on('update', function() {\n        updateStatsLabel.call(this);\n        renderAddedComponents(g);\n      });\n      g.on('render', function() {\n        // subscribe to toggle event and update stats\n        scopeFn = pubsub.scope(g.config('id'));\n        globalPubsub.sub(scopeFn('data-toggle'), updateStatsLabel.bind(g));\n      });\n\n      if(type !== 'sparkline'){\n        addInternalData(g);\n        addInternalComponents(g);\n      }\n\n      switch (type) {\n        case 'line':\n        case 'scatter':\n        case 'area':\n          overrideRemoveDataFn(g);\n          overrideAddDataFn(type, g, sources, false);\n          break;\n        case 'sparkline':\n          overrideRemoveDataFn(g);\n          overrideAddDataFn('line', g, sources, false);\n          sparklineBuilder(g);\n          break;\n        case 'stacked-area':\n          addStackedData(g, sources);\n          overrideRemoveDataFn(g);\n          overrideAddDataFn('area', g, sources, true);\n          break;\n      }\n      return g;\n    };\n\n    return graphBuilder();\n});\n","\n/**\n * @fileOverview\n * d3 Selection group size helpers.\n */\ndefine('d3-ext/size',['d3'], function(d3) {\n  'use strict';\n\n  /**\n   * Determines if the selection's node is a <g> node.\n   * @param {d3.selection} selection\n   * @return {Boolean}\n   */\n  function isGnode(selection) {\n    return !selection.empty() && selection.node().tagName === 'g';\n  }\n\n  /**\n   * Appends a layout rect if it doesn't exist, otherwise returns\n   *   the existing one.\n   * @param {d3.selection} selection\n   * @return {d3.selection}\n   */\n  function lazyAddLayoutRect(selection) {\n    var layoutRect;\n\n    layoutRect = selection.select('.gl-layout');\n    if (layoutRect.empty()) {\n      layoutRect = selection.append('rect')\n        .attr({\n          'class': 'gl-layout',\n          fill: 'none'\n        });\n    }\n    return layoutRect;\n  }\n\n  /**\n   * d3 selection width\n   * Returns width attribute of a non-group element.\n   * If element is a group,\n   *   it returns the 'gl-width' attribute, if it's defined.\n   *   else it returns the bounding box width.\n   * @param {Number} w\n   * @return {Number|d3.selection}\n   */\n  d3.selection.prototype.width = function(w) {\n    var width, nonGnode;\n\n    // Getting.\n    if (!arguments.length) {\n      width = this.attr('gl-width');\n      if (width) {\n        return parseFloat(width);\n      }\n      // NOTE: Prevent Firefox DOM exception.\n      if (this.attr('display') === 'none') {\n        return 0;\n      }\n      return this.node().getBBox().width;\n    }\n    // Setting.\n    if (isGnode(this)) {\n      this.attr({\n        'gl-width': w\n      });\n      nonGnode = lazyAddLayoutRect(this);\n    } else {\n      nonGnode = this;\n    }\n    nonGnode.attr({\n      width: w\n    });\n    return this;\n  };\n\n  /**\n   * d3 selection height\n   * Returns height attribute of a non-group element.\n   * If element is a group,\n   *   it returns the 'gl-height' attribute, if it's defined.\n   *   else it returns the bounding box height.\n   * @param {Number} h\n   * @return {Number|d3.selection}\n   */\n  d3.selection.prototype.height = function(h) {\n    var height, nonGnode;\n\n    // Getting.\n    if (!arguments.length) {\n      height = this.attr('gl-height');\n      if (height) {\n        return parseFloat(height);\n      }\n      // NOTE: Prevent Firefox DOM exception.\n      if (this.attr('display') === 'none') {\n        return 0;\n      }\n      return this.node().getBBox().height;\n    }\n    // Setting.\n    if (isGnode(this)) {\n      this.attr({\n        'gl-height': h\n      });\n      nonGnode = lazyAddLayoutRect(this);\n    } else {\n      nonGnode = this;\n    }\n    nonGnode.attr({\n      height: h\n    });\n    return this;\n  };\n\n  /**\n   * d3 selection size\n   * If element is a group,\n   *   it sets the gl-width and gl-height attributes.\n   * else it returns width and height attribute of the element.\n   *\n   * @param {Number} width\n   * @param {Number} height\n   * @return {Array|d3.selection}\n   */\n  d3.selection.prototype.size = function(width, height) {\n    // No args, return current width/height.\n    if (!arguments.length) {\n      return [\n        this.width(),\n        this.height()\n      ];\n    }\n    // Has args, set width/height.\n    return this.width(width).height(height);\n  };\n\n  return d3;\n});\n","\n/**\n * @fileOverview\n * d3 Selection position helpers.\n */\ndefine('d3-ext/position',[\n  'd3',\n  'core/function'\n], function(d3, fn) {\n  /*jshint validthis: true */\n  'use strict';\n\n  function getPosition(pos, node, parent) {\n    var x = 0, y = 0;\n    switch(pos) {\n      case 'center':\n        x = (parent.width() - node.width())/2;\n        y = (parent.height() - node.height())/2;\n      break;\n      case 'center-top':\n        x = (parent.width() - node.width())/2;\n        y = 0;\n      break;\n      case 'center-bottom':\n        x = (parent.width() - node.width())/2;\n        y = parent.height() - node.height();\n      break;\n      case 'center-left':\n        y = (parent.height() - node.height())/2;\n      break;\n      case 'center-right':\n        x = parent.width() - node.width();\n        y = (parent.height() - node.height())/2;\n      break;\n      case 'top-left':\n      break;\n      case 'top-right':\n        x = parent.width() - node.width();\n      break;\n      case 'bottom-left':\n        y = parent.height() - node.height();\n      break;\n      case 'bottom-right':\n        x = parent.width() - node.width();\n        y = parent.height() - node.height();\n      break;\n    }\n    return [x, y];\n  }\n\n  /**\n   * Positions an element with respect to its parent.\n   * Position may be: center, top-left, top-right, bottom-left etc\n   * Also takes the position offsets for x and y axis.\n   */\n  function position(pos, offsetX, offsetY) {\n    offsetX = offsetX || 0;\n    offsetY = offsetY || 0;\n\n    this.each(function() {\n      var node = d3.select(this),\n          parent = d3.select(this.parentNode),\n          x, y, posXY;\n      posXY = getPosition(pos, node, parent);\n      x = posXY[0] + offsetX;\n      y = posXY[1] + offsetY;\n      if (this.tagName === 'g') {\n        node.attr('transform', 'translate(' + [x, y] +')');\n      } else {\n        node.attr({ x: x, y: y });\n      }\n    });\n    return this;\n  }\n\n  d3.selection.prototype.position = position;\n\n  /**\n   * Centers the selected element(s). Also takes offsets for\n   * x and y axis.\n   */\n  d3.selection.prototype.center = fn.partial(position, 'center');\n\n  return d3;\n});\n","\n/**\n * @fileOverview\n * d3 selection layout helpers.\n */\ndefine('d3-ext/layout',[\n  'd3',\n  'd3-ext/position'\n], function(d3) {\n  'use strict';\n\n  /**\n   * Layout function that arranges its child elements, either\n   * horizontally or vertically with a gap.\n   */\n  d3.selection.prototype.layout = function(settings) {\n    settings = settings || {};\n    var type = settings.type || 'horizontal',\n        gap = settings.gap || 0,\n        ignore = settings.ignore || 'gl-layout',\n        position = settings.position;\n\n    this.each(function() {\n      var node, offset = 0;\n      d3.selectAll(this.childNodes).each(function () {\n        node = d3.select(this);\n        if (node.classed(ignore)) {\n          return;\n        }\n        if (type === 'horizontal') {\n          node.position('center-left', offset, 0);\n          offset += node.width() + gap;\n        } else if (type === 'vertical') {\n          node.position('center-top', 0, offset);\n          offset += node.height() + gap;\n        }\n      });\n    });\n    if (position) {\n      this.position(position);\n    }\n    return this;\n  };\n\n  return d3;\n});\n","\n/**\n * @fileOverview\n * d3 Selection group border helpers.\n */\ndefine('d3-ext/border',[\n  'd3',\n  'core/array'\n], function(d3, array) {\n  'use strict';\n  var DEFAULTS;\n\n  DEFAULTS = {\n    color: '#000',\n    style: 'solid',\n    width: [0, 0, 0, 0],\n    dasharrayDotted: [1,1],\n    dasharrayDashed: [5,5],\n    lineBorderClassName: 'gl-line-border',\n    layoutRectClassName: 'gl-layout'\n  };\n\n  /**\n   * Computes the stroke-dasharray value\n   * @see\n   *    https://developer.mozilla.org/en-US/docs/SVG/Attribute/stroke-dasharray\n   * @param  {d3.selection} node\n   * @param  {Object} borderInfo  Contains\n   *  {\n   *    style: border style <'solid'|'dotted'|'dashed'>,\n   *    color: border color <paint>,\n   *    @see http://www.w3.org/TR/SVG/painting.html#SpecifyingPaint\n   *    width: {Array} 4 element array corresponding to\n   *      border width of each edge top, right, bottom and left\n   *      Value : <percentage> | <length> | inherit | 0\n   *      0 represents no border\n   *  }\n   */\n  function getStrokeDashArray(node, borderInfo) {\n    var stroke = [], t, r, b, l, height, width;\n\n    if (borderInfo.style === 'solid') {\n      t = !!borderInfo.width[0];\n      r = !!borderInfo.width[1];\n      b = !!borderInfo.width[2];\n      l = !!borderInfo.width[3];\n      height = node.height();\n      width = node.width();\n\n      if (t) {\n        stroke.push(width);\n      } else {\n        stroke = stroke.concat([0, width]);\n      }\n\n      computeDashOrGap(stroke, r);\n      stroke.push(height);\n\n      computeDashOrGap(stroke, b);\n      stroke.push(width);\n\n      computeDashOrGap(stroke, l);\n      stroke.push(height);\n\n    } else {\n      //TODO: accept dasharray\n      stroke = (borderInfo.style === 'dotted') ?\n        DEFAULTS.dasharrayDotted : DEFAULTS.dasharrayDashed;\n    }\n    return stroke;\n  }\n\n  /**\n   * Computes if a gap needs to be added to the strokedasharray\n   * @param  {Array}  stroke\n   * @param  {Boolean} hasEdge\n   */\n  function computeDashOrGap(stroke, hasEdge) {\n    var mod2 = stroke.length % 2;\n    if (hasEdge && mod2 !== 0 || !hasEdge && mod2 === 0) {\n      stroke.push(0);\n    }\n  }\n\n  /**\n   * Computes the class name for border\n   * @param  {string} style  Style of the border <'solid'|'dashed'|'dotted'>\n   * @param  {string} subClass Subclass to append class name\n   * @return {string} class name for border\n   */\n  function getBorderClass(style, subClass) {\n    return 'gl-' + style + '-border-' + subClass;\n  }\n\n  /**\n   * Adds svg line element based on the coordinates array\n   * @param  {d3.selection} node\n   * @param  {Object} lineInfo\n   *  contains\n   *  {\n   *    x1: x-axis coordinate of the start of the line,\n   *    y1: y-axis coordinate of the start of the line,\n   *    x2: x-axis coordinate of the end of the line,\n   *    y2: y-axis coordinate of the end of the line,\n   *    subClass: postfix for the class name on the line element,\n   *    width: border width <percentage> | <length> | inherit,\n   *    @see http://www.w3.org/TR/SVG/types.html#DataTypePercentage\n   *    @see http://www.w3.org/TR/SVG/types.html#DataTypeLength\n   *    color: border color <paint>\n   *    @see http://www.w3.org/TR/SVG/painting.html#SpecifyingPaint,\n   *    style: border style <'solid'|'dashed'|'dotted'>\n   *  }\n   */\n  function addBorder(node, lineInfo) {\n    var  className, dasharray, line;\n\n    className = getBorderClass(lineInfo.style, lineInfo.subClass);\n    dasharray = lineInfo.style !== 'solid' ?\n      getStrokeDashArray(node, lineInfo) : '';\n    line = node.select('.' + className);\n\n    if (line.empty()) {\n      line = node.append('line');\n    }\n\n    line.attr({\n      x1: lineInfo.x1,\n      y1: lineInfo.y1,\n      x2: lineInfo.x2,\n      y2: lineInfo.y2,\n      'class': className + ' ' + DEFAULTS.lineBorderClassName,\n      'stroke': lineInfo.color,\n      'stroke-width': lineInfo.width,\n      'stroke-dasharray': dasharray.toString()\n    });\n  }\n\n  /**\n   * Applies styled border to the node by\n   * adding svg line elements.\n   * @param  {d3.selection} node\n   * @param  {Object} borderInfo Contains\n   *  {\n   *    style: border style <'solid'|'dotted'|'dashed'>,\n   *    color: border color <paint>,\n   *    @see http://www.w3.org/TR/SVG/painting.html#SpecifyingPaint\n   *    width: [t, r, b, l] {Array} 4 element array corresponding to\n   *      border width of each edge top, right, bottom and left\n   *      Value : <percentage> | <length> | inherit | 0\n   *      0 represents no border\n   *  }\n   */\n  function applyBorder(node, borderInfo) {\n    //TODO: append this to the object\n    var width = 0, lineInfo;\n    lineInfo = {\n      color: borderInfo.color,\n      style: borderInfo.style\n    };\n\n    if (!!borderInfo.width[0]) {\n      width = borderInfo.width[0];\n      lineInfo = {\n        x1: 0,\n        y1: width/2,\n        x2: node.width(),\n        y2: width/2,\n        subClass: 'top',\n        width: borderInfo.width[0],\n        color: borderInfo.color,\n        style: borderInfo.style\n      };\n      addBorder(node, lineInfo);\n    }\n\n    if (!!borderInfo.width[1]) {\n      width = borderInfo.width[1];\n      lineInfo = {\n        x1: node.width() - width/2,\n        y1: 0,\n        x2: node.width() - width/2,\n        y2: node.height(),\n        subClass: 'right',\n        width: borderInfo.width[1],\n        color: borderInfo.color,\n        style: borderInfo.style\n      };\n      addBorder(node, lineInfo);\n    }\n\n    if (!!borderInfo.width[2]) {\n      width = borderInfo.width[2];\n      lineInfo = {\n        x1: 0,\n        y1: node.height() - width/2,\n        x2: node.width(),\n        y2: node.height() - width/2,\n        subClass: 'bottom',\n        width: borderInfo.width[2],\n        color: borderInfo.color,\n        style: borderInfo.style\n      };\n      addBorder(node, lineInfo);\n    }\n\n    if (!!borderInfo.width[3]) {\n      width = borderInfo.width[3];\n      lineInfo = {\n        x1: width/2,\n        y1: 0,\n        x2: width/2,\n        y2: node.height(),\n        subClass: 'left',\n        width: borderInfo.width[3],\n        color: borderInfo.color,\n        style: borderInfo.style\n      };\n      addBorder(node, lineInfo);\n    }\n  }\n\n  /**\n   * Removes any existing borders\n   * @param  {d3.selection} node\n   */\n  function removeExistingBorders(node) {\n    node.selectAll('.' + DEFAULTS.lineBorderClassName)\n      .remove();\n\n    node.select('.' + DEFAULTS.layoutRectClassName)\n      .attr('stroke-dasharray', null);\n  }\n\n  /**\n   * d3 selection border\n   * @param  {string} style Border style <'solid'|'dotted'|'dashed'>\n   * @param  {color} color Border color <paint>,\n   * @see http://www.w3.org/TR/SVG/painting.html#SpecifyingPaint\n   * @param  {Array} width 4 element array where each element\n   *  corresponding to border width of each edge top, right, bottom and left\n   *  Value : <percentage> | <length> | inherit | 0\n   *  0 represents no border\n   */\n  d3.selection.prototype.border = function border(style, color, width) {\n    var rect, borderInfo;\n\n    rect = this.select('.' + DEFAULTS.layoutRectClassName);\n\n    if (!rect.empty()) {\n      borderInfo = {\n        style: style || DEFAULTS.style,\n        color: color || DEFAULTS.color,\n        width: array.getArray(width) || DEFAULTS.width\n      };\n\n      removeExistingBorders(this);\n      applyBorder(this, borderInfo);\n\n      this.attr({\n        'gl-border-color': borderInfo.color,\n        'gl-border-style': borderInfo.style,\n        'gl-border-width': borderInfo.width.toString()\n      });\n    }\n\n    return this;\n  };\n\n  return d3;\n});\n\n","\n/**\n * @fileOverview\n * d3 Selection group backgroundColor helpers.\n */\ndefine('d3-ext/background-color',['d3'], function(d3) {\n  'use strict';\n\n  /**\n   * d3 selection backgroundColor\n   * Sets the fill attr for the node and\n   *   sets the gl-background-color attribute.\n   */\n  d3.selection.prototype.backgroundColor = function(color) {\n    var rect;\n\n    if (this.node().tagName === 'g') {\n      rect = this.select('.gl-layout');\n      if (rect.empty()) {\n        this.size(this.width(), this.height());\n        rect = this.select('.gl-layout');\n      }\n      rect.attr('fill', color);\n      this.attr('gl-background-color', color);\n    }\n    return this;\n  };\n\n  return d3;\n});\n","\n/**\n * @fileOverview\n * d3 Selection clip path helper.\n */\ndefine('d3-ext/clip',[\n  'd3',\n  'core/string'\n],\nfunction(d3, string) {\n  'use strict';\n\n  /**\n   * d3 selection clip\n   *\n   * Adds a clipPath for the <g> element in the selection.\n   */\n  d3.selection.prototype.clip = function() {\n    var layoutRect, defs, clipPath, clipRect;\n\n    if (this.node().tagName !== 'g') {\n      return this;\n    }\n\n    layoutRect = this.select('.gl-layout');\n    if (layoutRect.empty()) {\n      this.size(this.width(), this.height());\n      layoutRect = this.select('.gl-layout');\n    }\n\n    defs = this.select('defs');\n    if (defs.empty()) {\n      defs = this.append('defs');\n    }\n\n    clipPath = defs.select('clipPath');\n    if (clipPath.empty()) {\n      clipPath = defs.append('clipPath')\n        .attr({\n          'class': 'gl-clip-path',\n          id: 'gl-clip-path-' + string.random()\n        });\n    }\n\n    clipRect = clipPath.select('rect');\n    if (clipRect.empty()) {\n      clipRect = clipPath.append('rect');\n    }\n    clipRect.attr({\n      width: this.width(),\n      height: this.height()\n    });\n\n    this.attr({\n      'gl-clip': 'true',\n      'clip-path': 'url(#' + clipPath.attr('id') + ')'\n    });\n    return this;\n  };\n\n  return d3;\n});\n","\ndefine('d3-ext/d3-ext',[\n  'd3',\n  'd3-ext/size',\n  'd3-ext/layout',\n  'd3-ext/position',\n  'd3-ext/border',\n  'd3-ext/background-color',\n  'd3-ext/clip',\n  'd3-ext/select-attr'\n], function(d3) {\n  'use strict';\n  return d3;\n});\n","\n// d3-ext is extending d3. Do not remove the require.\ndefine('core/core',[\n  'core/object',\n  'core/string',\n  'core/array',\n  'core/function',\n  'core/format',\n  'data/selection/selection',\n  'data/dimension/dimension',\n  'graphs/graph',\n  'layout/layouts',\n  'graphs/graph-builder',\n  'components/component',\n  'data/collection',\n  'core/asset-loader',\n  'events/pubsub',\n\n  'd3-ext/d3-ext'\n],\nfunction(obj, string, array, fn, format, selection, dimension, graph,\n    layouts, graphBuilder, component, collection, assets, pubsub) {\n  'use strict';\n\n  var core = {\n    version: '0.0.11',\n    obj: obj,\n    string: string,\n    array: array,\n    fn: fn,\n    format: format,\n    graphBuilder: graphBuilder,\n    graph: graph,\n    layouts: layouts,\n    components: component,\n    data: {\n      selection: selection,\n      dimension: dimension\n    },\n    dataCollection: collection,\n    assetLoader: assets,\n    pubsub: pubsub,\n    // Singleton pubsub instance global to everything.\n    globalPubsub: pubsub.getSingleton()\n  };\n\n  return core;\n});\n","\ndefine('glimpse', [\n  'd3',\n  'core/core'\n],\nfunction (d3, core) {\n  'use strict';\n\n  var glimpse = core;\n  glimpse.d3 = d3;\n\n  return glimpse;\n});\n"]}